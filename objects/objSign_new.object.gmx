<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSign</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>signText = "";  //can be set in creation code

showText = false;
text = 0
str = 0
charCount = 0
text[0] = "This is not the end"
max_text = array_length_1d(text);
h = 16
v = -6
yOffset = 0
xOffset = 0
font = fDefault30_new
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if showText = 1 {
    yOffset = lerp(yOffset, string_height(text[0])*font_get_size(font), 0.2);
    xOffset = lerp(xOffset, string_width(text[0])*font_get_size(font), 0.2);
    /*if str + 1 &lt; array_length_1d(text) {
        with (objPlayer) frozen = 1
        yOffset = lerp(yOffset, string_height(text[str]), 0.2);
        xOffset = lerp(xOffset, string_width(text[str]), 0.2);
    }
    else if str + 1 = array_length_1d(text) and charCount = string_length(text[str]) {
        with (objPlayer) frozen = 0
        yOffset = floor(lerp(yOffset, 0, 0.2));
        xOffset = floor(lerp(xOffset, 0, 0.2));
    }
    /*if keyboard_check_pressed(vk_shift) {
        if str + 1 &lt; array_length_1d(text) and charCount = string_length(text[str]) {
           str += 1
           charCount = 0
        }
    }
    if keyboard_check_pressed(ord("Z")) {
        if charCount &lt; string_length(text[str]) {
            charCount = string_length(text[str])
        }
    }*/
    /*if charCount &lt; string_length(text[str]) {
        charCount += 0.5
        var s_engine = audio_play_sound(sndText, 1, false);
        audio_sound_pitch(s_engine, random_range(0.85, 1.15));
    }*/
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

if (showText)
{
    draw_set_color(c_white);
    draw_set_font(font);
    draw_set_halign(fa_center);
    textc = string_copy(text[str], 1, charCount)
    draw_rectangle_colour(x-((1*xOffset)/2)+h, y-((1*yOffset)/2)+v*(yOffset/font_get_size(font)), x+((1*xOffset)/2)+h, y+((1*yOffset)/2)+v*(yOffset/font_get_size(font)), c_black, c_black, c_black, c_black, 0)
    draw_rectangle_colour(x-((1*xOffset)/2)+h, y-((1*yOffset)/2)+v*(yOffset/font_get_size(font)), x+((1*xOffset)/2)+h, y+((1*yOffset)/2)+v*(yOffset/font_get_size(font)), c_white, c_white, c_white, c_white, 1)
    draw_text(x+(sprite_width/2),y-yOffset,textc);
}
/*
draw_text(view_xview[0]+64, 96+view_yview[0]+64, "h: " + string(h))
draw_text(view_xview[0]+64, 96+view_yview[0]+96, "v: " + string(v))
draw_text(view_xview[0]+64, 96+view_yview[0]+128, "maxtext: " + string(array_length_1d(text)))
draw_text(view_xview[0]+64, 96+view_yview[0]+160, "str: " + string(str))
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
