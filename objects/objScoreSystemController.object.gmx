<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy if there is more than 1 instance of the object
if(instance_number(object_index)&gt;1){
    instance_destroy();
    exit;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize everything


combo = 0;
comboTimer = 0;
comboTimerMax = 1;
global.comboDropRate = 1/50;


global.hitScore = 0;
global.comboMultiplier = 1;
global.combo = 0;
global.maxCombo = 0;


global.unstuckX=400;
global.unstuckY=608-64;

global.freeze=false;

alpha=1;

unstuckBoundary=32;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize the particle system for the scorebar

// -------- Particle System --------
// Run this code at the beginning of your game
global.scorebarpsys = part_system_create();
part_system_depth(global.scorebarpsys, -100000);


// -------- Particle Type --------
// Run this code at the beginning of your game
global.scorebarptyp = part_type_create();
part_type_shape(global.scorebarptyp, pt_shape_pixel);
part_type_color3(global.scorebarptyp, 15525100, 15260123, 15000812);
part_type_alpha2(global.scorebarptyp, 0.99, 0.2);
part_type_life(global.scorebarptyp, 10, 12);
part_type_size(global.scorebarptyp, 0.5, 3, -0.001, 0);
part_type_speed(global.scorebarptyp, 0.36, 0.61, -0.004, 0);
part_type_direction(global.scorebarptyp, 34.41, 256.53, -0.78, 0);
part_type_orientation(global.scorebarptyp, 348.75, 457.24, 1.07, 0, false);
part_type_gravity(global.scorebarptyp, 0, 270);
part_type_blend(global.scorebarptyp, true);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Increment combo
if (global.freeze==false) {
    if(comboTimer&gt;0) comboTimer-=global.comboDropRate;
    else{
        global.combo = 0;
        comboTimer = 0;
    }
    
    
    global.comboMultiplier = 1 + sqrt(global.combo)/2;
    show_debug_message(global.comboMultiplier);
    if(global.combo&gt;global.maxCombo) global.maxCombo = global.combo;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Display the scorebar using the particles


/*repeat(floor(20*comboTimer)){
    partX = view_xview[0] + view_wview[0] - 32*(view_wview/800) - random(128*comboTimer*(view_wview[0]/800));
    partY = view_yview[0] + view_hview[0] - 16*(view_hview/608) + random_range(-12,12)*(view_hview[0]/608);
    part_particles_create(global.scorebarpsys, partX , partY, global.scorebarptyp, 1);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///implement unstuck protection

if(instance_exists(objPlayer)){
    if(objPlayer.x&gt;view_wview[0]+unstuckBoundary+view_xview[0]) {
        kill_player();
    }
    if(objPlayer.x&lt;view_xview[0]-unstuckBoundary) {
        kill_player();
    }
    if(objPlayer.y&gt;view_hview[0]+unstuckBoundary+view_xview[0]) {
        kill_player();
    }
    if(objPlayer.y&lt;view_yview[0]-unstuckBoundary) {
        kill_player();
    }
}

/*
||
    objPlayer.x&lt;view_xview[0]-unstuckBoundary||
    objPlayer.y&gt;view_hview[0]+unstuckBoundary+view_xview[0]||
    objPlayer.y&lt;view_yview[0]-unstuckBoundary
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the score counter widget 
if(global.scoreVisible){
    draw_set_font(fScore);
    draw_set_align(1,1);
    draw_set_colour(c_white);
    draw_set_alpha(alpha);
    //draw_text(room_width-32,room_height-32,string(floor(global.hitScore)));
    //draw_text(room_width-32,room_height-64,"x"+string(global.comboMultiplier));
    draw_text_transformed(view_xview+view_wview-32*(view_wview/800),view_yview+view_hview-32*(view_hview/608),string(floor(global.hitScore)),view_wview/800,view_hview/608,0);
    draw_text_transformed(view_xview+view_wview-32*(view_wview/800),view_yview+view_hview-64*(view_hview/608),"x"+string(global.comboMultiplier),view_wview/800,view_hview/608,0);
    draw_set_font(fDefault12);
    draw_set_align(1,1);
}
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
