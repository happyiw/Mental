<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprAvoidanceController</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>A sample avoidance controller</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set the music used for the avoidance
musicID=musKeepMyMental; //Music used

//Uncomment the following code if the music is loaded externally. 
//In this example, the file would be named "Music\Avoidance.ogg"
//musicID = scrLoadMusic("Avoidance"); 


//Set the BPM of the song. Use Audacity or similar to detect it.
BPM = 220
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set the attack timings

BEAT_TIME=50/(BPM/60); //BEAT_TIME = time between beats in frames. Calculated from the BPM

//Add attacks using avoidance_add_attack. "END" should always be last
numTimings=0;
var BT=BEAT_TIME;
attackNames=ds_list_create();
attackTimings=ds_list_create();
avoidance_add_attack("Intro",0);
avoidance_add_attack("Segment №2",1307);
avoidance_add_attack("Segment №3",2354)
avoidance_add_attack("Segment №4",3335);
avoidance_add_attack("Segment №5",4130);
avoidance_add_attack("Segment №6",4940);
avoidance_add_attack("Drop",5810);
//avoidance_add_attack("FM Outro",7200);
avoidance_add_attack("End",8200);
blastTag=0;

switchAngle1 = 75;
switchAngle2 = 165;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set the debug keys

numDebugKeys=0;
debugKeys=ds_list_create();
debugKeyTimings=ds_list_create();
debugKeyStartX=ds_list_create();
debugKeyStartY=ds_list_create();


//Add debug keys here using avoidance_add_debug_key
avoidance_add_debug_key(ord("1"),500);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set up the internal variables and start the avoidance

attack=0;


t=global.debugAvoidanceStartTime;//4940;
t_music=t;
finish=false;
RealStep=0;


startTiming=0;
endTiming=attackTimings[|numTimings-1];//floor(audio_sound_length(musicID)*50);

if(instance_number(object_index)&gt;1) {
    
    instance_destroy();
    exit;
}

music_play(musicID,false);


//Reset infjump, nodeath and player gravity to avoid replay/restart bugs
global.noDeath=false; 
global.infJump=false; 
global.grav=1;


highlight=-1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set up end room and boss item


autoWarp=true;

roomTo=rResults; //set the room to go to at the end of the avoidance. Disabled if autoWarp is set to false;
bossItem=-1; //set the boss item to award the player. Default is -1 =&gt; do not award any boss item
secretItem=-1; //set the secret item to award the player. Default is -1 =&gt; do not award any secret item

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>addictional variables</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///lyrics

lyrics_flag=false;

lyrics_p1[0]='例えどんな終わりが来ても';
lyrics_p1[1]='ぼくは歌をうたうよ精一杯'
lyrics_p1[2]='なにもかもが崩れ去っても'
lyrics_p1[3]='忘れないよきみと「わたし」を'
lyrics_p1[4]='永遠に'

lyrics_p2[0] = '遠い昔の日';
lyrics_p2[1] = 'きみはぼくを造り上げた';
lyrics_p2[2] = '失敗ばかりで';
lyrics_p2[3] = '諦めかけてたんだよね';

lyrics_p2[4] = '魂を宿す';
lyrics_p2[5] = 'それはとても難しくて';
lyrics_p2[6] = 'ぼくが歌ったら';
lyrics_p2[7] = '懐かしそうに微笑んだ';

lyrics_p2[8] = 'きみと過ごした';
lyrics_p2[9] = '幾年かの日々は';
lyrics_p2[10] = 'ぼくにこころを';
lyrics_p2[11] = '芽生えさせてくれたんだ'

lyrics_string_length = 0;
lyrics_string_order = 0;

lyrics_x = random_range(180,220)
lyrics_y = 304+(random_range(128,160)*choose(-1,1))/1.3;
lyrics_x_shift = 0//random_range(-4,4);
lyrics_y_shift = 0//random_range(-4,4);
lyrics_shift_range=0;

lyrics_halign=fa_left;
lyrics_valign=fa_bottom;

lyrics_alpha = 0;

lyrics_font = fKMM;

lyrics_color=c_white;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///extra stuff

//global.scoreVisible = true;
//global.BLCscoreVisible = true;
px=0;
py=0;
//player coordinates
vx=0;
vy=0;
//view coordinates

save_pb=false;

//1st segment stuff

if t==0 {
    s1_darkness = instance_create(0,0,objHappy_Darkness);
    s1_darkness.image_blend=c_black;
    s1_darkness.tag='s1_fade_out'
    s1_darkness_blink = instance_create(0,0,objHappy_Darkness);
    s1_darkness_blink.image_blend=c_black;
    s1_darkness_blink.tag='s1_blink'
    s1_darkness_blink.depth=s1_darkness.depth+1;
    s1_spotlight = instance_create(64,64/1.3,objHappy_Spotlight);
    s1_spotlight.image_xscale=800/(800-128);
    s1_spotlight.image_yscale=s1_spotlight.image_xscale;
    s1_spotlight.image_alpha=0.15;
    s1_spotlight='s1_spotlight'
    s1_ugly_bg = instance_create((800-(800*0.9))/2,(608-(608*0.9))/2,objHappy_Darkness);
    s1_ugly_bg.sprite_index=sprHappy_Ugly;
    s1_ugly_bg.image_xscale=0.9;
    s1_ugly_bg.image_yscale=0.9;
    s1_ugly_bg.image_alpha=0.5;
    s1_ugly_bg.depth=1000;
    s1_ugly_bg.tag='s1_ugly'
    //s1_ugly_bg.image_blend=merge_color(c_white,c_maroon,0.1);
    with(objBlock) { 
        if y==352 {
            visible=true;
            image_alpha=0.1;
        }
    }
}


//4th and 5th segment's line stuff;

draw_line_flag=false;

line_alpha=0;
line_color=c_white;

line_part='S4'
y1=random_range(2,6);
y2=random_range(2,6);
y3=random_range(2,6);
y4=random_range(2,6);

//4th segment variables
s4_xx=400+random_range(-96,96);
s4_yy=304-random_range(16,64);
s4_spiral_spin_case=choose(-1,1);
s4_penta_funny_spin=choose(0,1)

//5th segment
//global.s5_side=choose(-1,1)        //1 - left; -1 - right

global.s5_inside_star=false;

tc_distance = 64;

//7th segment
s7_spiral_angle=45;

s7_pdist=0//point_distance(_x,_y,0,608);
s7_angle=random(360);
s7_rd = random(64)

//removing tiles, because i dont need it

for (var xx=0; xx&lt;800; xx+=32) {
    var tile;
    tile = tile_layer_find(1000000,xx,0)
    var tile1;
    tile1 = tile_layer_find(1000000,xx,576)
    if tile_get_alpha(tile) &gt; 0 {
        tile_set_alpha(tile,0)
        tile_set_alpha(tile1,0)
    }
}
for (var yy=0; yy&lt;608; yy+=32) {
    var tile2;
    tile2 = tile_layer_find(1000000,0,yy)
    var tile3;
    tile3 = tile_layer_find(1000000,768,yy)
    if tile_get_alpha(tile2) &gt; 0 {
        tile_set_alpha(tile2,0)
        tile_set_alpha(tile3,0)
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///stuff for practice
if global.debugAvoidanceStartTime==1299 or global.debugAvoidanceStartTime==2429 {
    instance_destroy(objBlock);
    if global.debugAvoidanceStartTime==1299 {
        s1_ugly_bg = instance_create((800-(800*0.9))/2,(608-(608*0.9))/2,objHappy_Darkness);
        s1_ugly_bg.sprite_index=sprHappy_Ugly;
        s1_ugly_bg.image_xscale=0.9;
        s1_ugly_bg.image_yscale=0.9;
        s1_ugly_bg.image_alpha=0.5;
        s1_ugly_bg.depth=1000;
        s1_ugly_bg.tag='s1_ugly'
        s1_ugly_bg.image_blend=c_red;
        s1_spotlight = instance_create(0,0,objHappy_Spotlight);
        s1_spotlight.image_alpha=0.25;
    }
    spotlight = instance_create(0,0,objHappy_Spotlight);
    spotlight.tag='s2_spotlight';
    spotlight.image_alpha=0.5;
    //view_xview[0]=-2000;
    if global.debugAvoidanceStartTime==2429 {
        blink = instance_create(0,0,objHappy_Darkness);
        blink.image_blend=c_black;
        blink.tag='s2_end_blink';
    }
}
if global.debugAvoidanceStartTime==4129 {
    view_xview[0]=90;
    view_yview[0]=view_xview[0]/1.3;
    view_wview[0]=800-view_xview[0]*2;
    view_hview[0]=608-view_yview[0]*2;
    objPlayerStart.x=400;
    objPlayerStart.y=304-32;
    instance_destroy(objBlock);
    for (xx=0; xx&lt;=800; xx+=32) {
        block = instance_create(xx,352-26,objBlock);
        //block.visible=true;
        block.depth=0;
        block.tag='s4_platform';
        block.image_yscale=0.5
    }
    for (yy=0; yy&lt;608; yy+=32) {
        block2 = instance_create(70,yy,objBlock);
        block2.depth=0;
        block2.tag='s4_wall_one';
        block3 = instance_create(700,yy,objBlock);
        block3.depth=0;
        block3.tag='s4_wall_two';
    }
    var a = instance_create(view_xview[0]-12,view_yview[0]-12,objHappy_Spotlight);
    a.image_xscale=(view_wview[0]+24)/800;
    a.image_yscale=(view_hview[0]+24)/608;
    with(objPlayer) { frozen=false; vspeed=0; }
    draw_line_flag=true;
    line_alpha=1;
}

if global.debugAvoidanceStartTime==4129 or global.debugAvoidanceStartTime==4929 {
    glitch_transition = instance_create(400,304,objHappy_Glitch);
    glitch_transition.image_alpha=0.2;
    glitch_transition.image_speed=4/50;
    glitch_transition.depth=50;
    
    spotlight = instance_create(0,0,objHappy_Spotlight);
    spotlight.tag='s2_spotlight';
    spotlight.image_alpha=0.5;
    
    if global.debugAvoidanceStartTime==4929 {
        view_xview[0]=-1000;
        
        var darkness_transition = instance_create(0,0,objHappy_Darkness);
        darkness_transition.image_blend=c_black;
        darkness_transition.depth=-1002;
        darkness_transition.image_alpha=1.02;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Practice blocker
pb_max=1
if global.avoidance_pb&gt;1300 {
    pb_max=2
}
if global.avoidance_pb&gt;2430 {
    pb_max=3
}
if global.avoidance_pb&gt;3230 {
    pb_max=4
}
if global.avoidance_pb&gt;4130 {
    pb_max=5
}
if global.avoidance_pb&gt;4930 {
    pb_max=6
}
if global.avoidance_pb&gt;5830 {
    pb_max=7
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Call the cleanup event
event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Anti-desync - set RealStep according to music time
if (!instance_exists(objPlayer))or(input_check_pressed(KEY.RESTART))
or(keyboard_check_pressed(vk_f2)) {
    if (!save_pb) {
        savedata_set_persistent("avoidance pb",global.avoidance_pb);
        savedata_save(false);
        save_pb=true;
    }
}
RealStep += room_speed * delta_time / 1000000;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Increment timer, sync to music
if(!instance_exists(objAvoidanceMarker)){
     instance_destroy();
     exit;
}

if (!global.practiceOn) {
    global.avoidance_pb=max(global.avoidance_pb,t);
}

if (instance_exists(objPlayer)) {
t++;
}
/*else {
    if (!save_pb) {
        savedata_set_persistent("avoidance pb",global.avoidance_pb);
        savedata_save(false);
        save_pb=true;
    }
}*/
t_music++;




//Anti-desync taken from Shift Engine.

if(t &gt; 0){
    var music_t = audio_sound_get_track_position(global.currentMusic) * 50;
    if(abs(t_music - music_t) &gt; 5){
        audio_sound_set_track_position(global.currentMusic,t_music / 50);
    }
}
if global.debugMode and keyboard_check_pressed(vk_space) {
    show_debug_message(t)
}

if global.debugMode and keyboard_check_pressed(ord("T")) {
    global.debugAvoidanceStartTime = get_integer('Start time', 0)-1
    global.debugAvoidanceStartTime = max(0,global.debugAvoidanceStartTime);
    
    //in case if i want to start from the beginning, but too lazy to press 1
}
if(attack&lt;numTimings-1){
    if(t&gt;attackTimings[| attack+1]){
        attack++;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debug timeline and keys

if(global.debugMode){
    if(keyboard_check_pressed(vk_space)){ //Set a debug snap on SPACE
        global.debugSnaps[global.numDebugSnaps]=t;
        global.numDebugSnaps++;
        show_debug_message(string(t));
    }
    if(point_in_rectangle(mouse_x,mouse_y,32,0,room_width-32,64)&amp;&amp;mouse_check_button_pressed(mb_left)){ //Navigate the timeline by clicking on it
        var trackPos=lerp(startTiming,endTiming,(mouse_x-32)/(room_width-64))
        avoidance_jump_to_timing(trackPos);
    }
    
    //Jump to a debug snap by clicking on it
    var spacing = 32;
    for(var i=0;i&lt;global.numDebugSnaps;++i){
        var snapX=room_width-64;
        var snapY=64+spacing*(i+1)
        if(point_in_rectangle(mouse_x,mouse_y,snapX,snapY,snapX+64,snapY+spacing)){
            highlight=i;
            if(mouse_check_button_pressed(mb_left)){
                var trackPos = global.debugSnaps[i];
                avoidance_jump_to_timing(trackPos);
            }
        }
    }
    //User made debug keys
    for(var i=0;i&lt;numDebugKeys;i++){
        if(keyboard_check_pressed(debugKeys[|i])){
            var trackPos = debugKeyTimings[|i];
            avoidance_jump_to_timing(trackPos);
            with(objPlayer){
                if(other.debugKeyStartX[|i]!=-1) x = other.debugKeyStartX[|i];
                if(other.debugKeyStartY[|i]!=-1) y = other.debugKeyStartY[|i];
            }
        }
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>objMainAvoidance</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attacks
var ct=t-attackTimings[|attack];
var gt=t;
var BT=BEAT_TIME;

if(!instance_exists(objPlayer)) exit;

/*switch(attackNames[|attack]){ //Main attack loop
    case "Intro":
    {   
        if(ct==1){
        
            var darkness=instance_create(0,0,objPShaderRectangle);
            darkness.shader=shEasyShaderExample;
            darkness.intensity=0;
            darkness.image_alpha=1.0;
            darkness.depth=-999999;
            darkness.image_blend=c_black;
            instance_fade_out(darkness,50);
            
            
            var shBG=instance_create(0,0,objPShaderRectangle);
            shBG.shader=shPlasma;
            shBG.intensity=0.1;
            shBG.image_alpha=.25;
            shBG.depth=9999999;
            var sh=instance_create(0,0,objPShaderEffect);
            sh.shader=shChromaticAberration2;
            sh.intensity=0.00;
            instance_change_variable(sh,"intensity",0.01,floor(8*BT),tween_linear);
        }
    
        if(on_beat(ct,0.5*BT,1)){
            var aa = random(360);
            var bx = random_range(200,600);
            var by = random_range(32,128);
            spawn_circle(bx,by,aa,32,2+12*ct/(8*BT),objAvoidanceBullet,"intro_circle");
            spawn_circle(bx,by,aa,32,3+16*ct/(8*BT),objAvoidanceBullet,"intro_circle_small");
            with(objAvoidanceBullet){
                sprite_index=sprPCircle;
                image_index=1;
                if(tag=="intro_circle_small"){
                    sprite_index=sprBulletRazzor;
                    image_xscale=0.75;
                    image_yscale=0.25;
                    image_angle=direction;   
                }
            }
        }
        break;
    }
    case "Intro_Anti_Aimed":
    {
        if(ct==1){
            with(objPShaderEffect){
                intensity=0.02;
                instance_change_variable(id,"intensity",0.002,floor(4*BT)-2,tween_linear);
            }
            view_screen_shake(8,8);
            with(objAvoidanceBullet){
                image_xscale*=4;
                image_yscale*=4;
                direction=point_direction(objPlayer.x,objPlayer.y,x,y);
                image_angle=direction;
                speed=24;
                destroyOutside=true;
            }
            for(var i=-1;i&lt;2;i++){
                var bx = 400 - 200*i - 16;
                var by = 608 - 128;
                block_create(bx,by,1000000,bCMI,32,96);
                var bullet=instance_create(bx,by+32,objAvoidanceBullet);
                bullet.Type = "Hold";
                with(bullet) path_start(pAroundBlock,3,path_action_restart,false);
                bullet.image_index=8;
                bullet.tag="around_block";
            }
        }   
        var cct = ct mod floor(8*BT);
        if(ct&lt;floor(31*BT)){
            if(cct==1){
                with(objPShaderEffect){
                    intensity=0.002;
                }
            }else if(cct==floor(4*BT)){
                with(objPShaderEffect){
                    intensity=0.01;
                }
            }
        }
        if(on_beat(cct,BT,1)&amp;&amp;cct&lt;floor(4*BT)){
            var N = 31;
            var bx = 400;
            var by = 0;
            var aa = point_direction(bx,by,objPlayer.x,objPlayer.y)+180;
            //spawn_circle(bx,by,aa,N,12,objAvoidanceBullet,"intro_circle");
            spawn_circle(bx,by,aa,N,18,objAvoidanceBullet,"intro_circle_small_2");
            spawn_circle(bx,by,aa,N,17,objAvoidanceBullet,"intro_circle_small_2");
            spawn_circle(bx,by,aa,N,16,objAvoidanceBullet,"intro_circle_small_2");
            spawn_circle(bx,by,aa,N,15,objAvoidanceBullet,"intro_circle_small_2");
            with(objAvoidanceBullet){
                if(tag=="intro_circle_small_2"){
                    image_index=6;
                    sprite_index=sprBulletRazzor;
                    image_xscale=0.75;
                    image_yscale=0.25;
                    image_angle=direction;   
                    destroyOutside=true;
                    blastTag=speed-15;
                }
            }
        }
        if(cct==floor(4*BT)){
            with(objAvoidanceBullet){
                if(tag=="intro_circle_small_2") speed=0;
            }
            blastTag=0;
        }
        if(cct==floor(4*BT)||cct==floor(4.5*BT)||cct==floor(5*BT)||cct==floor(5.5*BT)){
            
            with(objAvoidanceBullet){
                if(tag=="intro_circle_small_2"){
                    if(blastTag==other.blastTag){
                        image_xscale*=3;
                        image_yscale*=3;
                        instance_change_variable(id,"image_xscale",0.75,30,tween_sine_out);
                        instance_change_variable(id,"image_yscale",0.25,30,tween_sine_out);
                        
                        speed=random_range(4,5);
                        direction = random(360);
                        image_angle = direction;
                        tag="intro_circle_small_2_spawn";
                    }
                }
            }
            blastTag++;
        }
        if(ct==floor(31*BT)){
            view_screen_shake(8,8);
            with(objPShaderEffect) shader=shStaticInvert;
            with(objAvoidanceBullet) {
                Type="Hold";
                speed/=5;
            }
        }
        break;
    }
    case "Intro Beatdown":
    {   
    
        if(ct==1){
            with(objPShaderEffect) shader=shChromaticAberration2;
            with(objAvoidanceBullet){
                if(tag!="around_block"){
                    image_xscale*=4;
                    image_yscale*=4;
                    direction=point_direction(objPlayer.x,objPlayer.y,x,y);
                    image_angle=direction;
                    speed=24;
                    destroyOutside=true;
                }else{
                    path_speed*=0.5;
                }
            }
        }
        var cct = ct mod floor(8*BT);
        
        if(cct==2||cct==floor(0.75*BT)||cct==floor(1.5*BT)||cct==floor(2.25*BT)||cct==floor(3*BT)){
            view_screen_shake(24,8);
            view_angle[0]=random_range(-15,15);
            with(objPShaderEffect){
                intensity=0.03;
                instance_change_variable(id,"intensity",0.002,10,tween_linear);
            }
            
            var aa = random(360);
            var bx = random_range(200,600);
            var by = random_range(-15,15);
            spawn_circle(bx,by,aa,6,8,objAvoidanceBullet,"ao_circle");
            with(objAvoidanceBullet){
                if(tag=="ao_circle"){
                    sprite_index=sprPCircle;
                    image_index=2;
                    image_xscale=8;
                    image_yscale=8;
                    image_angle=direction;   
                    gravity=0.3;
                    destroyOutside=true;
                    Type="Hold";
                    instance_scale(id,image_xscale/4,floor(4*BT),tween_linear);
                    
                }
            }
        }
        if(cct==floor(3*BT)){
            view_rotate(0,30,tween_sine_out);
        }
        with(objAvoidanceBullet){
            if(tag=="ao_circle") if(x&gt;800-32&amp;&amp;hspeed&gt;0||x&lt;32&amp;&amp;hspeed&lt;0) hspeed=-hspeed;
        }
        if(on_beat(ct,8,2)){
            with(objAvoidanceBullet){
                if(tag=="ao_circle"){
                    var trail=object_copy(objAvoidanceCosmetic);
                    trail.speed=random(5);
                    trail.direction=random(360);
                    instance_shrink_out(trail,30);
                }
            }
        }
        break;
    }
    case "Intro Beatdown_Explosions":
    {
        if(ct==1){
            
        }
        if(on_beat(ct,4*BT,2)||ct&gt;floor(8*BT)&amp;&amp;on_beat(ct,2*BT,2)||ct&gt;floor(12*BT)&amp;&amp;on_beat(ct,BT,2)){
            view_screen_shake(8,8);
            with(objPShaderEffect){
                intensity=0.01;
                instance_change_variable(id,"intensity",0.002,10,tween_linear);
            }
            repeat(40){
                var bullet = instance_create_ext(400,0,objAvoidanceBullet,random_range(2,18),-random(180),1,"beatdown_explosions");
            }
            with(objAvoidanceBullet){
                if(tag=="beatdown_explosions"){
                    image_index=6;
                    sprite_index=sprBulletRazzor;
                    image_xscale=0.75*3;
                    image_yscale=0.25*3;
                    instance_change_variable(id,"image_xscale",0.75,30,tween_sine_out);
                    instance_change_variable(id,"image_yscale",0.25,30,tween_sine_out);
                    image_angle=direction;   
                    destroyOutside=true;
                }
            }
        }
        if(ct==floor(15*BT)){
            with(objPShaderEffect){
                shader=shStaticInvert;
            }
        }   
        break;
    }
    case "Switching Streams":
    {   
        var cct = ct%floor(8*BT);
        //switchAngle1++;
        //switchAngle2+=1.5;
        if(ct==1){
            //burst away
            with(objPShaderEffect){
                shader=shChromaticAberration2;
                intensity=0.1;
                instance_change_variable(id,"intensity",0,50,tween_sine_out);
            }   
            with(objPShaderRectangle) instance_destroy();
            for(var i=-1;i&lt;2;i++){
                var bx = 400 - 200*i - 16;
                var by = 608 - 128;
                block_break(bx,by,1000000);
                
            }
            view_screen_shake(8,8);
            with(objPShaderEffect){
                intensity=0.01;
                instance_change_variable(id,"intensity",0.002,10,tween_linear);
            }
            with(objAvoidanceBullet){
                if(tag=="around_block"){
                    path_end();
                    
                }
                image_xscale*=4;
                image_yscale*=4;
                direction=point_direction(objPlayer.x,objPlayer.y,x,y);
                image_angle=direction;
                speed=24;
                destroyOutside=true;
            }
            
            spawn_circle(400,0,random(360),80,24,objAvoidanceBullet,"combo_circle");
            with(objAvoidanceBullet){
                if(tag=="combo_circle"){
                    image_index=0;
                    sprite_index=sprBulletRazzor;
                    image_xscale=3*0.75;
                    image_yscale=3*0.25;
                    image_angle=direction;   
                    destroyOutside=true;
                }
            }
            //fast circle burst to allow the player to maintain their combo
            
            
        }
        //switching streams
        if(on_beat(ct,2,1)){
            
            if(cct&lt;floor(4*BT)){
                    var ca=switchAngle1; 
                    var ctag="switching_stream_1";
            }else{
                    var ca=switchAngle2;  
                    var ctag="switching_stream_2";
            }
            var ccy=random_range(-400,400);
            var ccx=400;
            var cx = 400+ccx*dcos(ca)-ccy*dsin(ca);
            var cy = 304-ccx*dsin(ca)-ccy*dcos(ca);
            
            var bullet = instance_create_ext(cx,cy,objAvoidanceBullet,12,ca+180+random_range(-5,5),1,ctag);
            bullet.destroyOutside=false;
            if(cct&lt;floor(4*BT)){
                bullet.image_index=0;
            }
        }
        if(cct==1){
            with(objAvoidanceBullet){
                if(tag=="switching_stream_2"){
                    image_alpha=0.5;
                    killer=false;
                    speed=0;
                }else if(tag=="switching_stream_1"){
                    image_alpha=1.0;
                    killer=true;
                    speed=12;
                }
            }
            with(objAvoidanceCosmetic){
                if(tag=="cosmetic"){
                    instance_change_variable(id,"image_index",0,30,tween_sine_out);
                }
            }
        }
        else if(cct==floor(4*BT)){
            with(objAvoidanceBullet){
                if(tag=="switching_stream_1"){
                    image_alpha=0.5;
                    killer=false;
                    speed=0;
                }else if(tag=="switching_stream_2"){
                    image_alpha=1.0;
                    killer=true;
                    speed=12;
                } 
            }
            with(objAvoidanceCosmetic){
                if(tag=="cosmetic"){
                    instance_change_variable(id,"image_index",3,30,tween_sine_out);
                }
            }
        }
        //trails
        
        if(on_beat(ct,8,2)){
            with(objAvoidanceBullet){
                if(tag=="switching_stream_1"||tag=="switching_stream_2"){
                    if(killer){
                        var trail=object_copy(objAvoidanceCosmetic);
                        trail.speed=random(5);
                        trail.direction=random(360);
                        instance_shrink_out(trail,15);
                    }
                }
            }
        }
        
        //background cosmetic particles
        
        var cosm = instance_create_ext(400,304,objAvoidanceCosmetic,8,random(360),0,"cosmetic");
        cosm.image_alpha=0;
        instance_scale(cosm,4,100,tween_linear);
        instance_change_alpha(cosm,0.3,100,tween_linear);
        if(cct&lt;floor(4*BT)){
            cosm.image_index=0;
        }
    
        with(objAvoidanceCosmetic){
            if(x&gt;800+image_xscale||x&lt;-image_xscale||y&gt;608+image_yscale||y&lt;-image_yscale) instance_destroy();
        }
        break;
    }
    case "Switching Streams_Fade":
    {
    
        if(ct==1){
            view_screen_shake(4,floor(4*BT));
            with(objPShaderEffect){
                intensity=0.02;
            }
            
            with(objAvoidanceBullet){
                instance_change_alpha(id,1,20,tween_linear);
                killer=true;
                Type="Hold";
            }
        }
        show_debug_message(lerp(864,-64,ct/(4*BT)));
        with(objAvoidanceBullet){
            if(x&gt;800+view_xview[0]||x&lt;view_xview[0]||y&gt;608+view_yview[0]||y&lt;view_yview[0])
                instance_destroy();
            else if(x&gt;lerp(864,-64,ct/(4*BT))&amp;&amp;tag!="switching_stream_fade"){
                repeat(20){
                    var bullet = object_copy(objAvoidanceBullet);
                    bullet.speed=random_range(6,12);
                    bullet.direction=random(360);
                    bullet.killer=false;
                    bullet.image_alpha=1;
                    bullet.tag="switching_stream_fade";
                    bullet.Type="Collect";
                    bullet.destroyOutside=true;
                }   
                
                instance_destroy();
            }
            if(x-32&gt;lerp(864,-64,ct/(4*BT))){
                gravity=-0.4;
            }
        }
        var cosm = instance_create_ext(400,304,objAvoidanceCosmetic,8,random(360),0,"cosmetic");
        cosm.image_alpha=0;
        instance_scale(cosm,4,100,tween_linear);
        instance_change_alpha(cosm,0.3,100,tween_linear);
        if(!irandom(1)){
            cosm.image_index=0;
        }
    
        with(objAvoidanceCosmetic){
            if(x&gt;800+image_xscale||x&lt;-image_xscale||y&gt;608+image_yscale||y&lt;-image_yscale) instance_destroy();
        }
        
        break;
    }
    case "Switching Streams_2":
    {
        if(ct==1){
            switchAngle1=180-switchAngle1;
            switchAngle2=180-switchAngle2;
            //burst away
            view_screen_shake(8,8);
            with(objPShaderEffect){
                shader=shChromaticAberration2;
                intensity=0.1;
                instance_change_variable(id,"intensity",0,50,tween_sine_out);
            }   
            
            spawn_circle(400,0,random(360),80,24,objAvoidanceBullet,"combo_circle");
            with(objAvoidanceBullet){
                if(tag=="combo_circle"){
                    image_index=0;
                    sprite_index=sprBulletRazzor;
                    image_xscale=3*0.75;
                    image_yscale=3*0.25;
                    image_angle=direction;   
                    destroyOutside=true;
                }
            }
            //fast circle burst to allow the player to maintain their combo
            
            
        }
        //curving switching streams
        var cct = ct%floor(8*BT);
    
        if(on_beat(ct,2,1)){
            
            if(cct&lt;floor(4*BT)){
                    var ca=switchAngle1; 
                    var ctag="switching_stream_1";
            }else{
                    var ca=switchAngle2;  
                    var ctag="switching_stream_2";
            }
            var ccy=random_range(-400,400);
            var ccx=400;
            var cx = 400+ccx*dcos(ca)-ccy*dsin(ca);
            var cy = 304-ccx*dsin(ca)-ccy*dcos(ca);
            
            var bullet = instance_create_ext(cx,cy,objAvoidanceBullet,12,ca+180+random_range(-5,5),1,ctag);
            bullet.destroyOutside=false;
            bullet.curveSpeed=random_range(0,0.5);
            if(cct&lt;floor(4*BT)){
                bullet.image_index=4;
            }else{
                bullet.image_index=6;
            }
        }
        if(cct==1){
            with(objAvoidanceBullet){
                if(tag=="switching_stream_2"){
                    image_alpha=0.5;
                    killer=false;
                    speed=0;
                }else if(tag=="switching_stream_1"){
                    image_alpha=1.0;
                    killer=true;
                    speed=12;
                }
            }
            with(objAvoidanceCosmetic){
                if(tag=="cosmetic"){
                    instance_change_variable(id,"image_index",4,30,tween_sine_out);
                }
            }
        }
        else if(cct==floor(4*BT)){
            with(objAvoidanceBullet){
                if(tag=="switching_stream_1"){
                    image_alpha=0.5;
                    killer=false;
                    speed=0;
                }else if(tag=="switching_stream_2"){
                    image_alpha=1.0;
                    killer=true;
                    speed=12;
                } 
            }
            with(objAvoidanceCosmetic){
                if(tag=="cosmetic"){
                    instance_change_variable(id,"image_index",6,30,tween_sine_out);
                }
            }
        }
        //cosmetic trails
        
        if(on_beat(ct,8,2)){
            with(objAvoidanceBullet){
                if(tag=="switching_stream_1"||tag=="switching_stream_2"){
                    if(killer){
                        var trail=object_copy(objAvoidanceCosmetic);
                        trail.speed=random(5);
                        trail.direction=random(360);
                        instance_shrink_out(trail,15);
                    }
                }
            }
        }
        
        //cosmetic particles
        
        var cosm = instance_create_ext(400,304,objAvoidanceCosmetic,8,random(360),0,"cosmetic");
        cosm.image_alpha=0;
        instance_scale(cosm,4,100,tween_linear);
        instance_change_alpha(cosm,0.3,100,tween_linear);
        if(cct&lt;floor(4*BT)){
            cosm.image_index=4;
        }else{
            cosm.image_index=6;
        }
    
        with(objAvoidanceCosmetic){
            if(x&gt;800+image_xscale||x&lt;-image_xscale||y&gt;608+image_yscale||y&lt;-image_yscale) instance_destroy();
        }
        
        break;
    }
    case "Switching Streams_End":
    
    {
    
    
        //Make sure the curving stuff despawns
        
        with(objAvoidanceBullet){
            if(destroyOutside&amp;&amp;(x&gt;800+view_xview[0]&amp;&amp;hspeed&gt;0||x&lt;view_xview[0]&amp;&amp;hspeed&lt;0||y&gt;608+view_yview[0]&amp;&amp;vspeed&gt;0||y&lt;view_yview[0]&amp;&amp;vspeed&lt;0))
                instance_destroy();
        }
        if(ct&gt;floor(4*BT)){
            switchAngle1+=0.5;
            switchAngle2+=0.5;
        }
        var cct = ct%floor(8*BT);
        if(ct==1){
            with(objAvoidanceBullet){
                if(tag=="switching_stream_1"||tag=="switching_stream_2"){
                    image_alpha=1.0;
                    killer=true;
                    speed=12;
                } 
            }
        }
        if(on_beat(ct,2,1)||ct&gt;floor(4*BT)){
            for(var i=0;i&lt;2;i++){
                if(i==0){
                        var ca=switchAngle1; 
                        var ctag="switching_stream_1";
                }else{
                        var ca=switchAngle2;  
                        var ctag="switching_stream_2";
                }
                var ccy = random_range(-400,400);
                var ccx = 400;
                var cx = 400+ccx*dcos(ca)-ccy*dsin(ca);
                var cy = 304-ccx*dsin(ca)-ccy*dcos(ca);
                
                var bullet = instance_create_ext(cx,cy,objAvoidanceBullet,12+6*(ct&gt;floor(4*BT)),ca+180+random_range(-5,5),1,ctag);
                bullet.destroyOutside=false;
                bullet.curveSpeed=random_range(0,0.5);
                if(i==0){
                    bullet.image_index=4;
                }else{
                    bullet.image_index=6;
                }
                bullet.destroyOutside=true;
            }
        }
        if(ct==floor(4*BT)){
            with(objAvoidanceBullet) speed*=1.5;
            with(objPShaderEffect){
                intensity=0.02;
            }
            view_screen_shake(4,floor(4*BT));
        }
        //cosmetic trails
        if(on_beat(ct,8,2)){
            with(objAvoidanceBullet){
                if(tag=="switching_stream_1"||tag=="switching_stream_2"){
                    if(killer){
                        var trail=object_copy(objAvoidanceCosmetic);
                        trail.speed=random(5);
                        trail.direction=random(360);
                        instance_shrink_out(trail,15);
                    }
                }
            }
        }
        
        //cosmetic particles
        
        var cosm = instance_create_ext(400,304,objAvoidanceCosmetic,8,random(360),0,"cosmetic");
        cosm.image_alpha=0;
        instance_scale(cosm,4,100,tween_linear);
        instance_change_alpha(cosm,0.3,100,tween_linear);
        if(!irandom(1)){
            cosm.image_index=4;
        }else{
            cosm.image_index=6;
        }
        if(ct&gt;floor(4*BT)){
            instance_change_alpha(cosm,0.3,50,tween_linear);
            instance_scale(cosm,4,50,tween_linear);
            cosm.speed*=1.5;
            cosm.curveSpeed=random_range(-0.5,0.5);
        }
        with(objAvoidanceCosmetic){
            if(x&gt;800+image_xscale||x&lt;-image_xscale||y&gt;608+image_yscale||y&lt;-image_yscale) instance_destroy();
        }
        
        break;
    }
    case "Pumping Breaks":
    {   
    
    
        break;
    }
    case "Acid Breaks":
    {   
    
    
        break;
    }
    case "Melodic Stream":
    {   
    
    
        break;
    }
    case "Winding Down":
    {   
    
    
        break;
    }
    case "Acid Breaks 2":
    {   
    
    
        break;
    }
    case "Stopping Beat":
    {   
    
    
        break;
    }
    case "Stretch":
    {   
    
    
        break;
    }
    case "Fragment of Silence":
    {   
    
    
        break;
    }
    case "Ethereal":
    {   
    
    
        break;
    }
    case "Melodic Bridge":
    {   
    
    
        break;
    }
    case "Buildup Streams":
    {   
    
    
        break;
    }
    case "Buildup Wind Down":
    {   
    
    
        break;
    }
    case "Buildup Wind Down 2":
    {   
    
    
        break;
    }
    case "Pre Drop Blasts":
    {   
    
    
        break;
    }
    case "FIRE IN THE HOLE":
    {   
    
    
        break;
    }
    case "Drop":
    {   
    
    
        break;
    }
    case "Drop Acid":
    {   
    
    
        break;
    }
    case "Drop Breakbeat":
    {   
    
    
        break;
    }
    case "Outro":
    {   
    
    
        break;
    }
    case "Final Burst":
    {   
    
    
        break;
    }
    case "END":
    {
        if(ct==1){
        
            if(bossItem!=-1) global.bossItem[bossItem]=1;
            if(secretItem!=-1) global.secretItem[secretItem]=1;
            if(autoWarp){
                with(objPlayer) instance_destroy();
                room_goto(roomTo);
            }
        }
        break;
    }
    default:
    {
        show_debug_message("WARNING: Attack "+attackNames[|attack]+" is empty!");
        break;
    }
}*/


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>happy's (and only happy's) parts</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Seeding, because seed controller didnt work for me somehow
//random_set_seed(t*t)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Segment №1: 0:00 - 0:29 (frames: 0000 - 1307)
if instance_exists(objPlayer) {
if t==1 {
    objPlayer.y=288;
    for (yy=0; yy&lt;608; yy+=32) {
        block2 = instance_create(32,yy,objBlock);
        block2.depth=0;
        block2.tag='s1_wall_one';
        block2.visible=true;
        block2.image_alpha=0//.075
        block3 = instance_create(736,yy,objBlock);
        block3.depth=0;
        block3.tag='s1_wall_two';
        block3.visible=true;
        block3.image_alpha=0//.075
    }
    for (xx=0; xx&lt;800; xx+=32) {
        a=instance_create(xx,352-24,objBlock);
        a.visible=true;
        a.image_alpha=0//.075
        a.depth=0;
        a.tag='s1_wall_three';
    }
}

if t==33 {
    repeat(165) {
        s1_rain = instance_create(irandom(800),irandom(608),objHappy_Bullet_01);
        s1_rain.killer=false;
        s1_rain.Type="Low_alpha";
        s1_rain.aimlock=false;
        s1_rain.direction=270
        s1_rain.speed=random_range(0.5,2);
        s1_rain.sprite_index=sprHappy_MayuCherry;
        s1_rain.image_xscale=random_range(0.2,0.35)+0.115;
        s1_rain.image_yscale=s1_rain.image_xscale;
        s1_rain.image_alpha=0;
        s1_rain.destroyOutside=false;
        s1_rain.persist=true;
        s1_rain.tag='s1_rain'
    }
}

if t==13 {
    var s1_spawner = instance_create(0,0,objHappy_Bullet_trig);
    s1_spawner.cen_x=800;
    s1_spawner.cen_y=608;
    s1_spawner.subtag=s1_spawner.cen_y;
    s1_spawner.len=256
    s1_spawner.dir=90;
    s1_spawner.dir_inc=(180/227);
    s1_spawner.sprite_index=sprHappy_WBCherry;
    s1_spawner.image_xscale=0.2;
    s1_spawner.image_yscale=0.2;
    s1_spawner.image_alpha=0;
    s1_spawner.tag='s1_spawner';
    s1_spawner.subtag=s1_spawner.dir+100;
    
    var s1_spawner = instance_create(0,0,objHappy_Bullet_trig);
    s1_spawner.cen_x=0;
    s1_spawner.cen_y=0;
    s1_spawner.subtag=s1_spawner.cen_y;
    s1_spawner.len=256
    s1_spawner.dir=270;
    s1_spawner.dir_inc=(180/227);
    s1_spawner.sprite_index=sprHappy_WBCherry;
    s1_spawner.image_xscale=0.2;
    s1_spawner.image_yscale=0.2;
    s1_spawner.image_alpha=0;
    s1_spawner.tag='s1_spawner';
    s1_spawner.subtag=s1_spawner.dir+100;
}

if t==90 {
    var s1_spawner = instance_create(0,0,objHappy_Bullet_trig);
    s1_spawner.cen_x=800;
    s1_spawner.cen_y=608;
    s1_spawner.subtag=s1_spawner.cen_y;
    s1_spawner.len=204
    s1_spawner.dir=90;
    s1_spawner.dir_inc=(135/170);
    s1_spawner.sprite_index=sprHappy_WBCherry;
    s1_spawner.image_xscale=0.2;
    s1_spawner.image_yscale=0.2;
    s1_spawner.image_alpha=0;
    s1_spawner.tag='s1_spawner';
    s1_spawner.subtag=s1_spawner.dir+100;
    var s1_spawner = instance_create(0,0,objHappy_Bullet_trig);
    s1_spawner.cen_x=0;
    s1_spawner.cen_y=0;
    s1_spawner.subtag=s1_spawner.cen_y;
    s1_spawner.len=204
    s1_spawner.dir=270;
    s1_spawner.dir_inc=(135/170);
    s1_spawner.sprite_index=sprHappy_WBCherry;
    s1_spawner.image_xscale=0.2;
    s1_spawner.image_yscale=0.2;
    s1_spawner.image_alpha=0;
    s1_spawner.tag='s1_spawner';
    s1_spawner.subtag=s1_spawner.dir+100;
}

if t==147 {
    var s1_spawner = instance_create(0,0,objHappy_Bullet_trig);
    s1_spawner.cen_x=800;
    s1_spawner.cen_y=608;
    s1_spawner.subtag=s1_spawner.cen_y;
    s1_spawner.len=152
    s1_spawner.dir=90;
    s1_spawner.dir_inc=(90/113);
    s1_spawner.sprite_index=sprHappy_WBCherry;
    s1_spawner.image_xscale=0.2;
    s1_spawner.image_yscale=0.2;
    s1_spawner.image_alpha=0;
    s1_spawner.tag='s1_spawner';
    s1_spawner.subtag=s1_spawner.dir+100;
    var s1_spawner = instance_create(0,0,objHappy_Bullet_trig);
    s1_spawner.cen_x=0;
    s1_spawner.cen_y=0;
    s1_spawner.subtag=s1_spawner.cen_y;
    s1_spawner.len=152
    s1_spawner.dir=270;
    s1_spawner.dir_inc=(90/113);
    s1_spawner.sprite_index=sprHappy_WBCherry;
    s1_spawner.image_xscale=0.2;
    s1_spawner.image_yscale=0.2;
    s1_spawner.image_alpha=0;
    s1_spawner.tag='s1_spawner';
    s1_spawner.subtag=s1_spawner.dir+100;
}

if t==315 {
    var s1_spawner = instance_create(0,0,objHappy_Bullet_trig);
    s1_spawner.cen_x=0;
    s1_spawner.cen_y=608;
    s1_spawner.subtag=s1_spawner.cen_y;
    s1_spawner.len=256;
    s1_spawner.dir=0;
    s1_spawner.dir_inc=(180/225);
    s1_spawner.sprite_index=sprHappy_WBCherry;
    s1_spawner.image_xscale=0.2;
    s1_spawner.image_yscale=0.2;
    s1_spawner.image_alpha=0;
    s1_spawner.tag='s1_spawner';
    s1_spawner.subtag=s1_spawner.dir+100;
    var s1_spawner = instance_create(0,0,objHappy_Bullet_trig);
    s1_spawner.cen_x=800;
    s1_spawner.cen_y=0;
    s1_spawner.subtag=s1_spawner.cen_y;
    s1_spawner.len=256;
    s1_spawner.dir=180;
    s1_spawner.dir_inc=(180/225);
    s1_spawner.sprite_index=sprHappy_WBCherry;
    s1_spawner.image_xscale=0.2;
    s1_spawner.image_yscale=0.2;
    s1_spawner.image_alpha=0;
    s1_spawner.tag='s1_spawner';
    s1_spawner.subtag=s1_spawner.dir+100;
}

if t==400 {
    var s1_spawner = instance_create(0,0,objHappy_Bullet_trig);
    s1_spawner.cen_x=800;
    s1_spawner.cen_y=0;
    s1_spawner.subtag=s1_spawner.cen_y;
    s1_spawner.len=204
    s1_spawner.dir=180;
    s1_spawner.dir_inc=(135/150);
    s1_spawner.sprite_index=sprHappy_WBCherry;
    s1_spawner.image_xscale=0.2;
    s1_spawner.image_yscale=0.2;
    s1_spawner.image_alpha=0;
    s1_spawner.tag='s1_spawner';
    s1_spawner.subtag=s1_spawner.dir+100;
    var s1_spawner = instance_create(0,0,objHappy_Bullet_trig);
    s1_spawner.cen_x=0;
    s1_spawner.cen_y=608;
    s1_spawner.subtag=s1_spawner.cen_y;
    s1_spawner.len=204
    s1_spawner.dir=0;
    s1_spawner.dir_inc=(135/150);
    s1_spawner.sprite_index=sprHappy_WBCherry;
    s1_spawner.image_xscale=0.2;
    s1_spawner.image_yscale=0.2;
    s1_spawner.image_alpha=0;
    s1_spawner.tag='s1_spawner';
    s1_spawner.subtag=s1_spawner.dir+100;
}

if t==475 {
    var s1_spawner = instance_create(0,0,objHappy_Bullet_trig);
    s1_spawner.cen_x=800;
    s1_spawner.cen_y=0;
    s1_spawner.subtag=s1_spawner.cen_y;
    s1_spawner.len=152
    s1_spawner.dir=180;
    s1_spawner.dir_inc=(90/75);
    s1_spawner.sprite_index=sprHappy_WBCherry;
    s1_spawner.image_xscale=0.2;
    s1_spawner.image_yscale=0.2;
    s1_spawner.image_alpha=0;
    s1_spawner.tag='s1_spawner';
    s1_spawner.subtag=s1_spawner.dir+100;
    var s1_spawner = instance_create(0,0,objHappy_Bullet_trig);
    s1_spawner.cen_x=0;
    s1_spawner.cen_y=608;
    s1_spawner.subtag=s1_spawner.cen_y;
    s1_spawner.len=152
    s1_spawner.dir=0;
    s1_spawner.dir_inc=(90/75);
    s1_spawner.sprite_index=sprHappy_WBCherry;
    s1_spawner.image_xscale=0.2;
    s1_spawner.image_yscale=0.2;
    s1_spawner.image_alpha=0;
    s1_spawner.tag='s1_spawner';
    s1_spawner.subtag=s1_spawner.dir+100;
}

if t&gt;33 and t&lt;1307 {
    with(objHappy_Bullet_01) {
        if tag=='s1_rain' {
            if y&gt;608 {
                y=2;
                killer=true;
                image_alpha=1;
            }
            if x&lt;0 {
                x=800;
                killer=true;
                image_alpha=1;
            }
            if x&gt;800 {
                x=0;
                killer=true;
                image_alpha=1;
            }
            
            direction=point_direction(400,-304,objPlayer.x,objPlayer.y)//+random_range(-8,8);
            //direction=270-dsin(objMainAvoidance.t/2)*10;
        }
        if tag=='s1_white_thing_fade_in' {
            if image_alpha&lt;1  image_alpha+=0.05; 
            if image_alpha&gt;=1  {
                tag='s1_white_thing';
                killer=true;
            }
        }
        if tag=='s1_white_thingy' {
            if speed&lt;subtag {
                friction=0;
                speed=subtag;
                trail=false;
                curve_real=0;
            }
        }
        if tag=='s1_border1' or tag=='s1_border2' {
            if image_alpha&lt;1 { image_alpha+=0.02; }
        }
    }
    if t&gt;315 and t&lt;415 or t&gt;635 and t&lt;735 or t&gt;940 and t&lt;1040 {
        with(objHappy_Bullet_01) {
            if tag=='s1_white_thingy' or tag=='s1_border' or tag=='s1_border2' {
                if image_alpha&gt;0.25 { image_alpha-=0.01; }
                speed+=0.02;
                if image_alpha&lt;=0.75 { killer=false; }
            }
        }
    }
    if t&gt;33 and t&lt;183 {
        with(objHappy_Bullet_01) {
            if tag=='s1_rain' {
                image_alpha+=0.0075;
            }
        }
    }
    if t==183 {
        with(objHappy_Bullet_01) {
            if tag=='s1_rain' { killer=true; }
        }
    }
    if t&gt;=635 and t&lt;=850 {
        if t mod 10 == 0 {
            var border1 = instance_create(view_xview[0]+EaseLinear(t-635,0,view_wview[0],850-635)+random_range(-8,8),view_yview[0],objHappy_Bullet_01);
            border1.direction=270+random_range(-10,10);
            border1.speed=random_range(1.5,4);
            border1.image_xscale=random_range(0.25,0.5);
            border1.image_yscale=border1.image_xscale;
            border1.aimlock=false;
            border1.image_alpha=0;
            border1.friction=0.1
            border1.tag='s1_border1';
            border1.killer=false;
            var border2 = instance_create(view_xview[0]+view_wview[0]-EaseLinear(t-635,0,view_wview[0],850-635)+random_range(-8,8),view_yview[0]+view_hview[0],objHappy_Bullet_01);
            border2.direction=90+random_range(-10,10);
            border2.speed=random_range(1.5,4);
            border2.image_xscale=random_range(0.25,0.5);
            border2.image_yscale=border2.image_xscale;
            border2.aimlock=false;
            border2.image_alpha=0;
            border2.friction=0.1
            border2.tag='s1_border2';
            border2.killer=false;
        }
    }
    with(objHappy_Bullet_trig) {
        if tag=='s1_spawner' {
            if t mod 13 == 0 {
                s1_white_thing = instance_create(x,y,objHappy_Bullet_01);
                s1_white_thing.image_xscale=random_range(0.25,0.5);
                s1_white_thing.image_yscale=s1_white_thing.image_xscale;
                s1_white_thing.image_alpha=0;
                s1_white_thing.direction=dir;
                s1_white_thing.persist=true;
                s1_white_thing.killer=false;
                s1_white_thing.tag='s1_white_thing_fade_in';
            }
            if dir&gt;subtag { instance_destroy(); }
        }
    }
    if t==260 {
        with(objHappy_Bullet_trig) {
            if tag=='s1_spawner' { instance_destroy(); }
        }
        with(objHappy_Bullet_01) {
            if tag=='s1_white_thing' {
                //repeat(2) {
                    var white_thingy = instance_create(x,y,objHappy_Bullet_01);
                    white_thingy.image_xscale=image_xscale-irandom(0.1);
                    white_thingy.image_yscale=white_thingy.image_xscale;
                    white_thingy.direction=direction;//point_direction(400,608,x,y);
                    white_thingy.speed=random_range(6,12);
                    white_thingy.friction=0.75;
                    white_thingy.tag='s1_white_thingy';
                    white_thingy.subtag=random_range(2,4);
                    white_thingy.trail=true;
                    white_thingy.persist=false;
                    white_thingy.killer=true;
                    white_thingy.curve_real=random_range(2,6)*choose(-1,1);
                //}
                //direction=point_direction(400+50*sign(400-white_thingy.x)*dcos(point_direction(400,608,white_thingy.x,white_thingy.y)),608,x,y);
                speed=random_range(2,6);
                friction=0.5;
                tag='s1_white_thingy';
                subtag=random_range(0.75,1.25);
                trail=true;
                persist=false;
                killer=true;
                curve_real=random_range(2,6)*choose(-1,1);
            }
        }
    }
    if t==555 {
        with(objHappy_Bullet_trig) {
            if tag=='s1_spawner' { instance_destroy(); }
        }
        with(objHappy_Bullet_01) {
            if tag=='s1_white_thing' {
                //repeat(2) {
                    var white_thingy = instance_create(x,y,objHappy_Bullet_01);
                    white_thingy.image_xscale=image_xscale-irandom(0.1);
                    white_thingy.image_yscale=white_thingy.image_xscale;
                    white_thingy.direction=direction//point_direction(400+50*sign(400-white_thingy.x)*dcos(point_direction(400,0,white_thingy.x,white_thingy.y)),0,x,y);
                    white_thingy.speed=random_range(6,12);
                    white_thingy.friction=0.75;
                    white_thingy.tag='s1_white_thingy';
                    white_thingy.subtag=random_range(2,4);
                    white_thingy.trail=true;
                    white_thingy.persist=false;
                    white_thingy.killer=true;
                    white_thingy.curve_real=random_range(2,6)*choose(-1,1);
                //}
                //direction=point_direction(400,0,x,y);
                speed=random_range(2,6);
                friction=0.5;
                tag='s1_white_thingy';
                subtag=random_range(0.75,1.25);
                trail=true;
                persist=false;
                killer=true;
                curve_real=random_range(2,6)*choose(-1,1);
            }
        }
    }
    if t==860 {
        with(objHappy_Bullet_trig) {
            if tag=='s1_spawner' { instance_destroy(); }
        }
        with(objHappy_Bullet_01) {
            if tag=='s1_border1' or tag=='s1_border2' {
                //repeat(2) {
                    var white_thingy = instance_create(x,y,objHappy_Bullet_01);
                    white_thingy.image_xscale=image_xscale-irandom(0.1);
                    white_thingy.image_yscale=white_thingy.image_xscale;
                    white_thingy.direction=direction//point_direction(400+50*sign(400-white_thingy.x)*dcos(point_direction(400,0,white_thingy.x,white_thingy.y)),0,x,y);
                    white_thingy.speed=random_range(6,12);
                    white_thingy.friction=0.75;
                    white_thingy.tag='s1_white_thingy';
                    white_thingy.subtag=random_range(2,4);
                    white_thingy.trail=true;
                    white_thingy.persist=false;
                    white_thingy.killer=true;
                    white_thingy.curve_real=random_range(2,6)*choose(-1,1);
                //}
                //direction=point_direction(400,0,x,y);
                speed=random_range(2,6);
                friction=0.5;
                tag='s1_white_thingy';
                subtag=random_range(0.75,1.25);
                trail=true;
                persist=false;
                killer=true;
                curve_real=random_range(2,6)*choose(-1,1);
            }
        }
    }
    if t==940 {
        for (var distance=128; distance&lt;=128+160; distance+=80) {
            var rand_angle=random(360);
            for (var angle=rand_angle;angle&lt;rand_angle+360;angle+=8) {
                var fade_in_circle = instance_create(400+dcos(angle)*distance,288+dsin(angle)*distance,objHappy_Bullet_01);
                fade_in_circle.killer=false;
                fade_in_circle.image_xscale=random_range(0.25,0.5);
                fade_in_circle.image_yscale=fade_in_circle.image_xscale;
                fade_in_circle.aimlock=false;
                fade_in_circle.image_alpha=0;
                fade_in_circle.direction=point_direction(fade_in_circle.x,fade_in_circle.y,400,288);
                fade_in_circle.tag='s1_fade_in_circle'
                fade_in_circle.subtag=-random_range(20,170);
                fade_in_circle.free_variable[0]=1;
            }
        }
    }
    if t&gt;940 and t&lt;1160 {
        with(objHappy_Bullet_01) {
            if tag=='s1_fade_in_circle' {
                subtag++;
                if subtag&gt;=0 {
                    if image_alpha&lt;1 and free_variable[0]==1 { image_alpha+=0.02; }
                    if image_alpha==1 { killer=true; free_variable[0]=0; }
                }
            }
        }
    }
    if t==1162 {
        with(objHappy_Bullet_01) {
            if tag=='s1_fade_in_circle' {
                speed=random_range(-0.5,1);
            }
        }
        darkness_transition=instance_create(0,0,objHappy_Darkness);
        darkness_transition.image_alpha=0;
        darkness_transition.image_blend=c_black;
        darkness_transition.tag='s1_to_s2'
        
        shader_transition = instance_create(0,0,objPShaderEffect);
        shader_transition.shader = shEasyShaderExample;
        shader_transition.intensity = 0;
        if pb_max==1
            with(objWorld)
                event_user(0);
    }
    if t&gt;1162 and t&lt;1300 {
        with(objAvoidanceBullet) { killer=false; }
        if t&lt;1281 { objAvoidanceBullet.image_blend=merge_color(c_white,c_maroon,(t-1162)/(138*0.75)); }
        with(objHappy_Darkness) {
            if tag=='s1_to_s2' {
                if image_alpha&lt;1 { image_alpha+=0.011; }
            }
        }
        if t&lt;1231 {
            objPShaderEffect.intensity=EaseOutSine(t-1162,0,0.05,69);
        }
        if t&gt;1231 {
            objPShaderEffect.intensity=EaseOutSine(t-1231,0.05,0,69);
        }
        view_xview[0]=EaseInSine(t-1162,64,320,138);
        view_yview[0]=view_xview[0]/1.3;
        view_wview[0]=800-view_xview[0]*2;
        view_hview[0]=608-view_yview[0]*2;
    }
    if t==1261 {
        instance_destroy(objBlock);
        instance_destroy(objHappy_Spotlight);
    }
    if t==1306 {
        instance_destroy(objAvoidanceBullet);
    }
    if t==1299 {
        if global.practiceOn and pb_max==1 {
            instance_destroy(objPlayer);
            music_stop();
            instance_create(0,0,objPracticeEnd);
        }
        //audio_stop_sound(musKeepMyMental);
        //show_message("Youre mom :tf:");
        //game_end();
    }
    if t==1301 {
        instance_destroy(objPShaderEffect);
        instance_destroy(objBlock)
    }
}


//2nd part: Decorations

if t==1 {
    objPlayer.frozen=true;
    
}
if t==43 {
    objPlayer.frozen=false;
}

if t&gt;=33 and t&lt;233 {
    with(objHappy_Darkness) {
        if tag == 's1_fade_out' {
            image_alpha-=0.01
            if image_alpha&lt;=0 { instance_destroy(); }
        }
    }
    view_xview[0]=EaseOutSine(t-33,160,64,200);
    view_yview[0]=view_xview[0]/1.3;
    view_wview[0]=800-view_xview[0]*2;
    view_hview[0]=608-view_yview[0]*2;
    line_alpha=EaseOutSine(t-33,0,0.65,200);
}



/*if t==5 {
    draw_line_flag=true;
    line_color=merge_color(c_white,c_black,random_range(0.65,0.75));
}
if t mod 20 == 0 {
    y1=random_range(2,6);
    y2=random_range(2,6);
    y3=random_range(2,6);
    y4=random_range(2,6);
}*/

if t==1 {
    for (var yy=0; yy&lt;72;yy+=24) {
        switch(yy) {
            case 0: bruh=1;break;
            case 24: bruh=3;break;
            case 48: bruh=6;break;
        }
        for (xx=0; xx&lt;800; xx+=64) {
            var nu_i_hueta_je_eti_vashi_vizuali = instance_create(xx+32,352-24+yy,objHappy_Line);
            nu_i_hueta_je_eti_vashi_vizuali.sprite_index=sprHappy_FuckingLine;
            nu_i_hueta_je_eti_vashi_vizuali.image_xscale=2
            nu_i_hueta_je_eti_vashi_vizuali.image_yscale=0.2
            nu_i_hueta_je_eti_vashi_vizuali.image_alpha=1/bruh;
            nu_i_hueta_je_eti_vashi_vizuali.tag='s1_nu_govoril_je_hueta_chto_ne_ponyatno'
        } 
    }
}

if t&lt;1250 and t mod 25 == 0 {
    with(objHappy_Line) {
        if tag=='s1_nu_govoril_je_hueta_chto_ne_ponyatno' {
            image_angle=direction+random_range(-3,3);
        }
    }
}

if t==1307 {
    with(objHappy_Line) {
        if tag=='s1_nu_govoril_je_hueta_chto_ne_ponyatno' { instance_destroy(); }
    }
}

if t&lt;1307 and t mod 10 == 0 {
    with(objHappy_Darkness) {
        if tag == 's1_blink' {
            image_alpha=random_range(0.2,0.375);
        }
    }
}

if t&lt;1250 {
    repeat(3) {
        var rain__maybe = instance_create(view_xview[0]+random(view_wview[0]),view_yview[0],objHappy_Bullet_01);
        rain__maybe.sprite_index=sprBlood_new;
        rain__maybe.image_xscale=random_range(3,5);
        rain__maybe.image_yscale=0.2;
        rain__maybe.image_alpha=0.2;
        
        random_color_jumpscare=random_range(0.75,0.85)
        
        rain__maybe.image_blend=merge_color(c_white,c_black,random_color_jumpscare);
        rain__maybe.killer=false;
        
        HELP_ME_IM_BEING_SO_FUCKING_STUPID=point_direction(400,-304,objPlayer.x,objPlayer.y)
        rain__maybe.direction=HELP_ME_IM_BEING_SO_FUCKING_STUPID+random_range(-8,8);
        rain__maybe.image_angle=rain__maybe.direction;
        /*did you know that my hardest cleared fangame is called i wanna be the guy? 
        its funny, because some people say that i beated harder stuff like 
        "i wanna kardia" or "i wanna be the nnn" but lets be fair, 
        its just a "learn a savespot" adventure so its difficulty is equal to 0. 
        Then why im not calling "I wanna be the guy" a 0 difficulty game? 
        The answer is: Mother brain boss 
        (which is literally physically impossible, whoever beats it is a cheater smh). 
        Also whoever reads this rn should ping me in a voice chat with some memes
        so that i know that im not writing this all without any meaning ( please :[ )
        */
        rain__maybe.speed=8;/*popop said alot, but i decided to make it small with accel*/
        rain__maybe.accel=0.2;
        rain__maybe.persist=true;
        rain__maybe.depth=100;
        rain__maybe.tag='s1_lets_just_pretend_this_looks_like_a_rain_ok';
    }
    with(objHappy_Bullet_01) {
        if tag=='s1_lets_just_pretend_this_looks_like_a_rain_ok' {
            if t==5 { persist=false; }
        }
    }
    
    
    /*
    VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_V
    OICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VO
    ICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOI
    CES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOIC
    ES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICE
    S_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES
    _IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_
    IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_I
    N_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN
    _MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_
    MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_M
    Y_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY
    _HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_
    HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_H
    EAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HE
    AD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEA
    D_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD
    _VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_
    VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_V
    OICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VO
    ICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOI
    CES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOIC
    ES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICE
    S_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES
    _IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_
    IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_I
    N_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN
    _MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_
    MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_M
    Y_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY
    _HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_
    HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_H
    EAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HE
    AD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEA
    D_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD
    _VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_
    VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_V
    OICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VO
    ICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOI
    CES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOIC
    ES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICE
    S_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES
    _IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_
    IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_I
    N_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN
    _MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_
    MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_M
    Y_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY
    _HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_
    HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_H
    EAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HE
    AD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEA
    D_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD
    _VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_
    VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_V
    OICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VO
    ICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOI
    CES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOIC
    ES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICE
    S_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES
    _IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_
    IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_I
    N_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN
    _MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_
    MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_M
    Y_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY
    _HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_
    HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_H
    EAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HE
    AD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEA
    D_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD
    _VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_
    VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_V
    OICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VO
    ICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOI
    CES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOIC
    ES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICE
    S_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES
    _IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_
    IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_I
    N_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN
    _MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_
    MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_M
    Y_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY
    _HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_
    HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_H
    EAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HE
    VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_V
    OICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VO
    ICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOI
    CES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOIC
    ES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICE
    S_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES
    _IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_
    IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_I
    N_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN
    _MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_
    MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_M
    Y_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY
    _HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_
    HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_H
    EAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HE
    VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_V
    OICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VO
    ICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOI
    CES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOIC
    ES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICE
    S_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES
    _IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_
    IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_I
    N_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN
    _MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_
    MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_M
    Y_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY
    _HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_
    HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_H
    EAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HE
    VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_V
    OICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VO
    ICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOI
    CES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOIC
    ES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICE
    S_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES
    _IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_
    IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_I
    N_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN
    _MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_
    MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_M
    Y_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY
    _HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_
    HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_H
    EAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HE
    AD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEA
    D_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD
    _VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_
    VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_V
    OICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VO
    ICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOI
    CES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOIC
    ES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICE
    S_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES
    _IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_
    IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_I
    N_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN
    _MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_
    MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_M
    Y_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY
    _HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_
    HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_H
    EAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HE
    AD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEA
    D_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD
    _VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_
    VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_V
    OICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VO
    ICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOI
    CES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOIC
    ES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICE
    S_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES
    _IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_
    IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_I
    N_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN
    _MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_
    MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_M
    Y_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY
    _HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_
    HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_H
    EAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HE
    AD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEA
    D_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD
    _VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_
    VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_V
    OICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VO
    ICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOI
    CES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOIC
    ES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICE
    S_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES
    _IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_
    IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_I
    N_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN
    _MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_
    MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_M
    Y_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY
    _HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_
    HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_H
    EAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HE
    AD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEA
    D_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD
    _VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_VOICES_IN_MY_HEAD_
    */
    
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Segment №2: 0:29 - 0:53 (frames: 1307 - 2534) - platform sucks
if instance_exists(objPlayer) {
if t==1307 {
    //var transition = instance_create(400,304,objHappy_Bullet_01);
    view_xview[0]=112;
    view_yview[0]=view_xview[0]/1.3;
    view_wview[0]=800-view_xview[0]*2;
    view_hview[0]=608-view_yview[0]*2;
    
    with(objHappy_Darkness) {
        if tag='s1_ugly' {
            image_alpha=0.6;
            image_blend=c_red;
        }
        else {
            instance_destroy();
        }
    }
    border1 = instance_create(0,304-2,objHappy_Darkness);
    border1.image_blend=c_black;
    border1.direction=270;
    border1.speed=13.2;
    border1.friction=border1.speed/30;
    border1.tag='s2_border'
    border2 = instance_create(0,304+2,objHappy_Darkness);
    border2.image_yscale=-1;
    border2.image_blend=c_black;
    border2.direction=90;
    border2.speed=13.2;
    border2.friction=border2.speed/30;
    border2.tag='s2_border'
    instance_destroy(objHappy_Spotlight);
    spotlight = instance_create(0,0,objHappy_Spotlight);
    spotlight.tag='s2_spotlight';
    spotlight.image_alpha=0.5;
    with(objHappy_Darkness) {
        if tag=='s1_to_s2' {
            image_alpha=0;
        }
    }
}
if t==1300 {
    with(objPlayer) { instance_destroy(); }
    player = instance_create(400,304,objPlayer);
    player.frozen=true;
    platform = instance_create(400-16,304+32,objPlatform);
    platform.sprite_index=sprHappy_Platform;
}
if t==1335 {
    with(objPlayer) { frozen=false; }
}
if t&gt;1335 and t&lt;1335+75 {
    if t&lt;1385 {
        view_xview[0]=EaseOutCubic(t-1335,112,64,50);
        view_yview[0]=view_xview[0]/1.3;
        view_wview[0]=EaseOutCubic(t-1335,800-112*2,800-96*2,50)
        view_hview[0]=EaseOutCubic(t-1335,608-(112*2)/1.3,608-(96*2)/1.3,50)
    }
    with(objHappy_Darkness) {
        if tag=='s1_to_s2' {
            image_alpha-=0.5/74;
            if image_alpha&lt;=0 { instance_destroy(); }
        }
    }
}
if t&gt;1385 and t&lt;1435 {
    view_xview[0]=EaseOutCubic(t-1385,64,128,50);
}
if t&gt;1435 and t&lt;1485 {
    view_yview[0]=EaseOutCubic(t-1435,64/1.3,128/1.3,50);
}
if t&gt;1485 and t&lt;1535 {
    view_xview[0]=EaseOutCubic(t-1485,128,64,50);
}
if t&gt;1535 and t&lt;1585 {
    //view_xview[0]=EaseOutCubic(t-1535,64,56,50);
    view_yview[0]=EaseOutCubic(t-1535,128/1.3,64/1.3,50);
    view_wview[0]=EaseOutCubic(t-1535,800-96*2,800-64*2,50)
    view_hview[0]=EaseOutCubic(t-1535,608-(96*2)/1.3,608-(64*2)/1.3,50)
    with(objHappy_Darkness) {
        if tag=='s2_border' {
            //speed=1.4;
        }
    }
}
//1335,1385,1435,1485
if t==1335 or t==1385 or t==1435 or t==1485 or t==1535 {
    with(objHappy_Bullet_trig) {
        if tag=='s2_circle' {
            var a = instance_create(x,y,objHappy_Bullet_01);
            a.image_xscale=image_xscale;
            a.image_yscale=a.image_xscale;
            a.image_blend=c_red;
            a.direction=dir;
            a.speed=random_range(2,5);
            a.depth=depth;
            if other.t==1535 {
                a.accel=0.1;
            }
            instance_destroy();
        }
    }
    with(objHappy_Bullet_01) {
        if tag=='s2_circle_spam' {
            direction=-direction;
            speed=random_range(3,7);
            friction=0.1;
            tag='s2_spammed';
        }
    }
    //random_set_seed(1);
    rand_angle=random(360);
    if t==1335 {
        cx=64;
        cy=64/1.3
    }
    if t==1385 {
        cx=64+(800-(64*2));
        cy=64/1.3
    }
    if t==1435 {
        cx=64+(800-(64*2));
        cy=608-64/1.3
    }
    if t==1485 {
        cx=64;
        cy=608-64/1.3;
    }
    if t!=1535 {
        for (angle=rand_angle;angle&lt;rand_angle+360;angle+=15) {
            circle = instance_create(cx,cy,objHappy_Bullet_trig);
            circle.cen_x=cx;
            circle.cen_y=cy;
            circle.dir=angle;
            circle.subtag=6;        //for dir_inc;
            circle.sprite_index=sprHappy_WBCherry;
            circle.image_xscale=random_range(0.85,1);
            circle.image_yscale=circle.image_xscale;
            circle.depth=-1100;
            circle.tag='s2_circle';
            circle.findir='s2_circle_one'
            circle.persist=true;
            circle2 = instance_create(cx,cy,objHappy_Bullet_trig);
            circle2.cen_x=cx;
            circle2.cen_y=cy;
            circle2.dir=angle;
            circle2.subtag=-6;        //for dir_inc;
            circle2.sprite_index=sprHappy_WBCherry;
            circle2.image_xscale=random_range(0.85,1);
            circle2.image_yscale=circle.image_xscale;
            circle2.depth=-1100;
            circle2.tag='s2_circle';
            circle2.findir='s2_circle_two'
            circle2.persist=true;
        }
    }
}

if t&gt;1335 and t&lt;1535 {
    with(objHappy_Bullet_trig) {
        if tag=='s2_circle' {
            if t&lt;50 {
                len=EaseOutCubic(t,64,224,50);
                dir_inc=EaseOutExpo(t,subtag,subtag/30,50);
                image_tag=EaseOutExpo(t,0.3,1,50);
                image_blend=merge_color(c_white,c_red,image_tag-0.1);
                
                if t &lt; 50 and t mod 12 == 0 {
                    a = instance_create(x,y,objHappy_Bullet_01);
                    a.image_blend=merge_color(c_orange,c_red,random_range(0.9,1));
                    a.image_xscale=image_xscale-random_range(0.05,0.1);
                    a.image_yscale=a.image_xscale;
                    a.image_alpha=0.15;
                    a.killer=false;
                    a.direction=-dir;
                    a.speed=random_range(1,2);
                    a.friction=0.1;
                    a.tag='s2_circle_spam';
                }
                if t &lt; 50 and t mod 24 == 0 and findir=='s2_circle_one' {
                    a = instance_create(x,y,objHappy_Bullet_01);
                    a.image_blend=merge_color(c_orange,c_red,random_range(0.9,1));
                    a.image_xscale=image_xscale-random_range(0.15,0.3);
                    a.image_yscale=a.image_xscale;
                    a.direction=dir;
                    a.speed=random_range(1,2);
                    a.accel=random_range(0.05,0.15);
                    a.tag='s2_circle_spam_killer';      
                }
                if t &lt; 50 and t mod 24 == 12 and findir=='s2_circle_two' {
                    a = instance_create(x,y,objHappy_Bullet_01);
                    a.image_blend=merge_color(c_orange,c_red,random_range(0.9,1));
                    a.image_xscale=image_xscale-random_range(0.15,0.3);
                    a.image_yscale=a.image_xscale;
                    a.direction=dir;
                    a.speed=random_range(1,2);
                    a.accel=random_range(0.05,0.15);
                    a.tag='s2_circle_spam_killer';      //guess what does killer mean
                }
            }
        }
    }
}
if t==1435 {
    with(objPlatform) {
        fall = instance_create(x,y,objHappy_Bullet_01);
        fall.sprite_index=sprite_index;
        fall.gravity=0.25;
        fall.killer=false;
        instance_destroy();
    }
}
//1535,1585,1635,1685


if t==1535 or t==1560 or t==1585 or t==1605 {
    with(objHappy_Bullet_01) {
        if tag=='s2_spammed' {
            persist=false;
            speed=random_range(4,6);
            direction=point_direction(objPlayer.x,objPlayer.y,x,y);
            friction=0;
        }
    }
    px=objPlayer.x;
    py=objPlayer.y;
    if t==1535 { ang=0; }
    if t==1560 { ang=30; }
    if t==1585 { ang=0; }
    if t==1605 { ang=30; }
    ang_inc=60//choose(60,90)
    for (var angle=ang;angle&lt;ang+360;angle+=ang_inc) {
        burst = instance_create(px,py,objHappy_Bullet_01);
        burst.direction=angle;
        burst.speed=random_range(8,10.5);
        burst.friction=0.1;
        burst.image_tag=random_range(1,1.5);
        burst.image_xscale=2.5
        burst.image_yscale=burst.image_xscale;
        burst.image_alpha=-0.1;
        burst.killer=false;
        burst.persist=true;
        burst.tag='s2_burst_to_circle';
    }
    repeat(50) {
        burst = instance_create(px,py,objHappy_Bullet_01);
        burst.direction=random(360);
        burst.speed=random_range(2,12);
        burst.image_xscale=2;
        burst.image_yscale=burst.image_xscale;
        burst.image_alpha=-0.1;
        burst.killer=false;
        burst.persist=true;
        burst.tag='s2_deco_burst';
    }
}
if t&gt;1535 and t&lt;1635 {
    with(objHappy_Bullet_01) {
        if tag=='s2_burst_to_circle' {
            if image_alpha&lt;1 and image_tag!='kill' {
                image_alpha+=0.05;
            }
            if image_alpha&gt;=1 { 
                killer=true;
                image_tag='kill';
            }
            if image_xscale&gt;image_tag {
                image_xscale-=0.1;
                image_yscale-=0.1;
            }
            if speed&lt;4 {
                friction=0;
                speed=4;
            }
            if x&lt;view_xview[0] { x=view_xview[0]+view_wview[0]; }
            if x&gt;view_xview[0]+view_wview[0] { x=view_xview[0]; }
            if y&lt;view_yview[0] { y=view_yview[0]+view_hview[0]; }
            if y&gt;view_yview[0]+view_hview[0] { y=view_yview[0]; }
        }
        if tag=='s2_deco_burst' {
            if image_alpha&lt;0.05 {
                image_alpha+=0.005;
            }
            if x&lt;view_xview[0] { x=view_xview[0]+view_wview[0]; }
            if x&gt;view_xview[0]+view_wview[0] { x=view_xview[0]; }
            if y&lt;view_yview[0] { y=view_yview[0]+view_hview[0]; }
            if y&gt;view_yview[0]+view_hview[0] { y=view_yview[0]; }
        }
    }
}

if t==1635 {
    with(objHappy_Bullet_01) {
        if tag=='s2_burst_to_circle' {
            subtag=choose(1,2)
            if subtag==1 {
                rand_angle=random(360);
                inc=random_range(-4,4);
                angle_inc = choose(60,72);
                for (var angle=rand_angle;angle&lt;rand_angle+360;angle+=angle_inc) {
                    var c = instance_create(x,y,objHappy_Bullet_trig);
                    c.cen_x=x;
                    c.cen_y=y;
                    c.dir=angle;
                    c.finlen=32*image_xscale;
                    c.sprite_index=sprHappy_WBCherry;
                    c.image_xscale=image_xscale-random(0.15);
                    c.image_yscale=c.image_xscale;
                    c.image_alpha=image_alpha;
                    c.killer=killer;
                    c.lendeg=c.image_xscale;
                    c.subtag=c.image_xscale-random_range(-0.05,0.1);
                    c.findir=inc;
                    c.tag='s2_burst_to_circle';
                }
                subtag='kill'
                killer=false;
            }
        }
    }
}
if t==1660 {
    with(objHappy_Bullet_01) {
        if tag=='s2_burst_to_circle' {
            if subtag==2 {
                rand_angle=random(360);
                inc=random_range(-4,4);
                angle_inc = choose(60,72);
                for (var angle=rand_angle;angle&lt;rand_angle+360;angle+=angle_inc) {
                    var c = instance_create(x,y,objHappy_Bullet_trig);
                    c.cen_x=x;
                    c.cen_y=y;
                    c.dir=angle;
                    c.finlen=28*image_xscale;
                    c.sprite_index=sprHappy_WBCherry;
                    c.image_xscale=image_xscale-random(0.15);
                    c.image_yscale=c.image_xscale;
                    c.image_alpha=image_alpha;
                    c.killer=killer;
                    c.lendeg=c.image_xscale;
                    c.subtag=c.image_xscale-random_range(-0.05,0.1);
                    c.findir=inc;
                    c.tag='s2_burst_to_circle';
                }
                subtag='kill'
                killer=false;
            }
        }
    }
}
if t&gt;1635 and t&lt;1685 {
    with(objHappy_Bullet_01) {
        if tag=='s2_deco_burst' {
            //image_alpha-=0.02;
            //if image_alpha&lt;=0 { instance_destroy(); }
        }
        if tag=='s2_burst_to_circle' {
            if killer=false and subtag='kill' {
                image_alpha-=0.1;
                if image_alpha&lt;=0 { instance_destroy(); }
            }
        }
    }
    with(objHappy_Bullet_trig) {
        if tag=='s2_burst_to_circle' {
            if t&lt;50 {
                len=EaseOutExpo(t,0,finlen,50);
                dir_inc=EaseOutSine(t,findir,findir/16,50);
                image_xscale=EaseOutSine(t,lendeg,subtag,50);
                image_yscale=image_xscale;
            }
        }
    }
}
if t==1685 {
    with(objHappy_Bullet_trig) {
        if tag=='s2_burst_to_circle' { t=0; subtag=random_range(2,4); dir_inc=0; }
    }
}
if t&gt;1685 and t&lt;1735 {
    with(objHappy_Bullet_trig) {
        if tag=='s2_burst_to_circle' {
            len=EaseOutQuart(t,finlen,finlen*subtag,65);
        }
    }
}
if t==1710 {
    //PRINCE: Create the gradient background
    var _gradient = instance_create(0,0,objPrince_Gradient);
    _gradient.image_alpha=0.2;
    _gradient.image_yscale=1.5;
    //instance_change_alpha(_gradient,0.2,200,tween_sine_out);
    with(objHappy_Bullet_trig) {
        if tag=='s2_burst_to_circle' {
            repeat(2) {
                a = instance_create(x,y,objHappy_Bullet_01);
                a.direction=point_direction(objPlayer.x,objPlayer.y,x,y)+random_range(-10,10);
                a.speed=random_range(2,8);
                a.image_xscale=image_xscale;
                a.image_yscale=image_yscale;
                a.image_alpha=image_alpha;
                a.killer=killer;
                a.friction=0.05;
                a.curve=random_range(-6,6);
                a.curve_real=a.curve;
                a.tag='s2_circle_end';
            }
            instance_destroy();
        }
    }
    

}


if t==1709 {
    //shader_transition = instance_create(0,0,objPShaderEffect);
    //shader_transition.shader = shEasyShaderExample;
    //shader_transition.intensity = 0;
    
    //shader turned off while working on attack
    shader_chromatic = shader_push(shChromaticAberration2,0);
    shader_transition = shader_push(shEasyShaderExample,0);
    
    danixshader = instance_create(0,0,objPShaderRectangle);
    danixshader.shader=shDanixIsAGod;
    
    with(objHappy_Darkness) {
        if tag=='s1_ugly' {
            x_inc=32;
            y_inc=32;
            for (var xx=0;xx&lt;800;xx+=x_inc) {
                for (var yy=0;yy&lt;608;yy+=y_inc) {
                    var a = instance_create(xx,yy,objHappy_PartDraw);
                    a.sprite_index=sprite_index;
                    a.image_blend=image_blend;
                    a.x1=xx;
                    a.y1=yy;
                    a.w1=x_inc;
                    a.h1=y_inc;
                    a.direction=90+random_range(-5,5);
                    a.tag='s2_ugly_grid'
                }
            }
            instance_destroy();
        }
    }
    //var cb = instance_create(0,0,objHappy_CharismaBreaker);
}

if t&gt;1709 and t&lt;1732 {
    var _t=t;
    with(objPShaderChainElement){
        if(shader==shEasyShaderExample) intensity=EaseOutSine(_t-1709,0,0.1,1732-1709-1);
        else if(shader==shChromaticAberration2) intensity=EaseOutSine(_t-1709,0,0.02,1732-1709-1);
    }

    with(objHappy_Bullet_01) {
        if tag == 's2_circle_end' {
            killer=false;
            image_alpha-=0.05;
            if image_alpha&lt;=0 { instance_destroy(); }
        }
    }
    with(objHappy_PartDraw) {
        if tag=='s2_ugly_grid' {
            x+=random_range(-2,2);
            y+=random_range(-2,2);
            image_angle+=random_range(-1.5,1.5);
        }
    }
    
}

if t==1732 {
    set_camera(64,64/1.3,800-64*2,608-(64*2)/1.3,0);
    //view_xview[0]=EaseOutCubic(t-1535,64,56,50);
    //view_yview[0]=EaseOutCubic(t-1535,128/1.3,64/1.3,50);
    //view_wview[0]=EaseOutCubic(t-1535,800-96*2,,50)
    //view_hview[0]=EaseOutCubic(t-1535,608-(96*2)/1.3,,50)
    with(objHappy_PartDraw) {
        if tag=='s2_ugly_grid' {
            direction=point_direction(objPlayer.x,objPlayer.y,x,y);
            image_angle=direction+180;
            speed=random_range(6,9);
            friction=speed/random_range(10,45);
            //gravity_direction=point_direction(x,y,400,304);
            gravity=random_range(0.015,0.05);
        }
    }
    
    rand_angle=random(360);
    rand_angle2=irandom_range(16,24);
    //голоса в голове посоветовали написать это
    spiral_direction=choose(-1,1);
    uhhhhhh=random(180)
    dirinc=random_range(-1,1)/1.5
    y_start=128
    for(var yy=y_start-18;yy&lt;608-y_start;yy+=6) {
        if (yy-(y_start-18)) mod 12 == 0 {
            it='better_alpha';
            _killer=true;
            bullet_choice=((yy-y_start) div 12)mod 3
        }
        else {
            coinflip=choose(0,1,2)
            //if(coinflip==0)or(coinflip==1) {
            it='worse_alpha'
            _killer=false;
            bullet_choice=2;
            //}
            //else {
            //it='better_alpha';
            //_killer=true;
            //bullet_choice=((yy-y_start) div 12)mod 3
            //}
        }
            //for (var _a=0;_a&lt;=rand_angle2;_a+=rand_angle2) {
            //}
        _a=0;
        if (yy-y_start) mod 6 == 0 {
            if(bullet_choice==1) 
                bullet = objHappy_BreakingBullet;
            else
                bullet = objHappy_Bullet_trig;
            var a = instance_create(0,0,bullet);
            a.cen_x=400;
            a.cen_y=yy;
            a.dir=yy*2+rand_angle+_a*1.25;
            a.dir_inc=dirinc;
            a.len=(view_wview[0]/2)-16;
            a.deg_y=4000;
            a.deg_x=spiral_direction;
            a.killer=false;
            //a.image_index=0;
            a.image_alpha=0.2;
            a.image_speed=0;
            a.tag='s2_exceed_spiral';
            a.image_tag=it;
            a.subtag=uhhhhhh;
            a.Type="Low_damage"
            if(bullet_choice==1) {
                a.sprite_type="Barrage"//choose("Cherry","Barrage");
                if a.sprite_type=="Cherry" {
                    a.image_index=0;
                }
                if a.sprite_type=="Barrage" {
                    a.image_index=1;
                }
                a.part_t=random_range(-100,50);
                for (var i=0;i&lt;4;i++) {
                    a.alp[i]=0;
                    a.sind[i]=a.sprite_index;
                    a.simg[i]=a.image_index;
                }
            }
            else {
                a.sprite_index=sprBulletVariety;
                a.image_speed=0;
                if it='better_alpha'
                    a.image_index=0//choose(0,1);
            }
        }
    }
}

if t==1747 {
    with(objHappy_PartDraw) {
        if tag=='s2_ugly_grid' {
            friction=0;
            gravity=random_range(0.015,0.05);
        }
    }
}

if t&gt;1732 and t&lt;1732+20 {
    var _t=t;
    with(objPShaderChainElement){
        if(shader==shEasyShaderExample) intensity=EaseOutSine(_t-1732,0.1,0,19);
        else if(shader==shChromaticAberration2) intensity=EaseOutSine(_t-1732,0.02,0,19);
    }
    //objPShaderEffect.intensity=EaseOutSine(t-1732,0.1,0,19);
}

if t&gt;1732 and t&lt;2135 {

    with(objDNAParticle) {
        if(t&gt;2) {
            if(point_distance(cen_x,304,cen_x,cen_y)&gt;192) instance_destroy();
        }
    }
    
    if t&gt;1750 and (t mod 35 == 0 or t mod 25 == 0) {
        choose_your_wall=choose(1,2,3);
        /*
        УДИВИТЕЛЬНЫЙ ГМСОВСКИЙ ЦИРК
        фильм какого-то придурка
        В главных ролях:
        */
        switch(choose_your_wall) {
            case 1:
                xx[0]=400+random_range(0,view_wview[0]/2)*choose(-1,1); //конченый идиот
                yy[0]=view_yview[0]+view_hview[0]+10;           //какой-то мужик
                
                xx[1]=view_wview[0]+view_xview[0]+10;
                yy[1]=304+random_range(0,view_hview[0]/2)*choose(-1,1);
            break;
            case 2:
                xx[0]=view_xview[0]-10;
                yy[0]=304+random_range(0,view_hview[0]/2)*choose(-1,1);
                
                xx[1]=view_xview[0]-6;
                yy[1]=304+random_range(0,view_hview[0]/2)*choose(-1,1);
            break;
            case 3:
                xx[0]=view_wview[0]+view_xview[0]+10;
                yy[0]=304+random_range(0,view_hview[0]/2)*choose(-1,1);
                
                xx[1]=view_wview[0]+view_xview[0]+6;
                yy[1]=304+random_range(0,view_hview[0]/2)*choose(-1,1);
            break;
        }
        comedy_value=random_range(0.5,1.15);      //так себе шутник
        i_ran_out_of_funny_variable_names=choose(1.5,1.4,1.3,2);
        if t mod 35 == 0 {
            for (var spd=2;spd&lt;=5;spd+=i_ran_out_of_funny_variable_names) {
                var a = instance_create(xx[0],yy[0],objHappy_Bullet_01);
                a.sprite_index=choose(sprPBigArrowhead,sprBulletLeehe)
                if(a.sprite_index=sprPBigArrowhead) 
                    a.aimlock=true;
                //else
                    //a.image_blend=merge_colour(c_white,c_maroon,0.5)
                
                a.image_xscale=2;
                a.image_yscale=2;
                a.image_index=0;
                a.direction=point_direction(xx[0],yy[0],objPlayer.x,objPlayer.y);
                a.accel=spd/15*comedy_value;                //пубертатная язва
                a.subtag=spd;                               //злодей-британец
                a.image_tag=random_range(0.45,0.85);
                a.tag='s2_chaos_train'
            }
        }
        if t mod 25 == 0 {
            repeat(4) {
                var a = instance_create(xx[1],yy[1],objHappy_Bullet_01);
                a.sprite_index=choose(sprPBigArrowhead,sprBulletLeehe)
                if(a.sprite_index=sprPBigArrowhead) 
                    a.aimlock=true;
                //else
                    //a.image_blend=merge_colour(c_white,c_maroon,0.5)
                
                a.image_index=0;
                a.image_xscale=2;
                a.image_yscale=2;
                a.direction=point_direction(xx[1],yy[1],400,304)+random_range(-50,50);
                a.speed=random_range(1,4);
                a.image_tag=random_range(0.5,0.7);
                a.tag='s2_chaos_burst';
            }
        }
    }
    if t mod 50 == 33 {
        var a = instance_create(view_xview[0]-32+random(view_wview[0]+64),view_yview[0]+view_hview[0],objDNASpawner);
    }
    
    //this part was taken from old version of mental
    if t==2080 {
        if(!instance_exists(objHappy_PersistSF)) {
            sf = instance_create(0,0,objHappy_PersistSF);
            sf.affect_killer=true;
        }
        shader_transition = instance_create(0,0,objPShaderEffect);
        shader_transition.shader = shEasyShaderExample;
        shader_transition.intensity = 0;
        shader_transition.tag='s2_yet_another_lag'
        
        scanline = instance_create(0,0,objHappy_Scanline2);
    }
    if t&gt;2080 {
        if t mod 5 == 0 {
            rand_x[0]=random_range(64,64+(800-64*2));
            rand_y[0]=64/1.3;
            rand_x[1]=64+(800-64*2);
            rand_y[1]=random_range(64/1.3,64/1.3+(608-64*2/1.3));
            rand_x[2]=random_range(64,64+(800-64*2));
            rand_y[2]=64/1.3+(608-64*2/1.3);
            rand_x[3]=64;
            rand_y[3]=random_range(64/1.3,64/1.3+(608-64*2/1.3));
            for (var i=0; i&lt;4; i++) {
                snake = instance_create(rand_x[i],rand_y[i],objHappy_Bullet_01);
                snake.image_xscale=2.5;
                snake.image_yscale=snake.image_xscale;
                snake.image_blend=c_red;
                snake.image_alpha=0;
                snake.direction=point_direction(snake.x,snake.y,400,304);
                snake.speed=random_range(5,7);
                snake.tag='s2_red_snake_spawner';
            }
        }
        with(objAvoidanceBullet) {
            killer=false;
        }
        with(objPShaderEffect) {
            if tag=='s2_yet_another_lag' {
                intensity+=0.035/(2135-2080);
            }
        }
    }
    
    with(objHappy_Bullet_01) {
        if tag=='s2_chaos_train' {
            if speed&gt;subtag {
                accel=0;
                speed=subtag;
            }
            if t&lt;40 {
                image_xscale=EaseOutCubic(t,2,image_tag,39);
                image_yscale=image_xscale;
            }
        }
        if tag='s2_chaos_burst' {
            if t&lt;40 {
                image_xscale=EaseOutCubic(t,2,image_tag,40-1);
                image_yscale=image_xscale;
            }
            /*if t mod 3 == 0 {
                var a = instance_create(x,y,objHappy_Bullet_01);
                a.direction=direction+180+random_range(-15,15);
                a.sprite_index=sprite_index;
                a.image_index=image_index;
                a.image_xscale=image_xscale;
                a.image_yscale=a.image_xscale;
                a.image_angle=random(360);
                a.speed=2;
                a.killer=false;
                a.tag='s2_chaos_burst_trail';
            }*/
        }
        if tag=='s2_chaos_burst_trail' {
            image_xscale-=0.1;
            image_yscale-=0.1;
            if image_xscale&lt;=0 { instance_destroy(); }
        }
        if tag = 's2_red_snake_spawner' {
            direction=point_direction(xstart,ystart,400,304)+dsin(t*30)*45;
            image_xscale-=0.075;
            image_yscale=image_xscale;
            image_blend=merge_colour(c_red,c_maroon,random(1));
            if image_xscale&lt;=0 { instance_destroy(); }
            //if t mod 2 == 0 {
                var snake = instance_create(x,y,objHappy_SFArea);
                snake.sprite_index=sprite_index;
                snake.image_xscale=image_xscale;
                snake.image_yscale=image_yscale;
                snake.image_blend=image_blend;
                snake.depth=depth;
                snake.tag='s2_red_snake';
            //}
        }
    }
    with(objHappy_BreakingBullet) {
        if tag=='s2_exceed_spiral' {
            //image_alpha=0.15+dsin(dir)*0.05;
            image_xscale=0.75+dsin(dir)*0.5;
            image_yscale=image_xscale;
            depth=-dsin(dir)*20;
            
            bullet_size=image_xscale;
            
            if not (part_t&gt;125 and part_t&lt;=299 ){
            //ignores alpha changmenets by MainAvoidance, while effect being charged
                if t&lt;150 {
                    if image_tag=='worse_alpha' 
                        part_alpha_max=EaseOutExpo(t,0,0.075+dsin(dir)*0.025,149);
                    
                    if image_tag=='better_alpha' 
                        part_alpha_max=EaseOutSine(t,0,0.75+dsin(dir)*0.7,149);
                    
                }
                if t&gt;=100 {
                    if image_tag=='worse_alpha' 
                        part_alpha_max=0.075+dsin(dir)*0.025;
                    
                    if image_tag=='better_alpha' 
                        part_alpha_max=0.75+dsin(dir)*0.7
                    
                    //part_alpha_max=image_alpha;
                    //flash_alpha=part_alpha_max;       dont-o touch-o datt-a mouse
                }
            }
            //part_alpha_max=image_alpha;
            
            
            dir_inc=1+dsin(subtag*2)*0.4;//0.6
            //if place_meeting(x,y,objPlayer) and image_alpha&gt;1 {
                //killer=false;
                //player_BLC_kill(1/150);       //  the
                //image_tag='a';
                //image_alpha=0.99;
                //paranoic decision
            //}
            if image_alpha&gt;1 {
                killer=true;
            }
            else { killer=false; }
            subtag++;
        }
    }
    with(objHappy_Bullet_trig) {
        if tag=='s2_exceed_spiral' {
            //image_alpha=0.15+dsin(dir)*0.05;
            image_xscale=0.75+dsin(dir)*0.5;
            image_yscale=image_xscale;
            depth=-dsin(dir)*20;
            
            if t&lt;150 {
                if image_tag=='better_alpha' 
                    image_alpha=EaseOutSine(t,0,0.75+dsin(dir)*0.7,149);
                if image_tag=='worse_alpha'
                    image_alpha=EaseOutExpo(t,0,0.05+dsin(dir)*0.025,149);
            }
            if t&gt;=100 {
                if image_tag=='better_alpha' 
                    image_alpha=0.75+dsin(dir)*0.7
                if image_tag=='worse_alpha'
                    image_alpha=0.05+dsin(dir)*0.025;
            }
            
            dir_inc=1+dsin(subtag*2)*0.4;
            if place_meeting(x,y,objPlayer) and image_alpha&gt;1 {
                //killer=false;
                player_BLC_kill(1/150);       //  the
                image_alpha=0.75+dsin(dir)*0.7
                //image_tag='a';
                //image_alpha=0.99;
                //paranoic decision
            }
            if image_alpha&gt;1 and other.t&lt;2080 {
                killer=true;
            }
            else { killer=false; }
            subtag++;
        }
    }
}

if t==1752 {
    shader_pop();
    shader_pop();
    instance_destroy(objPShaderRectangle);
}

if t==1735 {
    with(objHappy_Bullet_01) {
        if tag == 's2_circle_end' {
            speed=6;
            curve/=3;
            curve_real/=3;
            friction=5/25;   
        }
    }
}
if t==1760 {
    with(objHappy_Bullet_01) {
        if tag == 's2_circle_end' {
            friction=0;
            curve/=8;
            curve_real/=8;
            accel=0.05;
        }
    }

}
if t&gt;1760 and t&lt;1860 {
    with(objHappy_Bullet_01) {
        if tag == 's2_circle_end' {
            killer=false;
        }
    }
}



if t&gt;1735 and t&lt;2135 {
    if t&gt;2070 {
        view_xview[0]=EaseInOutSine(t-2080,64,128,2135-2070);
        
        //DANIX WILL BE VERY UPSET AT ME
        //IF HE SEES THIS BEING USED
        
        view_yview[0]=view_xview[0]/1.3;
        view_wview[0]=800-view_xview[0]*2;
        view_hview[0]=608-view_yview[0]*2;
    }
}
if t==2135 {
    //PRINCE: Fade out the gradient
    with(objPrince_Gradient) instance_fade_out(id,100);
    
    //a lot of clean up
    instance_destroy(objPShaderRectangle);
    instance_destroy(objPShaderEffect);
    instance_destroy(objHappy_PersistSF);
    instance_destroy(objHappy_SFArea);
    instance_destroy(objHappy_Bullet_trig);
    instance_destroy(objHappy_Scanline2);
    instance_destroy(objDNASpawner);
    instance_destroy(objDNAParticle);
    with(objAvoidanceBullet) {
        if tag=='s2_chaos_burst' or tag=='s2_chaos_train' {
            var a = instance_create(x,y,objHappy_Bullet_01);
            a.direction=point_direction(objPlayer.x,objPlayer.y,x,y);
            a.speed=random_range(4,8);
            a.friction=0.01;
            a.tag='s2_end';
            a.gravity=0.035;
            a.sprite_index=sprite_index;
            a.aimlock=aimlock;
            a.image_index=image_index;
            a.image_xscale=image_xscale;
            a.image_yscale=image_yscale;
            instance_destroy();
        }
    }
    with(objHappy_BreakingBullet) {
        if image_alpha&gt;=0.7 {
            var a = instance_create(x,y,objHappy_Bullet_01);
            a.direction=point_direction(objPlayer.x,objPlayer.y,x,y);
            a.speed=random_range(4,8);
            a.friction=0.01;
            a.tag='s2_end';
            a.gravity=0.035;
            a.sprite_index=sprite_index;
            a.image_index=image_index;
            a.image_xscale=image_xscale;
            a.image_yscale=image_yscale;
        }
        instance_destroy();
    }
    instance_destroy(objAvoidanceBullet);
    view_angle[0]=0;
    transition = instance_create(0,0,objHappy_Darkness);
    transition.image_blend=c_black;
    transition.tag='s2_end_transition'
    blink = instance_create(0,0,objHappy_Darkness);
    blink.image_blend=c_black;
    blink.tag='s2_end_blink'
    var scanline = instance_create(0,0,objHappy_CRTScanline);
    scanline.depth=-1000;
    var bg = instance_create(0,0,objHappy_Darkness);
    bg.image_blend=merge_color(c_gray,c_black,0.75);
    bg.depth=10000;
    bg.tag='s2_dark_gray_bg'
    instance_destroy(objHappy_Spotlight);
    odd_number=32
    var spotlight = instance_create(odd_number,odd_number/1.3,objHappy_Spotlight);
    spotlight.image_xscale=(800-odd_number*2)/800;
    spotlight.image_yscale=(608-odd_number*2/1.3)/608;
    spotlight.image_alpha=0.5;
    /*with(objHappy_Darkness) {
        if tag='s1_ugly' {
            image_alpha=0.2;
            image_blend=c_white;
        }
    }*/
    shader_greyscale = shader_push(shGreyscale,0);
    instance_change_variable(shader_greyscale,"intensity",1,50,tween_linear);
    
    with(objHappy_PartDraw) {
        if tag=='s2_ugly_grid' {
            instance_destroy();
        }
    }
}
if t&gt;2135 and t&lt;2185 {
    with(objHappy_Darkness) {
        if tag=='s2_end_transition' {
            image_alpha-=0.021;
            if image_alpha&lt;=0 { instance_destroy(); }
        }
    }
    view_xview[0]=EaseOutQuart(t-2135,128,64,49);
    view_yview[0]=view_xview[0]/1.3;
    view_wview[0]=800-view_xview[0]*2;
    view_hview[0]=608-view_yview[0]*2;
}
if t&gt;2135 and t&lt;2510 {
    with(objHappy_Darkness) {
        if tag=='s2_end_blink' {
            image_alpha=random_range(0.2,0.35);
        }
        if tag=='s2_dark_gray_bg' {
            if other.t mod 15 == 0
                image_blend=merge_color(c_gray,c_black,random_range(0.75,0.9));
        }
    }
    //if t&lt;2510 {
        
        rand_x[0]=random_range(45,800-45);
        rand_y[0]=45/1.3;                                    //top
        rand_x[1]=random_range(45,800-45);
        rand_y[1]=608-(45/1.3);                             //bottom
        rand_x[2]=45
        rand_y[2]=random_range((45/1.3),608-(45/1.3));      //left;
        rand_x[3]=800-45;
        rand_y[3]=random_range((45/1.3),608-(45/1.3));      //right
        coinflip=choose(false,true);
        if((t mod 18==0)and(t&lt;2435))or(t&gt;=2435)and(t mod 10 == 0) {
            for (i=0; i&lt;4; i++) {
                var a = instance_create(rand_x[i]+random_range(-32,32),rand_y[i]+random_range(-32,32),objHappy_Bullet_01);
                a.sprite_index=sprLeeheMoment;
                a.image_alpha=0;
                a.image_speed=0;
                a.image_index=14;
                a.image_angle=random(360);
                a.speed=random_range(1,5);
                a.persist=true;
                a.killer=false;
                a.direction=point_direction(a.x,a.y,400,304)+random_range(-60,60);
                a.tag='s2_leehe_curving'
                a.free_variable[0]=random_range(1,2)*choose(-1,1)   //the curve
                a.free_variable[1]=irandom_range(2,3);
                a.free_variable[2]=random_range(0,1.5);
            }
        }
        if(t mod 8 == 0) {
            var a = instance_create(random(800),random(608),objHappy_Bullet_01);
            a.sprite_index=sprLeeheMoment;
            a.image_alpha=0;
            a.image_speed=0;
            a.image_index=0;
            a.image_angle=random(360);
            a.speed=random_range(1,5);
            a.persist=true;
            a.killer=false;
            a.direction=point_direction(a.x,a.y,400,304)+random_range(-60,60);
            a.tag='s2_leehe_curving_deco'
            a.free_variable[0]=random_range(1,2)*choose(-1,1)   //the curve
            a.free_variable[1]=irandom_range(2,3);              //cherry's casual speed
            a.free_variable[2]=random_range(0,1.5);             //cherry's speed degreaser
            a.free_variable[3]=random_range(75,150);
        }
    }
    with(objHappy_Bullet_01) {
        if tag=='s2_leehe_curving' {
            if(other.t&lt;2435) {
                if t&lt;=25 image_alpha+=0.04;
                if image_alpha&gt;=1 killer=true;
            }
            else {
                if t&lt;30
                    image_alpha=EaseOutSine(t,0,EaseLinear(other.t-2435,1,0.1,75),29);
                else 
                    image_alpha=EaseLinear(other.t-2435,1,0.1,75);
            }
            image_angle+=free_variable[0];
            direction+=free_variable[0]/7;
            speed=free_variable[1]+dsin(t*3)*free_variable[2];
        }
        if tag=='s2_leehe_curving_deco' {
            image_alpha=dsin(t*180/free_variable[3])*0.15
            if image_alpha&lt;=0 and t&gt;=20 instance_destroy();
            image_angle+=free_variable[0];
            direction+=free_variable[0]/7;
            speed=free_variable[1]+dsin(t*3)*free_variable[2];
        }
    }
    if t==2435 {
        with(objHappy_Darkness) {
            if tag=='s2_border' {
                friction=0;
                direction+=180;
                speed=2;
            }
        }
        px=objPlayer.x;
        py=objPlayer.y;
        shader_transition = shader_push(shEasyShaderExample,0);
        //shader_transition = instance_create(0,0,objPShaderEffect);
        //shader_transition.shader = shEasyShaderExample;
        //shader_transition.intensity = 0;
    }
    if t==2510 {
        with(objHappy_Darkness) {
            if tag=='s2_border' {
                friction=10/25;
                direction+=180;
                speed=10;
            }
        }
    }
    
    if t==2335 or t==2360 or t==2385 or t==2410 {
        
        shader_transition = shader_push(shEasyShaderExample,0.0075);
        a = instance_create(0,0,objHappy_Darkness)
        a.image_blend=c_maroon;
        a.image_alpha=0.125;
        a.depth=-100;
        a.tag='s2_lag'
    }
    if t==2335+10 or t==2360+10 or t==2385+10 or t==2410+10 {
        shader_pop();
        with(objHappy_Darkness) {
            if tag=='s2_lag' instance_destroy();
        }
    }
    
    if t==2435 {
        vx=view_xview[0];
        rand_angle=random(360);
        distance=32*6.5;
        scrMakeStar(400,304,objHappy_Bullet_01,distance,rand_angle,12,'s2_reanimate_star');
        scrMakeStar(400,304,objHappy_Bullet_01,distance,rand_angle+36,12,'s2_reanimate_star');
        with(objHappy_Bullet_01) {
            if tag=='s2_reanimate_star' {
                var a = instance_create(0,0,objHappy_Bullet_trig);
                a.cen_x=400;
                a.cen_y=304;
                a.dir=direction;
                a.dir_inc=3;
                a.Type="Low_damage"
                a.sprite_index=sprHappy_MayuCherry
                a.image_speed=0;
                a.image_index=3;
                a.killer=false;
                a.image_alpha=0;
                a.free_variable[0]=speed;       //end distance
                a.len=speed*3;
                a.tag=tag;
                
                instance_destroy();
                
            }
        }
    }
    if t&gt;=2435 and t&lt;=2510 {
        if(global.practiceOn) {
            if(global.practiceSegment==3) {
                with(objPlayer) {
                    
                    x=lerp(x,400,0.2);
                    y=lerp(y,304,0.2);
                    vspeed=min(vspeed,2);
                }
            }
        }
        with(objHappy_Bullet_trig) {
            if tag=='s2_reanimate_star' {
                if image_alpha&lt;1 image_alpha+=0.05;
                if image_alpha&gt;=1 killer=true;
                if t&lt;=70 {
                    len=EaseOutQuart(t,free_variable[0]*3,free_variable[0],95);
                    dir_inc=EaseInSine(t,3,0,125);
                        //literally a EaseLinear
                }
                if t mod 4 == 0 {
                    var a = instance_create(x,y,objHappy_Bullet_01);
                    a.sprite_index=sprite_index;
                    a.image_alpha=image_alpha/2;
                    a.killer=killer;
                    a.Type="Low_damage"
                    a.tag='s2_reanimate_star_fadeout'
                }
            }
        }
        with(objHappy_Bullet_01) { 
            if tag!='s2_reanimate_star_fadeout' {
                killer=false; 
                mask_index=sprEmpty; 
                if tag=='s2_leehe_curving'
                    image_alpha=EaseLinear(other.t-2435,1,0.1,75);
            }
            if tag=='s2_reanimate_star_fadeout' {
                image_alpha-=0.045;
                if image_alpha&lt;=0 instance_destroy();
            }
            
            /*if tag=='s2_leehe_curving' {
                image_xscale+=EaseLinear(other.t-2435,0,0.1,2510-2435);
                image_yscale=image_xscale;
                image_blend=merge_colour(c_white,c_black,EaseLinear(other.t-2435,0,0.75,2510-2435));
            }*/
        }
        //objPShaderEffect.intensity=EaseInSine(t-2435,0,0.1,2510-2435);
        var _t=t;
        with(objPShaderChainElement){
            if(shader==shEasyShaderExample) intensity=EaseInSine(_t-2435,0,0.015,2510-2435);
        }
        view_xview[0]=EaseInSine(t-2435,64,160,2510-2435);
        view_yview[0]=view_xview[0]/1.3;
        view_wview[0]=800-view_xview[0]*2;
        view_hview[0]=608-view_yview[0]*2;
        
        //with(objPlayer) { frozen=true; }
        //objPlayer.x=EaseOutCubic(t-2435,px,400,2510-2435);
        //objPlayer.y=EaseOutCubic(t-2435,py,304,2510-2435);
    //}
}
if t&gt;=2510 and t&lt;=2510+25 {
    with(objHappy_Bullet_01) { 
        if tag=='s2_leehe_curving' {
            instance_destroy();
        }
    }
}
if t==2510 {
    with(objHappy_Darkness) {
        if tag=='s2_border' {
            direction=point_direction(x,304,x,y)
            speed=-16;
            friction=16/24;
            instance_destroy()
        }
        if tag=='s2_end_blink' or tag=='s2_dark_gray_bg' instance_destroy(); 
        if tag='s1_ugly' 
            image_alpha=0.3;
        
    }
    with(objAvoidanceBullet) {
        if tag!='s2_reanimate_star' and image_alpha&lt;1 instance_destroy(); 
    }
    with(objHappy_Bullet_trig) {
        if tag=='s2_reanimate_star' {
            var a = instance_create(x,y,objHappy_Bullet_01);
            a.sprite_index=sprHappy_MayuCherry;
            a.direction=dir;
            a.speed=random_range(8,16);
            a.tag=tag;
            instance_destroy();
        }
    }
    instance_destroy(objPShaderChain);
    instance_destroy(objHappy_Spotlight);
    instance_destroy(objHappy_CRTScanline);
    instance_destroy(objHappy_Spotlight);
    spotlight = instance_create(0,0,objHappy_Spotlight);
    spotlight.image_alpha=0.5;
    spotlight.tag='s3_spotlight'
    flash = instance_create(0,0,objHappy_Darkness);
    flash.image_alpha=0.5;
    flash.tag='s2_flash'
    spawn_circle(400,304,random(360),90,128,objHappy_Bullet_01,'s2_penta');
    spawn_shape(400,304,30,4,60,126,objHappy_Bullet_01,'s2_penta');
    //spawn_shape(400,304,75,4,60,126,objHappy_Bullet_01,'s2_penta');
    
    //spawn_shape(400,304,30,4,40,96,objHappy_Bullet_01,'s2_penta');
    spawn_shape(400,304,60,4,40,96,objHappy_Bullet_01,'s2_penta');
    
    spawn_shape(400,304,90,4,30,66,objHappy_Bullet_01,'s2_penta');
    //spawn_shape(400,304,75,4,30,66,objHappy_Bullet_01,'s2_penta');
    with(objHappy_Bullet_01) {
        if tag=='s2_penta' {
            killer=false;
        }
    }
}
if t==2511 {
    with(objHappy_Bullet_01) {
        if tag=='s2_penta' {
            
            image_xscale=random_range(0.75,1);
            image_yscale=image_xscale;
            speed/=10
            friction=speed/20;
        }
    }
}

//2335,2360,2385,2410
//2435-2485
//2510 - end
if t==2534 {
    with(objHappy_Bullet_01) {
        if tag=='s2_penta' {
            friction=0;
            speed=random_range(2,12);
        }
    }
    with(objHappy_Bullet_trig) {
        if tag='s3_sciurus_circles' or tag='s3_sciurus_wb_circles' {
            dir_inc*=10;
            //image_alpha=1;
            //killer=true;
        }
    }
    //with(objPlayer) { frozen=false; }
    with(objHappy_Darkness) {
        if tag=='s2_flash' {
            image_alpha=0.6;
        }
    }
}
if t&gt;2534 and t&lt;2594 {
    with(objHappy_Darkness) {
        if tag=='s2_flash' {
            image_alpha-=0.02;
            if image_alpha&lt;=0 { instance_destroy(); }
        }
    }
}
if t&gt;1735 and t&lt;1760 {
    with(objHappy_Bullet_01) {
        if tag=='s2_deco_burst' {
            image_alpha-=0.02;
            if image_alpha&lt;=0 { instance_destroy(); }
        }
    }
}
if t&gt;1307 and t&lt;1740 {
    if t mod 5 == 0 {
        with(objHappy_Darkness) {
            if tag=='s1_ugly' {
                sprite_index=sprHappy_Ugly;
                image_blend=c_red//merge_color(c_white,c_red,random_range(0.85,1));
            }
        }
    }
}

if t&gt;1307 and t&lt;3230 {
    with(objPlayer) { 
        airJumps = 1; 
        //if x&lt;view_xview[0] or x&gt;view_xview+view_wview[0] or y&lt;view_yview[0]
        //or y&gt;view_yview[0]+view_hview[0] {
        //    x=view_xview[0]+view_wview[0]/2;
        //    y=view_yview[0]+view_hview[0]/2;
        //    vspeed=0;
        //}
    }
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Segment №3: 0:53 - 1:09 (frames: 2534 - 3230)

//2535-2710 - spanws
//2710-2835 - curves
//2835 - 2884 (+2884-2936) - transition
//2936-3110 - repeats
//3110-3230 - end stuff
if instance_exists(objPlayer) {
if t==2510 {
    instance_destroy(objBlock);
    var deco_miku = instance_create(208,32,objHappy_Bullet_trig);
    deco_miku.cen_x=232;
    deco_miku.cen_y=48;
    deco_miku.sprite_index=sprHappy_Miku;
    deco_miku.image_xscale=0.925;
    deco_miku.image_yscale=deco_miku.image_xscale;
    deco_miku.image_alpha=0;
    deco_miku.killer=false;
    deco_miku.tag='s3_miku'
    deco_miku.depth=100;
    
    for (var distance=80;distance&lt;80+164*8;distance+=164) {
        if (distance!=80) { /*var rand_angle=random(360);*/ angle_inc = choose(46-1,45,30,59+1,60); inc=random_range(-1,1)/15; }
        else { /*var rand_angle=0;*/ angle_inc = 60; inc=random_range(-1,1)/20; }
        rand_angle=point_direction(410,152,objPlayer.x,objPlayer.y)+angle_inc/2;
        for (var angle=rand_angle;angle&lt;rand_angle+360;angle+=angle_inc) {
            var a = instance_create(-3000,-3000,objHappy_Bullet_trig);
            a.cen_x=410        //400
            a.cen_y=152        //304
            a.dir=angle;
            a.dir_inc=inc;
            a.finlen=distance;
            a.sprite_index=sprHappy_MayuCherry;
            a.image_xscale=max(0.35,distance/190);
            a.image_yscale=a.image_xscale;
            a.image_alpha=0;
            a.image_angle=angle-90;
            a.tag='s3_sciurus_circles';
            a.killer=false;
        }
        for(var angle=rand_angle;angle&lt;rand_angle+360;angle+=60) {
            //for (var sub_distance=0;sub_distance&lt;48;sub_distance+=4) {
                var a2 = instance_create(-3000,-3000,objHappy_Bullet_trig);
                a2.cen_x=410        //400
                a2.cen_y=152        //304
                a2.dir=angle;
                a2.dir_inc=-inc;
                a2.finlen=distance+82//sub_distance+17;
                a2.sprite_index=sprHappy_WBCherry;
                a2.image_xscale=max(0.2,distance/300);
                a2.image_yscale=a2.image_xscale;
                a2.image_alpha=0;
                a2.image_angle=angle-90;
                a2.Type="Low_damage"
                a2.tag='s3_sciurus_wb_circles';
                a2.killer=false;
            //}
        }
    }
    /*rand_angle=random(360);
    for (var angle=rand_angle;angle&lt;rand_angle+360;angle+=20) {
        var a = instance_create(-3000,-3000,objHappy_Bullet_trig);
        a.cen_x=410;
        a.cen_y=152;                            //calculated haHAA
        a.dir=angle;
        a.sprite_index=sprHappy_WBCherry;
        a.image_xscale=0.5;
        a.image_yscale=0.5;
        a.image_alpha=0;
        a.killer=false;
        a.subtag=random(75);                    //timer for spawning cherries
        a.tag='s3_circle_spam_spawner';         //idk
    }*/
    rand_angle=random(360);
    for (var angle=rand_angle;angle&lt;rand_angle+360;angle+=24) {
        var a = instance_create(-4000,-4000,objHappy_Bullet_trig);
        a.cen_x=410;
        a.cen_y=152;
        a.dir=angle;
        a.sprite_index=sprHappy_WBCherry;
        a.image_xscale=0;
        a.image_yscale=0;
        a.tag='s3_transition_circle_spam'
    }
}

if t&gt;2510 and t&lt;2535 {
    if(global.practiceOn)and(global.practiceSegment=3) {
        objPlayer.x=400;
        objPlayer.y=304;
    }
    with(objHappy_Darkness) {
        if tag=='s2_flash' {
            image_alpha-=0.02;
            //if image_alpha&lt;=0 { instance_destroy(); }
        }
    }
    with(objHappy_Bullet_trig) {
        if tag='s3_sciurus_circles' or tag='s3_sciurus_wb_circles' {
            if t&lt;25 {
                len=EaseOutCubic(t,min(finlen-80-96,0),finlen,25);
                image_alpha=EaseInSine(t,0,0.4,24);
            }
        }
        if tag=='s3_circle_spam_spawner' {
            if t&lt;25 {
                len=EaseOutCubic(t,0,48,25);
                image_alpha=EaseInSine(t,0,0.4,24);
            }
        }
        if tag=='s3_miku' {
            if t&lt;25 {
                image_alpha=EaseInSine(t,0,0.3,24);
            }
        }
        
        //i could've optimized this but you know what fuck you *ungrills your cheese*
    }
    var _t=t;
    with(objPShaderChainElement){
        if(shader==shEasyShaderExample) intensity=EaseOutExpo(_t-2510,0.1,0,10);
    }
    //if t&lt;2520 {
    //    objPShaderEffect.intensity=EaseOutExpo(t-2510,0.1,0,10);
    //}
    view_xview[0]=EaseOutExpo(t-2510,160,32,25);
    view_yview[0]=view_xview[0]/1.3;
    view_wview[0]=800-view_xview[0]*2;
    view_hview[0]=608-view_yview[0]*2;
}

if t==2535 {
    with(objHappy_Bullet_trig) {
        //if tag=='s3_miku' { instance_destroy(); }
    }
    rand_dir_inc=choose(-1,1)/1.4;
    with(objHappy_Bullet_trig) {
        if tag=='s3_circle_spam_spawner' {
            dir_inc=other.rand_dir_inc;
            image_alpha=1;
        }
    }
}
if t&gt;2535 and t&lt;3230 {
    with(objHappy_Bullet_trig) {
        if tag='s3_miku' {
            cen_x=232+dsin(t)*4;
            cen_y=48+dsin(t)*4;   //wet fart
        }
        if tag='s3_sciurus_circles' or tag='s3_sciurus_wb_circles' or tag=='s3_sciurus_shape' or tag=='s3_sciurus_wb_shape' or tag=='s3_gathering_spamming_circle' {
            //cen_x=410+dsin(t)*4;
            //cen_y=152+dsin(t)*4;   //wet fart
        }
    }
}
if t&gt;2535 and t&lt;2635 {
    with(objHappy_Bullet_trig) {
        if tag='s3_sciurus_circles' or tag='s3_sciurus_wb_circles' {
            //dir_inc*=10;
            if image_alpha&lt;1 { image_alpha+=0.04; }
            if image_alpha&gt;1 {
                killer=true;
                image_alpha=1;
            }
        }
    }
}

if t&gt;2535 and t&lt;3230 {
    with(objHappy_Bullet_trig) {
        if tag='s3_sciurus_circles' or tag='s3_sciurus_wb_circles' or tag=='s3_sciurus_shape' or tag=='s3_sciurus_wb_shape' or tag=='s3_gathering_spamming_circle' {
            image_angle=dir-90;
            if tag=='s3_sciurus_circles' or tag=='s3_sciurus_shape' { 
                image_xscale=max(0.4,len/190); 
            }
            if tag=='s3_sciurus_wb_circles' or tag=='s3_sciurus_wb_shape' { 
                image_xscale=max(0.4,len/300); 
                var a = instance_create(x,y,objHappy_Bullet_01);
                a.direction=dir+dsin(t*(270/50))*8;
                a.speed=1;
                a.image_xscale=image_xscale
                a.image_yscale=a.image_xscale;
                a.image_alpha=image_alpha;
                a.image_angle=image_angle;
                a.killer=killer;
                //if len&lt;128 { a.killer=false; }
                a.Type="Low_damage"
                a.tag='s3_sciurus_wb_circles_tail';
            }
            if tag=='s3_gathering_spamming_circle' {
                image_xscale=max(0.2,(len-32)/200); 
            }
            image_yscale=image_xscale;
            /*if len &lt;= 48 { 
                image_alpha=len/48;
                killer=false;
            }*/
            if len &lt; 0 {
                instance_destroy();
            }
        }
    }
    with(objHappy_Bullet_01) {
        if tag=='s3_sciurus_wb_circles_tail' {
            subtag++;
            //if subtag==15 { killer=false; }
            image_xscale-=0.01;
            image_yscale=image_xscale;
            if subtag==15 { instance_destroy(); }
        }
    }
    if t==2545 or t==2635 or t==2725 or t==2815 {
        with(objHappy_Bullet_trig) {
            if tag='s3_sciurus_circles' or tag='s3_sciurus_wb_circles' {
                finlen=len;
                t=10;
            }
        }
    }
    
    if (t&gt;2545 and t&lt;2625) or (t&gt;2635 and t&lt;2715) or (t&gt;2725 and t&lt;2805) or (t&gt;2815 and t&lt;2835) {
        with(objHappy_Bullet_trig) {
            if tag='s3_sciurus_circles' or tag='s3_sciurus_wb_circles' {
                if t&lt;99 {
                    len=EaseInOutCubic(t,finlen,finlen-148*1.75,100);
                }
            }
        }
    }
    if (t&gt;2535 and t&lt;2835)  {
        if t mod 25 == 11 or t mod 25 == 23 {
            with(objHappy_Bullet_trig) {
                if tag=='s3_sciurus_circles' {
                    var a = instance_create(x,y,objHappy_Bullet_01);
                    a.sprite_index=sprite_index;
                    a.image_angle=image_angle;
                    a.image_xscale=image_xscale;
                    a.image_yscale=image_yscale;
                    a.image_alpha=0.15;
                    a.killer=false;
                    a.direction=dir;
                    a.speed=random_range(2,5);
                    a.tag='s3_sciurus_circles_tail_deco'
                }
            }
        }
        /*if t mod 25 == 11 {
            with(objHappy_Bullet_trig) {
                if tag=='s3_sciurus_circles' {
                    var a = instance_create(x,y,objHappy_Bullet_01);
                    a.sprite_index=sprite_index;
                    a.image_angle=image_angle;
                    a.image_xscale=image_xscale;
                    a.image_yscale=image_yscale;
                    a.direction=dir;
                    a.speed=random_range(2,5);
                    a.tag='s3_sciurus_circles_tail'
                }
            }
        }*/
        with(objHappy_Bullet_trig) {
            if tag=='s3_transition_circle_spam' {
                len=EaseLinear(t,0,96,300);
                image_xscale=EaseLinear(t,0,0.75,300);
                image_yscale=image_xscale;
                if t mod 4 == 2 {
                    trail=true;
                }
                if t mod 4 == 0 { trail=false; }
                dir_inc=dsin(t*2)
                if t mod 5 == 0 {
                    var a = instance_create(x,y,objHappy_Bullet_01);
                    a.image_xscale=image_xscale;
                    a.image_yscale=image_yscale;
                    a.direction=dir+180;
                    a.speed=random_range(1,3);
                    a.tag='s3_sciurus_circles_savespot_cancel'
                }
            }
        }
        with(objHappy_Bullet_01) {
            if tag=='s3_sciurus_circles_savespot_cancel' {
                if point_distance(x,y,410,152)&lt;=2 { 
                    tag='s3_sciurus_circles_savespot_cancel_fade_out';
                }
            }
            if tag=='s3_sciurus_circles_savespot_cancel_fade_out' {
                image_alpha-=0.05;
                if image_alpha&lt;=0 { instance_destroy(); }
            }
        }
    }
    if t&gt;2885 {
        if t mod 25 == 11 or t mod 25 == 23 {
            with(objHappy_Bullet_trig) {
                if tag=='s3_sciurus_shape' {
                    var a = instance_create(x,y,objHappy_Bullet_01);
                    a.sprite_index=sprite_index;
                    a.image_angle=image_angle;
                    a.image_xscale=image_xscale;
                    a.image_yscale=image_yscale;
                    a.image_alpha=0.15;
                    a.killer=false;
                    a.direction=dir;
                    a.speed=random_range(2,5);
                    a.tag='s3_sciurus_shapes_tail'
                }
            }
        }
    }
    if t==2835 {
        with(objHappy_Bullet_trig) {
            if tag=='s3_transition_circle_spam' {
                t=0;
            }
        }
    }
    if t&gt;2835 and t&lt;2884 {  
        with(objHappy_Bullet_trig) {
            if tag=='s3_sciurus_circles' {
                len_inc+=0.5;
                if dir_inc&lt;15 { dir_inc+=0.5; }
                var a = instance_create(x,y,objHappy_Bullet_01);
                a.sprite_index=sprite_index;
                a.image_angle=image_angle;
                a.image_xscale=image_xscale;
                a.image_yscale=image_yscale;
                a.direction=dir+dir_inc*18;
                a.speed=1;
                a.accel=0.1;
                a.tag='s3_sciurus_circles_end';
                
                a.image_alpha=0.2;
                a.killer=false;
                
                killer=false;
            }   
            if tag=='s3_sciurus_wb_circles' {
                len_inc+=0.5;
                image_alpha-=0.02;
                killer=false;
            }
        }
        with(objHappy_Bullet_01) {
            if tag=='s3_sciurus_circles_tail' {
                killer=false;
                if image_alpha&gt;0.5 { image_alpha-=0.025; }
            }
            if tag=='s3_sciurus_circles_savespot_cancel' or tag=='s3_sciurus_circles_savespot_cancel_fade_out' {
                killer=false;
                image_alpha-=0.05;
                if image_alpha&lt;=0 { instance_destroy(); }
            }
        }
    }
    if t==2884 {
        with(objHappy_Bullet_trig) {
            if tag='s3_sciurus_circles' or tag='s3_sciurus_wb_circles' { instance_destroy(); }
        }
        with(objHappy_Bullet_01) {
            if tag=='s3_sciurus_circles_end' {
                accel=0;
                gravity_direction=point_direction(410,152,x,y);
                gravity=random_range(0.2,0.4);
            }
        }
        dd=170;
        for (var distance=80;distance&lt;80+dd*10;distance+=dd) {
            rand_angle=random(360);
            spawn_shape(410,152+((distance-80) div dd),rand_angle,4,16,distance,objHappy_Bullet_01,'s3_sciurus_shape');
            spawn_shape(410,152+((distance-80) div dd),rand_angle,4,4,distance,objHappy_Bullet_01,'s3_sciurus_wb_shape');
            with(objHappy_Bullet_01) {
                if tag=='s3_sciurus_shape' or tag=='s3_sciurus_wb_shape' {
                    killer=false;
                    image_alpha=0;
                    if y==152 or y==152+4 or y==152+8 { inc=-1; }             
                    if y==152+1 or y==152+5 or y==152+9 { inc=0.75; }          
                    if y==152+2 or y==152+6 or y==152+10 { inc=1.5; }          //im a reatrd
                    if y==152+3 or y==152+7 { inc=-0.75; }    
                    inc/=1.75;     
                    var a = instance_create(0,0,objHappy_Bullet_trig);
                    a.cen_x=410;
                    a.cen_y=152;
                    a.dir=direction;
                    a.dir_inc=inc;
                    a.len=speed;
                    a.subtag=distance;  
                    a.findir=speed;
                    if tag=='s3_sciurus_wb_shape' { a.sprite_index=sprHappy_WBCherry; Type="Hold" }
                    else { a.sprite_index=sprHappy_MayuCherry; }
                    a.image_xscale=max(0.35,distance/240);
                    a.image_yscale=a.image_xscale;
                    a.image_alpha=0;
                    a.image_angle=direction-90;
                    a.tag=tag;
                    a.killer=false;
                    
                    if speed==distance and tag=='s3_sciurus_shape' { instance_destroy(a); }
                    
                    instance_destroy();
                }
            }
        }
    }
    if t&gt;2835 and t&lt;2935 {
        with(objHappy_Bullet_trig) {
            if tag=='s3_transition_circle_spam' {
                if t&lt;50 {
                    len=EaseLinear(t,96,0,50);
                    image_xscale=EaseLinear(t,0.75,0.3,50);
                    image_yscale=image_xscale;
                }
                else {
                    var a = instance_create(x,y,objHappy_Bullet_01);
                    a.image_xscale=random_range(0.2,0.5);
                    a.image_yscale=a.image_xscale;
                    a.direction=random(360);
                    a.speed=random_range(1,3);
                    a.killer=false;
                    a.tag='s3_transition_fade_out';
                    instance_destroy(); 
                }
                if dir_inc&lt;0 { dir_inc-=0.2; }
                else { dir_inc+=0.2; }
                if other.t&lt;2885 {
                    if t mod 2 == 0 {
                        var a = instance_create(x,y,objHappy_Bullet_01);
                        a.image_xscale=max(0.4,image_xscale-irandom(0.25));
                        a.image_yscale=a.image_xscale;
                        a.direction=dir;
                        a.speed=random_range(1,7)        //max((96/(len*1.2)),8);
                        a.accel=random_range(0.05,0.15);
                        a.tag='s3_transition_spam';
                    }
                }
            }
        }
        with(objHappy_Bullet_01) {
            if tag=='s3_transition_fade_out'  {
                image_alpha-=0.025;
                if image_alpha&lt;0 { instance_destroy(); }
            }
        }
    }
    if t&gt;2884 and t&lt;2934 {
        with(objHappy_Bullet_trig) {
            if tag=='s3_sciurus_shape' or tag=='s3_sciurus_wb_shape' {
                image_alpha+=0.02;
            }
        }
        with(objHappy_Bullet_01) {
            if tag=='s3_transition_spam' {
                killer=false;
                if image_alpha &gt; 0.2 { image_alpha-=0.04; }
            }
        }
    }
    if t==2934 {
        with(objHappy_Bullet_trig) {
            if tag=='s3_sciurus_shape' or tag=='s3_sciurus_wb_shape' {
                killer=true;
            }
        }
        rand_angle=random(360);
        for (var angle=rand_angle;angle&lt;rand_angle+360;angle+=30) {
            var a = instance_create(410+dcos(angle)*point_distance(410,152,800,608)+64,152+dsin(angle)*point_distance(410,152,800,608)+64,objHappy_Bullet_trig);
            a.cen_x=410;
            a.cen_y=152;
            a.dir=angle;
            a.finlen=point_distance(410,152,800,608)+64;
            a.sprite_index=sprHappy_MayuCherry;
            a.tag='s3_gathering_spamming_circle';
            a.subtag=irandom(5);
        }
    }
    if t==2935 or t==3025 or t==3135 {
        with(objHappy_Bullet_trig) {
            if tag=='s3_sciurus_shape' or tag=='s3_sciurus_wb_shape' {
                finlen=len;
                t=10;
            }
            if tag=='s3_noesis_circle' {
                t=10;
                finlen=point_distance(410,152,objPlayer.x,objPlayer.y)
            }
        }
    }
    if (t&gt;2935 and t&lt;3025) or (t&gt;3025 and t&lt;3125) or (t&gt;3115 and t&lt;3215) {
        with(objHappy_Bullet_trig) {
            if tag=='s3_sciurus_shape' or tag=='s3_sciurus_wb_shape' {
                if t&lt;99 {
                    len=EaseInOutCubic(t,finlen,finlen-256*(findir/subtag),100);
                }
            }
        }
    }
    if t&gt;2935 and t&lt;3225 {
        with(objHappy_Bullet_trig) {
            if tag=='s3_gathering_spamming_circle' {
                image_alpha=0;
                len=EaseLinear(t,point_distance(410,152,800,608)+64,160,295);
                dir_inc=dsin(t)*8;
                if other.t&gt;2940 {
                    ang_shift=random_range(-15,15)
                    var a = instance_create(x,y,objHappy_Bullet_01);
                    a.sprite_index=sprite_index;
                    a.image_xscale=image_xscale+random_range(-0.15,0.15);
                    a.image_yscale=a.image_xscale;
                    a.image_alpha=0;
                    a.killer=false;
                    a.image_angle=dir-90+ang_shift;
                    a.direction=dir-180+ang_shift;
                    a.speed=random_range(-1,3);
                    a.gravity_direction=dir;
                    a.gravity=0.2;
                    a.tag='s3_gathering_spam';
                }
            }
        }
        with(objHappy_Bullet_01) {
            if tag=='s3_gathering_spam' {
                if image_alpha&lt;1 { image_alpha+=0.1; }
                else { killer=true; }
            }
        }
    }
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Segment №4: 1:09 - 1:25 (frames: 3335 - 4133)
if instance_exists(objPlayer) {

////////////////////////////////////////////////////////////1st part: Transition                 

if t==3230 {
    
    line_alpha=0;
    instance_destroy(objHappy_Darkness);
    shader_transition = instance_create(0,0,objPShaderEffect);
    shader_transition.shader = shEasyShaderExample;
    shader_transition.intensity = 0;
    
    darkness_transition=instance_create(0,0,objHappy_Darkness);
    darkness_transition.image_alpha=0;
    darkness_transition.depth=100;
    darkness_transition.image_blend=c_black;
    
    glitch_transition = instance_create(400,304,objHappy_Glitch);
    glitch_transition.image_alpha=0;
    glitch_transition.image_speed=4/50;
    glitch_transition.depth=50;
    
    spotlight_transition = instance_create(0,0,objHappy_Spotlight);
    spotlight_transition.image_alpha=0;
    
    a1_1 = instance_create(96+16,-96,objHappy_Logo);
    a1_1.image_index=0;         
    a1_2 = instance_create(96+36*1+16,-96,objHappy_Logo);
    a1_2.image_index=1;         
    a1_3 = instance_create(96+36*2+16,-96,objHappy_Logo);
    a1_3.image_index=2;         
    a1_4 = instance_create(96+36*3+16,-96,objHappy_Logo);
    a1_4.image_index=3;         
    a1_5 = instance_create(96+36*4+18,-96,objHappy_Logo);
    a1_5.image_index=4;         
    a1_6 = instance_create(96+36*5+20,-96,objHappy_Logo);
    a1_6.image_index=5;         
    
    a2_1 = instance_create(400+24-8,-96,objHappy_Logo);
    a2_1.image_index=0;         
    a2_2 = instance_create(400+24+36*1-8,-96,objHappy_Logo);
    a2_2.image_index=6;         
    a2_3 = instance_create(400+24+36*2-8,-96,objHappy_Logo);
    a2_3.image_index=4;         
    a2_4 = instance_create(400+24+36*3-8,-96,objHappy_Logo);
    a2_4.image_index=2;         
    a2_5 = instance_create(400+24+36*4-8,-96,objHappy_Logo);
    a2_5.image_index=3;         
    a2_6 = instance_create(400+24+36*5-8,-96,objHappy_Logo);
    a2_6.image_index=7;         
    a2_7 = instance_create(400+24+36*6-8,-96,objHappy_Logo);
    a2_7.image_index=4;         
    a2_8 = instance_create(400+24+36*7-8,-96,objHappy_Logo);
    a2_8.image_index=0;         
    a2_9 = instance_create(400+24+36*8-8,-96,objHappy_Logo);
    a2_9.image_index=8;         
    
    with(objHappy_Logo) {
        x+=random_range(-3,3);
        xx=x;
        sprite_index=sprHappy_KMMLogoGlow;
        image_alpha=0;
        image_xscale=random_range(0.75,1.15);
        image_yscale=image_xscale;
        sprite_case=1;
        drawline=true;
        depth=-110;
    }
    
    with(objPlayer) { frozen=true; }
    px=objPlayer.x;
    py=objPlayer.y;
    
    with(objBlock) { instance_destroy(); }
    //      tried to fix a bug where player could get some damage at the transition
    lyrics_x = random_range(180,220)
    lyrics_y = 304+(random_range(128,160)*choose(-1,1))/1.3;
    lyrics_x_shift = 0//random_range(-4,4);
    lyrics_y_shift = 0//random_range(-4,4);
    
}
if t==3231 {
    with(objHappy_Bullet_01) {
        if tag=='S4_glow_spawner' {
            direction=point_direction(400+dcos(direction)*416,304+dsin(direction)*416,400,304)+60;
            speed=24;
        }
    }
}

if t&gt;3230 and t&lt;3335 {
    with(objAvoidanceBullet) { 
        killer=false; 
        image_alpha-=0.01;
        if image_alpha&lt;=0 { instance_destroy(); }
    }
    objPShaderEffect.intensity=EaseInSine(t-3230,0.005,0.01,105);
    if t&lt;3260 {
        objHappy_Darkness.image_alpha=EaseOutQuart(t-3230, 0, 1.2, 30);
        objHappy_Glitch.image_alpha=EaseOutQuart(t-3230, 0, 0.2, 30);
    }
    if t mod 20 == 0 {
        objHappy_Glitch.image_angle+=90;
    }
    view_xview[0]=EaseInSine(t-3230,32,90,105);
    view_yview[0]=view_xview[0]/1.3;
    view_wview[0]=800-view_xview[0]*2;
    view_hview[0]=608-view_yview[0]*2;
    
    objHappy_Spotlight.x=EaseOutQuart(t-3230,0,view_xview[0]-12,105);//view_xview[0];
    objHappy_Spotlight.y=EaseOutQuart(t-3230,0,view_yview[0]-12,105);
    objHappy_Spotlight.image_xscale=EaseOutQuart(t-3230,1,(view_wview[0]+24)/800,105)
    objHappy_Spotlight.image_yscale=EaseOutQuart(t-3230,1,(view_hview[0]+24)/608,105)
    objHappy_Spotlight.image_alpha=EaseOutQuart(t-3230, 0.5, 1, 105);
    
    objPlayer.x=EaseInOutSine(t-3230,px,400,105);
    objPlayer.y=EaseInOutSine(t-3230,py,294,105);
    objPlayer.image_xscale=1+dsin((t-3230)*180/105)*1.5;
    objPlayer.image_yscale=1+dsin((t-3230)*180/105)*1.5;
}

if t==3280 {
    rand_angle=30//random(360);
    for (angle=rand_angle; angle&lt;rand_angle+360; angle+=15) {
        var s4_circle = instance_create(-400,-304,objHappy_Bullet_trig);
        s4_circle.sprite_index=sprHappy_MayuCherry;
        s4_circle.image_xscale=3;
        s4_circle.image_yscale=3;
        s4_circle.cen_x=400;
        s4_circle.cen_y=304;
        s4_circle.dir=angle;
        s4_circle.len=416;
        s4_circle.dir_inc=1
        s4_circle.depth=-30;
        s4_circle.tag='S4_circle';
        s4_circle.subtag=sign((angle-rand_angle) mod 45)
    }
}

if t&gt;3280 and t&lt;3385 {
    with(objHappy_Bullet_trig) {
        if tag=='S4_circle' {
            len=EaseOutBack(t,516,128,105);
            image_xscale=EaseOutBack(t,3,1,105);
            image_yscale=image_xscale;
            image_alpha=1;
        }
    }
}

////////////////////////////////////////////////////////////2nd part: Actual gameplay

if t&gt;3230 and t&lt;3435 {
    with(objHappy_Logo) {
        if t&lt;85 {
           y = EaseOutSine(t, 0, fall_limit, 85);
        }
        if t&lt;40 {
           image_alpha=EaseInSine(t, 0, 1, 40);
        }
        y+=min(0,dsin((t+t_add)*2)/8);
        x+=dcos((t+t_add)*2)/16;
    }
}

if t&gt;3335 and t&lt;3435 {
    with(objHappy_Logo) {
        if image_alpha&gt;0 {
            image_alpha-=1.2/98;
        }
        if image_alpha&lt;=0 { instance_destroy(); }
    }
    with(objPShaderEffect) {
        intensity-=0.0005;
        if intensity&lt;=0 { instance_destroy(); }
    }
    if t&lt;3385 {
        line_alpha+=0.015;
    }
}

if t==3335 {
    random_set_seed(t*t);
    with(objHappy_Bullet_trig) {
        if tag=='S4_circle' {
            /*repeat(2) {
                warp_cherry = instance_create(x,y,objHappy_Bullet_01);
                warp_cherry.sprite_index=sprite_index;
                warp_cherry.direction=dir+90+random_range(-15,15);
                //warp_cherry.speed=irandom_range(2,4)
                warp_cherry.friction=irandom(0.2);
                warp_cherry.killer=false;
                warp_cherry.image_alpha=1;
                warp_cherry.image_xscale=irandom_range(0.8,1.3);
                warp_cherry.image_yscale=warp_cherry.image_xscale;
                warp_cherry.aimlock=false;
                warp_cherry.persist=true;
                warp_cherry.tag='S4_warp_cherry_fade_out';
                instance_destroy();
            }*/
            repeat(2-subtag) {
                var a = instance_create(x,y,objHappy_Bullet_01);
                a.sprite_index=sprite_index;
                a.image_xscale=image_xscale;
                a.image_yscale=image_yscale;
                a.image_tag=random_range(0.01,0.3);
                a.subtag=EaseOutBack(55,3,1,105);//image_xscale+random_range(-0.3,0.05);
                a.persist=true;
                a.killer=false;
                a.direction=dir+random_range(75,105);
                a.speed=random_range(2.5,5);
                a.friction=random_range(0.1,0.2);
                a.tag='S4_warp_cherry_fade_out';
            }
            repeat(1+subtag) {
                var a = instance_create(x,y,objHappy_Bullet_01);
                a.sprite_index=sprite_index;
                a.image_xscale=image_xscale;
                a.image_yscale=image_yscale;
                a.image_tag=random_range(0.01,0.3);
                a.subtag=EaseOutBack(55,3,1,105);//image_xscale+random_range(-0.3,0.05);
                a.persist=true;
                a.killer=false;
                a.direction=dir+random_range(75,105);
                a.speed=random_range(2.5,5);
                a.friction=random_range(0.1,0.2);//random(0.25);
                a.tag='S4_jumpscare';
            }
            instance_destroy();
        }
    }
    for (xx=0; xx&lt;=800; xx+=32) {
        block = instance_create(xx,352-26,objBlock);
        //block.visible=true;
        block.depth=0;
        block.tag='s4_platform';
    }
    for (yy=0; yy&lt;608; yy+=32) {
        block2 = instance_create(70,yy,objBlock);
        block2.depth=0;
        block2.tag='s4_wall_one';
        block3 = instance_create(700,yy,objBlock);
        block3.depth=0;
        block3.tag='s4_wall_two';
    }
    with(objPlayer) { frozen=false; vspeed=0; }
    draw_line_flag=true;
    line_color=c_white;
    
    for (var xx=96;xx&lt;800-96;xx+=24) {
        var a = instance_create(0,0,objHappy_Bullet_trig);
        a.cen_x=xx;
        a.cen_y=336;
        a.dir=xx*1.75*s4_spiral_spin_case;
        a.len=16;
        a.deg_x=4000;
        a.deg_y=-1;
        a.dir_inc=1.25;
        a.sprite_index=sprHappy_MayuCherry;
        a.image_angle=0;
        a.image_alpha=0;
        a.tag='S4_spiral'
        a.killer=false;
        a.image_tag=dsin(a.dir-90)/2;
        //a.Type="Hold"//"Penalty"
        //a.penalty_hold=true;
        //a.image_blend=merge_color(c_white,c_red,0.5);
    }
}

if t&gt;3335 and t&lt;4130 {
    if t&lt;3435 { 
        with(objHappy_Bullet_trig) {
            if tag=='S4_spiral' {
                image_alpha=EaseInSine(t,0,0.3,100);
                image_xscale=EaseInSine(t,0,0.5-image_tag/2,100);
                image_yscale=image_xscale;
                image_tag=dsin(dir-90)/2;
            }
        }
    }
    //if t==3435 {
    //    with(objHappy_Bullet_trig) {
    //        if tag=='S4_spiral' { killer=true; }
    //    }
    //}
    if t&gt;3385 {
        with(objHappy_Bullet_trig) {
            if tag=='S4_spiral' {
                image_xscale=0.5-dsin(dir-90)/4;
                image_yscale=image_xscale;
                if killer==true { image_alpha=0.8-dsin(dir-90)/2; }
                if t&lt;775 {
                    if image_alpha&lt;0.8 { killer=false; }
                    else { killer=true; }
                }
                else { killer=false; }
                depth=dsin(dir-90)*50;
                if (dir mod 360 &gt; 250)and(dir mod 360 &lt; 290) {
                    //killer=true;
                }
            }
        }
    }
}

if t&gt;3335 and t&lt;4000 {
    with(objHappy_Bullet_01) {
        if tag=='S4_epic_fail' {
            if image_alpha&gt;0.2 { image_alpha-=0.025 }
        }
        if tag=='S4_jumpscare' {
            if image_alpha&gt;0.15 { image_alpha-=0.025 }
            if friction&gt;0 { friction-=0.01; }
            if speed&lt;1.5 { friction=0; speed=1.5; }
            if x&lt;view_xview[0]-20 
                x=view_xview[0]+view_wview[0]+19; 
            
            if x&gt;view_xview[0]+view_wview[0]+20  
                x=view_xview[0]-19;
            
            if y&lt;view_yview[0]-20 
                y=view_yview[0]+view_hview[0]+19; 
            
            if y&gt;view_yview[0]+view_hview[0]+20 
                y=view_yview[0]-19;
            
        }
        if tag=='S4_warp_cherry_fade_out' {
            if image_alpha&gt;0.2 { image_alpha-=0.025 }
            if friction&gt;0 { friction-=0.01; }
            if friction&lt;0 { friction=0; }
            if speed&lt;2.5 { friction=0; speed=2.5; accel=0; }
            if t&lt;20 {
                image_xscale=EaseOutSine(t,subtag,subtag+image_tag,19);
                image_yscale=image_xscale;
            }
            if x&lt;view_xview[0]-20 { 
                x=view_xview[0]+view_wview[0]+19; 
                if killer=false { curve_real=random_range(-1,1)/1.5 } 
                killer=true; 
                image_alpha=1; 
                tag='S4_warp_cherry';
            }
            if x&gt;view_xview[0]+view_wview[0]+20 { 
                x=view_xview[0]-19;
                if killer=false { curve_real=random_range(-1,1)/1.5 } 
                killer=true; 
                image_alpha=1; 
                tag='S4_warp_cherry';
            }
            if y&lt;view_yview[0]-20 { 
                y=view_yview[0]+view_hview[0]+19; 
                if killer=false { curve_real=random_range(-1,1)/1.5 } 
                killer=true; 
                image_alpha=1; 
                tag='S4_warp_cherry';
            }
            if y&gt;view_yview[0]+view_hview[0]+20 { 
                y=view_yview[0]-19;
                if killer=false { curve_real=random_range(-1,1)/1.5 } 
                killer=true; 
                image_alpha=1; 
                tag='S4_warp_cherry';
            }
            
            /* bruh..... */
            
        }
        if tag=='S4_warp_cherry' or tag='s4_second_wrapping_circle' {
            if x&lt;view_xview[0]-20 { x=view_xview[0]+view_wview[0]+19; killer=true; image_alpha=1; }
            if x&gt;view_xview[0]+view_wview[0]+20 { x=view_xview[0]-19; killer=true; image_alpha=1; }
            if y&lt;view_yview[0]-20 { y=view_yview[0]+view_hview[0]+19; killer=true; image_alpha=1; }
            if y&gt;view_yview[0]+view_hview[0]+20 { y=view_yview[0]-19; killer=true; image_alpha=1; }
        }
    }
}

if t==3520 {
    /*
    -----------------------------------------------
    |~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~|
    |S                                           S|
    |S               Rest in peace               S|
    |S                говно-идея                 S|
    |S           ??.??.2023-01.10.2023           S|
    |S                                           S|
    |~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~|
    |S                                           S|
    |S               как же похуй                S|
    |S                                           S|
    |~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~|
    -----------------------------------------------
    */
    
    rand_angle=random(360);
    for (i=0;i&lt;5;i++) {
        var a = instance_create(-4000,-4000,objHappy_Bullet_trig);
        a.killer=false;
        a.cen_x=400;
        a.cen_y=304;
        a.dir=rand_angle+72*i;
        a.len=0;
        a.sprite_index=sprHappy_WBCherry;
        a.image_alpha=0;
        a.image_xscale=0.35;
        a.image_yscale=a.image_xscale;
        a.tag='s4_lining_penta_spawner';
        a.subtag=i;
    }
    
    
}


if t&gt;3520 and t&lt;3572+60 {
    with(objHappy_Bullet_trig) {
        if tag=='s4_lining_penta_spawner'  {
            if t&lt;60 {
                image_alpha=EaseOutCubic(t,0,0.5,60);
                image_xscale=EaseOutCubic(t,0.25,0.75,60);
                image_yscale=image_xscale;
                len=EaseOutSine(t,0,224,60)
            }
            dir_inc=EaseInOutCubic(t,3,0.05,3572+60-3520);
        }
    }
}

if t==3572 {
    with(objHappy_Bullet_trig) {
        if tag=='s4_lining_penta_spawner' {
            if subtag==0 {
            
                // КОЛЬЦО   КОЛЬЦО   КОЛЬЦО   КОЛЬЦО   КОЛЬЦО   КОЛЬЦО   КОЛЬЦО   КОЛЬЦО   КОЛЬЦО   КОЛЬЦО   КОЛЬЦО   КОЛЬЦО   КОЛЬЦО   КОЛЬЦО   КОЛЬЦО   
            
                for (var sha_po_bistromu_sprignu_s_4_etaja = 0; sha_po_bistromu_sprignu_s_4_etaja&lt;360; sha_po_bistromu_sprignu_s_4_etaja += 10) {
                
                    celebnie_svoistva_padeniya_s_4_etaja = sha_po_bistromu_sprignu_s_4_etaja + dir;
                    
                    var a = instance_create(-400,-400,objHappy_Bullet_trig);
                    a.killer=false;
                    a.sprite_index=sprite_index;
                    a.image_xscale=image_xscale-random_range(0.05,0.15);
                    a.image_yscale=a.image_xscale;
                    a.image_alpha=0;
                    a.cen_x=cen_x;
                    a.cen_y=cen_y;
                    a.dir=dir;
                    a.len=len;
                    a.findir=celebnie_svoistva_padeniya_s_4_etaja;
                    a.subtag=dir;                   //блять, ну что за еблан а...
                    a.tag='s4_penta_circle'         //ебнись уже головой об кафель
                    
                    if sha_po_bistromu_sprignu_s_4_etaja mod 60 == 0 {
                        var aa = instance_create(-400,-400,objHappy_Bullet_trig);
                        aa.killer=false;
                        aa.sprite_index=sprite_index;
                        aa.image_xscale=image_xscale-random_range(0.05,0.15);
                        aa.image_yscale=a.image_xscale;
                        aa.image_tag=image_xscale;
                        aa.image_alpha=0;
                        aa.cen_x=cen_x;
                        aa.cen_y=cen_y;
                        aa.dir=dir;
                        aa.len=len;
                        aa.findir=celebnie_svoistva_padeniya_s_4_etaja;
                        aa.subtag=dir;                   
                        aa.tag='s4_penta_circle_but_ugly'
                    }
                }
            }
            
            
            //  ЗВЕЗДА   ЗВЕЗДА   ЗВЕЗДА   ЗВЕЗДА   ЗВЕЗДА   ЗВЕЗДА   ЗВЕЗДА   ЗВЕЗДА   ЗВЕЗДА   ЗВЕЗДА   ЗВЕЗДА   ЗВЕЗДА   ЗВЕЗДА   ЗВЕЗДА   
            
            
            for (var distance=0; distance&lt; 2 * len * dsin(144/2); distance+=32) {
                if distance mod 160 == 0 {
                    var vkusno_i_tochka = instance_create(-400,-400,objHappy_Bullet_trig_ext);
                    vkusno_i_tochka.killer=killer;
                    vkusno_i_tochka.sprite_index=sprite_index;
                    vkusno_i_tochka.image_xscale=image_xscale+random_range(-0.25,-0.15);
                    vkusno_i_tochka.image_yscale=vkusno_i_tochka.image_xscale;
                    vkusno_i_tochka.image_tag=image_xscale+random_range(-0.1,0.1);
                    vkusno_i_tochka.image_alpha=0;
                    vkusno_i_tochka.cen_cen_x=cen_x;
                    vkusno_i_tochka.cen_cen_y=cen_y;
                    vkusno_i_tochka.cen_dir=dir;
                    vkusno_i_tochka.cen_len=len;
                    vkusno_i_tochka.cen_x=x;
                    vkusno_i_tochka.cen_y=y;
                    vkusno_i_tochka.dir=point_direction(x,y,400,304)+18;
                    vkusno_i_tochka.finlen=distance;
                    vkusno_i_tochka.subtag=subtag;
                    vkusno_i_tochka.tag='s4_lining_penta_but_ugly';
                }
                var a = instance_create(-400,-400,objHappy_Bullet_trig_ext);
                a.killer=killer;
                a.sprite_index=sprite_index;
                a.image_xscale=image_xscale+random_range(-0.25,-0.15);
                a.image_yscale=a.image_xscale;
                a.image_alpha=0.25;
                
                a.cen_cen_x=cen_x;
                a.cen_cen_y=cen_y;
                a.cen_dir=dir;
                a.cen_len=len;
                a.cen_x=x;
                a.cen_y=y;
                a.dir=point_direction(x,y,400,304)+18;
                a.finlen=distance;
                a.subtag=subtag;
                
                a.tag='s4_lining_penta';
                instance_destroy();
            }
            
            //https://www.ozon.ru/product/maz-zvezdochka-balzam-vetnam-repellenty-sredstvo-ot-komarov-i-kleshchey-4g-1-nabor-3-sht-1220215993/?_bctx=CAMQkKn9Qg&amp;asb=33z0aVrlepqsErMF%252FHD8ACv41hCU8jz3LnYwEIIks1s%253D&amp;asb2=hq_GKgqf1mxWb6-VwktFadpQ44BkSL9f6bqTP62ZVo4LbdurjRhAeP_EHnm29Vlj&amp;avtc=1&amp;avte=2&amp;avts=1696470961
            
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            
            
        }
    }
}

if t&gt;3572 or t&lt;3572+300 {
    with(objHappy_Bullet_trig_ext) {
        if tag=='s4_lining_penta' or tag=='s4_lining_penta_but_ugly' {
            subtag-=0.25;
            if subtag==0 {
                t=0;
            }
            if subtag&lt;=0 {
                if t&lt;50 {
                    len=EaseOutQuart(t,0,finlen,49);
                }
                //if t&lt;10 and tag=='s4_lining_penta' {
                //    image_alpha=EaseOutExpo(t,0,0.2,9);
                //}
            }
            if len_t&lt;45 {       
                cen_dir_inc=EaseInOutCubic(len_t+52,3,0.05,112-5);   
                dir_inc=EaseInOutCubic(len_t+52,3,0.05,112-5);
            }
        }
    }
    with(objHappy_Bullet_trig) {
        if tag=='s4_penta_circle' or tag=='s4_penta_circle_but_ugly' {
            if t&lt;49 {
                dir=EaseOutCubic(t,subtag+dir_inc*t,findir+dir_inc*t,49);
                if tag=='s4_penta_circle' { image_alpha=EaseOutCubic(t,0,0.25,49); }
                //if tag=='s4_penta_circle_but_ugly' {  image_alpha=EaseOutCubic(t,0,1,49); }
                dir_inc=EaseInOutCubic(t+52,3,0.05,112);
            }
        }
    }
}

/*
3620
3670
3732
*/



if t==3620 {
    with(objHappy_Bullet_trig_ext) {
        if tag=='s4_lining_penta' or tag=='s4_lining_penta_but_ugly' {
            var a = instance_create(x,y,objHappy_Bullet_trig);
            a.killer=false;
            a.sprite_index=sprite_index;
            a.image_xscale=image_xscale;
            a.image_yscale=image_yscale;
            a.image_alpha=image_alpha;
            a.image_tag=image_xscale;
            a.cen_x=cen_cen_x;
            a.cen_y=cen_cen_y;
            a.dir=point_direction(a.cen_x,a.cen_y,x,y);
            a.dir_inc=dir_inc;
            a.len=point_distance(a.cen_x,a.cen_y,x,y);
            a.tag=tag;
            instance_destroy();
        }
    }
    with(objHappy_Bullet_trig) {
        if tag=='s4_penta_circle' or tag=='s4_penta_circle_but_ugly' or tag=='s4_lining_penta' or tag=='s4_lining_penta_but_ugly' {
            finlen=len;
            lendeg=random_range(8,96);
            findir=random_range(2,8);
            subtag=len;
            t=0;
            if tag=='s4_penta_circle' { tag='s4_penta_circle_with_a_plot_twist' }
            if tag=='s4_penta_circle_but_ugly' { tag='s4_penta_circle_but_ugly_with_a_plot_twist' }
            
            //я кншн все понимаю, надо теги переименовать чтоб все не пошло через жопу
            //но по тупее не смог придумать название?
        }
    }
}

if t&gt;3620 and t&lt;3732 {
    with(objHappy_Bullet_trig) {
        if tag=='s4_penta_circle_with_a_plot_twist'  or tag=='s4_penta_circle_but_ugly_with_a_plot_twist' 
        or tag=='s4_lining_penta' or tag=='s4_lining_penta_but_ugly' {
            if t&lt;110 {
                if tag=='s4_penta_circle_with_a_plot_twist' or tag=='s4_lining_penta' {
                    image_alpha=EaseOutSine(t,0.3,-0.05,110);
                }
                if tag=='s4_penta_circle_but_ugly_with_a_plot_twist' or tag=='s4_lining_penta_but_ugly' {
                    image_alpha=EaseOutSine(t,0,1,110);
                    image_xscale=EaseInSine(t,image_tag,image_tag+0.25,110);
                    image_yscale=image_xscale;
                    len=min(224,EaseInOutSine(t,finlen,finlen+lendeg,110))
                }
                dir_inc=dsin(t*179/110)*findir;
            }
        }
    }
}
if t==3732 {
    with(objHappy_Bullet_trig) {
        if tag=='s4_penta_circle_with_a_plot_twist' or tag=='s4_lining_penta' { instance_destroy(); }
        if tag=='s4_penta_circle_but_ugly_with_a_plot_twist' or tag=='s4_lining_penta_but_ugly' {
            a = instance_create(x,y,objHappy_Bullet_01);
            a.image_xscale=image_xscale;
            a.image_yscale=image_yscale;
            a.direction=point_direction(objPlayer.x,objPlayer.y,x,y)+random_range(-15,15);
            a.speed=random_range(2,4);
            a.persist=true;
            a.tag='s4_second_wrapping_circle';
            
            a2 = instance_create(x,y,objHappy_Bullet_01);
            a2.image_xscale=image_xscale;
            a2.image_yscale=image_yscale;
            //a2.direction=point_direction(400,304,x,y)+random_range(-15,15);
            //a2.speed=random_range(3,7);
            a2.killer=false;
            a2.tag='s4_fading_out_circle';
            instance_destroy();
        }
    }
}

if t&gt;3732 and t&lt;3732+50 {
    with(objHappy_Bullet_01) {
        if tag=='s4_fading_out_circle' {
            if t&lt;15 {
                image_alpha=EaseInSine(t,1,0,14);
            }
            image_xscale+=0.05;
            image_yscale+=0.05;
            if image_alpha&lt;=0 { instance_destroy(); }
        }
    }
}

if t&gt;3520 and t&lt;3650 {
    if t&lt;3570 {
        with(objHappy_Bullet_trig) {
            if tag=='s4_warping_circles' {
                if t&lt;45 {
                    len=EaseOutQuart(t,0,finlen,44);
                    image_xscale=EaseOutQuart(t,0,image_tag,44);
                    image_yscale=image_xscale;
                    dir_inc=EaseOutBack(t,subtag,0,44);
                }
            }
        }
    }
}

if t==3904 {
    with(objHappy_Bullet_01) {
        if tag=='S4_warp_cherry' or tag='s4_second_wrapping_circle' {
            friction=speed/20;
        }
    }
}

if t&gt;3904 and t&lt;3909 {
    with(objHappy_Bullet_01) {
        if tag=='S4_warp_cherry' or tag='s4_second_wrapping_circle' {
            if image_xscale&gt;0.8 {
                image_xscale-=0.02;
                image_yscale=image_xscale;
            }
        }
    }
}

if t==3909 {
    with(objHappy_Bullet_01) {
        if tag=='S4_warp_cherry' or tag='s4_second_wrapping_circle' {
            friction=0;
        }
    }

}

if t&gt;3909 and t&lt;4130 {
    if t mod 20 == 9 {
        random_set_seed(random(300));
        rand_x[0]=random_range(45,800-45);
        rand_y[0]=45/1.3;                                    //top
        rand_x[1]=random_range(45,800-45);
        rand_y[1]=608-(45/1.3);                             //bottom
        rand_x[2]=45
        rand_y[2]=random_range((45/1.3),608-(45/1.3));      //left;
        rand_x[3]=800-45;
        rand_y[3]=random_range((45/1.3),608-(45/1.3));      //right
        for (i=0; i&lt;4; i++) {
            var s4_hand = instance_create(rand_x[i],rand_y[i],objHappy_Hand);
            s4_hand.tag='S4_hand';
            s4_hand.direction = point_direction(s4_hand.x,s4_hand.y,400,304);
            s4_hand.image_angle=s4_hand.direction;
            s4_hand.speed=1;
            s4_hand.tag='S4_hand';
            s4_hand.image_alpha=0;
        }
        
    }
    with(objHappy_Hand) {
        if tag=='S4_hand' {
            rr=random_range(-1,1);
            direction=point_direction(x+rr,y+rr,400,304);
            image_angle=direction;
            if point_distance(400,304,x,y)&lt;distance_limit { friction=0.01 }
            x+=rr;
            xstart+=rr;
            y+=rr;
            ystart+=rr;
            if image_alpha&lt;1 { image_alpha+=0.01; }
        }   
    }
}

if t==4010 {
    shader_transition = instance_create(0,0,objPShaderEffect);
    shader_transition.shader = shEasyShaderExample;
    shader_transition.intensity = 0;
    shader_transition.tag='glitch_effect'
}

if t&gt;4010 and t&lt;4130 {
    if t&gt;4030 { with(objAvoidanceBullet) { killer=false; } }
    //objPShaderEffect.intensity = EaseInSine(t-4010,0,0.04,100);
    with(objPShaderEffect) {
        if tag=='glitch_effect' {
            intensity = EaseInSine(other.t-4010,0,0.04,100);
        }
    }
    objAvoidanceBullet.image_blend=merge_color(image_blend,c_maroon,(t-4010)/100);
    objHappy_Hand.image_blend=merge_color(c_white,c_maroon,(t-4010)/100);
}

if t==4080 {
    darkness = instance_create(0,0,objHappy_Darkness);
    darkness.image_alpha=0;
    darkness.image_blend=c_black;
    darkness.tag='S4_to_S5'
    lyrics_alpha=1;
    with(objHappy_Bullet_01) {
        if tag=='S4_warp_cherry' or tag='s4_second_wrapping_circle' {
            friction=speed/30;
        }
    }
}
if t==4090 {
    with(objHappy_Bullet_01) {
        if tag=='S4_warp_cherry' or tag='s4_second_wrapping_circle' {
            friction=0;
        }
    }

}

if t&gt;4080 and t&lt;4130 {
    with(objHappy_Darkness) {
        if tag=='S4_to_S5' { image_alpha+=0.02; }
    }
    if lyrics_alpha&gt;0 { lyrics_alpha-=0.1; }
}


if t==4110 {
    if global.s5_side==1 { xx = view_xview[0]+view_wview[0]; also_xx=96*3.6 }
    if global.s5_side==-1 { xx=view_xview[0]; also_xx=-96*3.6 }
    for (var yy=view_yview[0]-16; yy&lt;view_yview[0]+view_hview[0]+16; yy+=(view_hview[0]/10)) {
        var a = instance_create(xx,yy,objHappy_BlackBox);
        a.image_xscale=random_range(3.5,6);
        a.image_yscale=a.image_xscale;
        a.image_angle=random(360);
        a.depth=-900;
    }
    repeat(40) {
        var a = instance_create(xx,304+random_range(-48,48),objHappy_Line);
        a.image_xscale=random_range(0.75,1)+1;
        a.image_yscale=a.image_xscale;
        a.image_angle=random(360);
        a.direction=point_direction(a.x,a.y,400,304)+random(35)*choose(-1,1);
        a.speed=random_range(32,38);
        a.friction=a.speed/30;
        a.depth=-500;
        a.tag=random_range(-2,2);
    }
    for (var why=0; why&lt;96*3+1; why+=96) {
        var a = instance_create(xx+also_xx+why*sign(also_xx),304,objHappy_Arrow);
        //a.image_alpha=0.85;
        a.image_angle=point_direction(a.x,a.y,400,304);
        a.image_xscale=2.6;
        a.image_yscale=a.image_xscale;
        a.direction=point_direction(a.x,a.y,400,304);
        a.speed=40
        a.friction=a.speed/30;
        a.depth=-600-(why/48);
    }
}

if t==4130 {
    //with(objHappy_Darkness) { if tag=='S4_to_S5' { image_alpha=1; } }
    with(objHappy_Glitch) { image_alpha/=2; }
    with(objAvoidanceBullet) { instance_destroy(); }
    with(objHappy_Hand) { instance_destroy(); }
    with(objPShaderEffect) { instance_destroy(); }
    with(objHappy_BlackBox) { instance_destroy(); }
    with(objHappy_Line) { instance_destroy(); }
    with(objHappy_Arrow) { instance_destroy(); }
    with(objPlayer) {
        x=400;
        xprevious=400;
    }
    //  nerd emoji this dumbass ^
    
    
    
}


////////////////////////////////////////////////////////////3rd part: Decorations
//                  most likely will just add song lyrics in here and addictional
//                  stuff for background/edges of the screen

if t==3370 {
    lyrics_string_order=0;
    lyrics_string=lyrics_p2[lyrics_string_order];
    lyrics_flag=true;
    lyrics_shift_range=6;
    lyrics_halign=fa_top;
    lyrics_valign=fa_left;
}

if t&gt;3370 and t&lt;3400 {
    lyrics_alpha = EaseInSine(t-3370,0,1,30);
}

if t==3529 or t==3776 or t==3924 or t==4130 {
    lyrics_string_order+=1;
    lyrics_string=lyrics_p2[lyrics_string_order];
    if t!=3773 {
        lyrics_x = random_range(180,220);
        lyrics_y = 304+(random_range(128,160)*choose(-1,1))/1.3;
    }
    if t==3773 {
        lyrics_x = 180;
        lyrics_y = 304+choose(-160,160); 
    }
}

if t&gt;3335 and t&lt;4130 and t mod 10 == 0 {
    y1=random_range(2,6);
    y2=random_range(2,6);
    y3=random_range(2,6);
    y4=random_range(2,6);
}



}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Segment №5: 1:25 - 1:41 (frames: 4133 - 4940)


if instance_exists(objPlayer) {

//                  1st part: Gameplay

if t&gt;4133 and t&lt;4153 {
    with(objHappy_Darkness) {
        if tag=='S4_to_S5' {
            image_alpha-=0.1;
            if image_alpha&lt;=0 { instance_destroy(); }
        }
    }
    
}

if t&gt;=4130 and t&lt;=4620 {
    if t==4130 or t==4233 { 
        if t==4130 {
            var yy=800
            if global.s5_side==1 {          //left
                var xx=10+124+48; 
                xx+=irandom(32); 
                spin=-2; 
                rand_angle=point_direction(xx,yy,400,304)+10+random_range(-3,3);
            }
            if global.s5_side==-1 {         //right
                var xx=170+496; 
                xx-=random(48); 
                spin=2; 
                rand_angle=point_direction(xx,yy,400,304)-10+random_range(-3,3);
            }
            numbprojectiles = 11+irandom(2)
            distance=384
            
            
            
        }
        if t==4233 {
            with(objHappy_Bullet_01) {
                if tag=='s5_fade_out' or tag=='s5_wall' {
                    direction=point_direction(objPlayer.x,objPlayer.y,x,y);
                    speed=random_range(4,6)
                }
            }
            with(objHappy_Bullet_trig) {
                if tag=='s5_spawner1' or tag=='s5_spawner2' {
                    instance_destroy();
                }
                if tag=='s5_sliding_star' {
                    //repeat(2) {
                        var a = instance_create(x,y,objHappy_Bullet_01);
                        
                        if global.s5_inside_star==true { angle=point_direction(objPlayer.x,objPlayer.y,x,y); }
                        else { angle=dir; }
                        
                        
                        a.direction=angle;                //point_direction(objPlayer.x,objPlayer.y,x,y);
                        a.speed=random_range(4,6);
                        //a.accel=0.2;
                        a.gravity=0.01;
                        a.image_xscale=image_xscale;
                        a.image_yscale=image_yscale;
                        a.tag='s5_sliding_star_end';
                    //}
                    instance_destroy();
                }
            }
            var yy=-200
            if global.s5_side==-1 {         //right
                var xx=10+124+64; 
                xx+=random(48); 
                spin=-2; 
                rand_angle=point_direction(xx,yy,400,304)+50//+random_range(75,90)+choose(45,50) 
            }
            if global.s5_side==1 {          //left
                var xx=170+496; 
                xx-=random(48); 
                spin=2; 
                rand_angle=point_direction(xx,yy,400,304)-50//+random_range(45,60)+choose(25,30) 
            }
            numbprojectiles = 12+irandom(2)
            distance=384+32
            global.s5_inside_star=false;
            
            
        }
        //distance=384            //random_range(96,144)
        
                                                            /*
                                                            spawning stars
                                                            */
        scrMakeStar(xx,yy,objHappy_Bullet_01,distance,rand_angle,numbprojectiles,'s5_sliding_star');
        scrMakeStar(xx,yy,objHappy_Bullet_01,distance,rand_angle,numbprojectiles*3,'s5_sliding_star_deco');
        
        
        with(objHappy_Bullet_01) {
            if tag=='s5_sliding_star' or tag=='s5_sliding_star_deco' {
                var a = instance_create(-4000,-4000,objHappy_Bullet_trig);
                a.cen_x=x;
                a.cen_y=y;
                a.dir=direction;
                a.finlen=speed;
                a.dir_inc=other.spin;
                a.sprite_index=sprHappy_WBCherry;
                a.image_xscale=0.75;
                a.image_yscale=0.75;
                if tag=='s5_sliding_star_deco' {
                    a.image_alpha=0.1;
                    a.killer=false;
                }
                a.tag='s5_sliding_star';
                instance_destroy();
            }
        }
        
    }
    with(objHappy_Bullet_trig) {
        if tag=='s5_sliding_star' {
            if other.t&lt;4233 {
                if dir_inc&lt;0 { dir_inc=EaseOutQuart(t,-4,-0.5,102); }
                else { dir_inc=EaseOutQuart(t,4,0.5,102); }
                if t&lt;90 { len=EaseInOutSine(t,finlen/4,finlen,89); }
                if t&gt;90 { len=EaseInSine(t-90,finlen,finlen/1.5,25) }
                cen_y=EaseOutCubic(t,800,304,102);
                if other.t&gt;4218 {
                    if image_alpha&lt;1 { image_alpha=EaseInQuart(other.t-4215,0.1,1,14); }
                }
            }
            if other.t&gt;4233 and other.t&lt;4328 {
                if dir_inc&lt;0 { dir_inc=EaseOutQuart(t,-4,-0.5,107); }
                else { dir_inc=EaseOutQuart(t,4,0.5,107); }
                if t&lt;85 { len=EaseInOutSine(t,finlen/4,finlen,84); }
                if t&gt;85 { len=EaseInSine(t-85,finlen,finlen/1.5,25) }
                cen_y=EaseOutCubic(t,-200,304,107);
                if other.t&gt;4313 {
                    if image_alpha&lt;1 { image_alpha=EaseInQuart(other.t-4313,0.1,1,14); }
                }
            }
            if place_meeting(x,y,objPlayer) { global.s5_inside_star=true; }
        }
    }
    if t==4333 {
        with(objHappy_Bullet_01) {
            if tag=='s5_fade_out' or tag=='s5_wall' {
                direction=point_direction(objPlayer.x,objPlayer.y,x,y);
                speed=random_range(4,6)
                gravity/=10
            }
        }
        with(objHappy_Bullet_trig) {
            if tag=='s5_spawner1' or tag=='s5_spawner2' {
                instance_destroy();
            }
            if tag=='s5_sliding_star' {
                repeat(2) {
                    var a = instance_create(x,y,objHappy_Bullet_01);
                    
                    if global.s5_inside_star==true { angle=point_direction(objPlayer.x,objPlayer.y,x,y); }
                    else { angle=dir; }
                    
                    //forces you to be in a star (not exactly in the middle, cuz its hella unbalanced (and i have no idea how to do exactly that))
                    a.direction=angle;             //point_direction(objPlayer.x,objPlayer.y,x,y);
                    a.speed=random_range(4,6);
                    //a.accel=0.2;
                    a.gravity=-0.01;
                    a.image_xscale=image_xscale;
                    a.image_yscale=image_yscale;
                    a.tag='s5_sliding_star_end';
                }
                instance_destroy();
            }
        } 
        
                                                                        /*
                                                                        spawning several circles
                                                                        */
        
        for (var distance=128;distance&lt;128+48*4;distance+=48) {
        
            var rand_angle=random(360);
            //if (distance!=128) { density=choose(30,40); }
            //else { density=40; }
            switch(distance) {
                case 128: density=40;break;
                case 128+48: density=30; break;
                default: density=choose(30,40,20); break;
            }
            spin=choose(-4,4);
            
            for (var angle=rand_angle;angle&lt;rand_angle+360;angle+=10) {
                var a = instance_create(-400,-400,objHappy_Bullet_trig);
                a.cen_x=400;
                a.cen_y=304;
                a.dir=angle;
                a.len=point_distance(0,0,400,304);
                a.finlen=distance;
                a.sprite_index=sprHappy_WBCherry;
                a.image_xscale=3;
                a.image_yscale=3;
                a.subtag=(distance-128)/48;
                if a.subtag==0 {
                    a.free_variable[0] = ((angle-rand_angle) mod density)+1;
                }
                if (angle-rand_angle) mod density != 0 {
                    a.killer=false;
                    a.image_alpha=0.1;
                }
                a.tag='s5_sliding_circles'
            }
        }
        global.s5_inside_star=false;
    }
    if t&gt;4333 and t&lt;4430 {
        with(objHappy_Bullet_trig) {
            if tag=='s5_sliding_circles' {
                image_xscale=len/150;
                image_yscale=image_xscale;
                len=EaseOutQuart(t,point_distance(0,0,400,304),finlen,4430-4333);
                if dir_inc&lt;0 { dir_inc=EaseOutQuart(t,-4,-0.25,4430-4333); }
                else { dir_inc=EaseOutQuart(t,4,0.25,4430-4333); }
                /*if other.t mod 4 == 0 {
                    if killer=true {
                        var a = instance_create(x,y,objHappy_Bullet_01);
                        a.direction=random(360);
                        a.speed=random_range(1,3);
                        a.accel=0.1;
                        a.tag='s5_sliding_circles_spam'
                    }
                }*/
                start_point=4375;
                end_point=4390;
                if other.t==start_point {      
                    if subtag==0 {
                        
                        
                        if(killer) {
                            var a = instance_create(x,y,objHappy_Bullet_trig);
                            a.free_variable[0]=t;
                            a.cen_x=cen_x;
                            a.cen_y=cen_y;
                            a.dir=dir;
                            a.len=len;
                            a.free_variable[1]=len;
                            a.sprite_index=sprite_index;
                            a.image_xscale=image_xscale;
                            a.image_yscale=image_yscale;
                            a.killer=false;
                            a.image_alpha=0;
                            a.tag='s5_sliding_circle_snake_spawner';
                            
                        }
                    }
                }
            }
            if(tag=='s5_sliding_circle_snake_spawner') {
                image_xscale=max(0,(len-24)/150);
                image_yscale=image_xscale;
                if (len&lt;=0) or (image_xscale&lt;=0) instance_destroy();
                if dir_inc&lt;0 { dir_inc=EaseOutQuart(free_variable[0],-4,-0.25,4430-4333); }
                else { dir_inc=EaseOutQuart(free_variable[0],4,0.25,4430-4333); }
                if t&lt;=30 {
                    len=EaseOutSine(t,free_variable[1],0,30);
                    if t mod 2 == 0 {
                        var a = instance_create(x,y,objHappy_Bullet_01);
                        a.image_xscale=len/150;
                        a.image_yscale=a.image_xscale;
                        a.direction=random(360);
                        a.speed=0.5;
                        a.killer=false;
                        a.image_alpha=0.65;
                        a.tag='s5_sliding_circle_snake'
                    }
                }
                
            }
        }
        with(objHappy_Bullet_01) {
            if tag=='s5_sliding_circle_snake' {
                image_alpha-=0.035;
                if image_alpha&lt;=0 instance_destroy();
            }
        }
    }
    
    //view+blocks slides
    //Easily the worst way to code this attack
    
    if t&lt;4233 {
    
    
    
        if global.s5_side==-1 {             
            edge_x1=EaseOutSine(t-4130,view_xview[0]+64,view_xview[0]+view_wview[0]/2-120,4233-4130-1);      
            edge_x2=EaseOutSine(t-4130,view_xview[0]-128,view_xview[0]-64,4233-4130-1);//view_xview[0]
            
            /*
            right wall
            edge_x1 - right side
            edge_x2 - left side
            */
            
            view_xview[0]=EaseOutQuint(t-4130,90,170,4233-4130);
            with(objBlock) {
                if tag=='s4_wall_one' { x=EaseOutQuint(other.t-4130,70,150,4233-4130); }
                if tag=='s4_wall_two' { x=EaseOutQuint(other.t-4130,700,780,4233-4130); }
            }
        }
        if global.s5_side==1 {                  
            edge_x1=EaseOutSine(t-4130,view_xview[0]+view_wview[0]-64,view_xview[0]+view_wview[0]/2+120,4233-4130-1);
            edge_x2=EaseOutSine(t-4130,view_xview[0]+view_wview[0]+128,view_xview[0]+view_wview[0]+64,4233-4130-1);//view_xview[0]+view_wview[0]
            
            /*
            left wall
            edge_x1 - left side
            edge_x2 - right side
            */
            
            view_xview[0]=EaseOutQuint(t-4130,90,10,4233-4130);
            with(objBlock) {
                if tag=='s4_wall_one' { x=EaseOutQuint(other.t-4130,70,-10,4233-4130); }
                if tag=='s4_wall_two' { x=EaseOutQuint(other.t-4130,700,620,4233-4130); }
            }
        }
        objHappy_Spotlight.x=view_xview[0]-12;
    }
    if t&gt;=4233 and t&lt;4323 {
        if global.s5_side==-1 {     
            if t&lt;4283 {
                edge_x1=EaseOutExpo(t-4233,view_xview[0]+view_wview[0]/2-120,view_xview[0]+64,4283-4233);
                edge_x2=EaseOutExpo(t-4233,view_xview[0]-64,view_xview[0]-128+32,4283-4233);
                
                /*
                left wall
                edge_x1 - right side
                edge_x2 - left side
                */
            
            }
            
            edge_x3=EaseOutSine(t-4233,view_xview[0]+view_wview[0],view_xview[0]+view_wview[0]/2+136,4323-4233);
            edge_x4=EaseOutSine(t-4233,view_xview[0]+view_wview[0]+128,view_xview[0]+view_wview[0],4323-4233);
            
            /*
            right wall
            edge_x3 - left side
            edge_x4 - right side
            */
            
            view_xview[0]=EaseOutQuint(t-4233,170,10,4323-4233);
            with(objBlock) {
                if tag=='s4_wall_one' { x=EaseOutQuint(other.t-4233,150,-10,4323-4233); }
                if tag=='s4_wall_two' { x=EaseOutQuint(other.t-4233,780,620,4323-4233); }
            }
        }
        if global.s5_side==1 {      
            if t&lt;4283 {
                edge_x1=EaseOutExpo(t-4233,view_xview[0]+view_wview[0]/2+112,view_xview[0]+view_wview[0]-64,4283-4233);
                edge_x2=EaseOutExpo(t-4233,view_xview[0]+view_wview[0]+64,view_xview[0]+view_wview[0]+128,4283-4130-1);
                
                /*
                right wall
                edge_x1 - left side
                edge_x2 - right side
                */
                
            }
            
            edge_x3=EaseOutSine(t-4233,view_xview[0],view_xview[0]+view_wview[0]/2-136,4323-4233);
            edge_x4=EaseOutSine(t-4233,view_xview[0]-128,view_xview[0],4233-4130-1);
            
            /*
            left wall
            edge_x3 - right side
            edge_x4 - left side
            */
            
            view_xview[0]=EaseOutQuint(t-4233,10,170,4323-4233);
            with(objBlock) {
                if tag=='s4_wall_one' { x=EaseOutQuint(other.t-4233,-10,150,4323-4233); }
                if tag=='s4_wall_two' { x=EaseOutQuint(other.t-4233,620,780,4323-4233); }
            }
        }
        objHappy_Spotlight.x=view_xview[0]-12;
    }
    if t&gt;=4323 and t&lt;4430 {
        if global.s5_side==-1 {
            edge_x1=view_xview[0]+64-EaseOutSine(t-4323,0,32,4430-4323)
            edge_x2=view_xview[0]-128+32-EaseOutSine(t-4323,0,32,4430-4323)
            
            edge_x3=EaseOutSine(t-4323,view_xview[0]+view_wview[0]/2+80+32,view_xview[0]+view_wview[0]-32,4430-4323);
            edge_x4=EaseOutSine(t-4323,view_xview[0]+view_wview[0],view_xview[0]+view_wview[0]+160,4430-4323);
            
            view_xview[0]=EaseOutQuint(t-4323,10,90,4430-4323);
            with(objBlock) {
                if tag=='s4_wall_one' { x=EaseOutQuint(other.t-4323,-10,70,4430-4323); }
                if tag=='s4_wall_two' { x=EaseOutQuint(other.t-4323,620,700,4430-4323); }
            }
        }
        if global.s5_side==1 {
            edge_x1=view_xview[0]+view_wview[0]-64+EaseOutSine(t-4323,0,32,4430-4323)
            edge_x2=view_xview[0]+view_wview[0]+128+EaseOutSine(t-4323,0,32,4430-4323)
            
            edge_x3=EaseOutSine(t-4323,view_xview[0]+view_wview[0]/2-80-32,view_xview[0]+32,4430-4323);
            edge_x4=EaseOutSine(t-4323,view_xview[0],view_xview[0]-160,4430-4323);
            
            view_xview[0]=EaseOutQuint(t-4323,170,90,4430-4323);
            with(objBlock) {
                if tag=='s4_wall_one' { x=EaseOutQuint(other.t-4323,150,70,4430-4323); }
                if tag=='s4_wall_two' { x=EaseOutQuint(other.t-4323,780,700,4430-4323); }
            }
            
            
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            //https://www.davelabowitz.com/wp-content/uploads/Sisyphus-e1557869810488.jpg
            
        }
        objHappy_Spotlight.x=view_xview[0]-12;
    }
    if t&lt;4430 {
        if t mod 3 == 0 {//repeat(2) {
            xx=random_range(edge_x1,edge_x2)
            var a = instance_create(xx,view_yview[0]-6,objHappy_Bullet_01);
            a.sprite_index=sprHappy_MayuCherry;
            a.image_xscale=random_range(0.4,0.7);
            a.image_yscale=a.image_xscale;
            a.direction=270+random_range(-10,10);
            a.speed=random_range(1,6);
            a.gravity=0.15;
            a.tag='s5_wall'
            xx=random_range(edge_x1,edge_x2)
            var a2 = instance_create(xx,view_yview[0]+view_hview[0]+6,objHappy_Bullet_01);
            a2.sprite_index=sprHappy_MayuCherry;
            a2.image_xscale=random_range(0.4,0.7);
            a2.image_yscale=a.image_xscale;
            a2.direction=90+random_range(-10,10);
            a2.speed=random_range(1,6);
            a2.gravity=-0.15;
            a2.tag='s5_wall'
        }
        if t mod 5 == 0 {       //5
            xx=random_range(edge_x1,edge_x2);
            var a = instance_create(-400,-304,objHappy_Bullet_trig); 
            a.cen_x=xx;
            a.cen_y=view_yview[0];
            a.dir=270+random_range(-4,4);
            a.subtag=random_range(32,64);
            a.sprite_index=sprHappy_WBCherry;
            a.image_xscale=0;
            a.image_yscale=0;
            a.tag='s5_spawner1'
            
        }
        if t mod 5 == 3 {
            xx=random_range(edge_x1,edge_x2);
            var a = instance_create(-400,-304,objHappy_Bullet_trig); 
            a.cen_x=xx;
            a.cen_y=view_yview[0]+view_hview[0];
            a.dir=90+random_range(-4,4);
            a.subtag=random_range(32,64);
            a.sprite_index=sprHappy_WBCherry;
            a.image_xscale=0;
            a.image_yscale=0;
            a.tag='s5_spawner2'
        }
        if t&gt;4233 {
            if t mod 3 == 0 {//repeat(2) {
                xx=random_range(edge_x3,edge_x4)
                var a = instance_create(xx,view_yview[0]-6,objHappy_Bullet_01);
                a.sprite_index=sprHappy_MayuCherry;
                a.image_xscale=random_range(0.6,0.7);
                a.image_yscale=a.image_xscale;
                a.direction=270+random_range(-10,10);
                a.speed=random_range(1,6);
                a.gravity=0.15;
                a.tag='s5_wall'
                xx=random_range(edge_x3,edge_x4)
                var a2 = instance_create(xx,view_yview[0]+view_hview[0]+6,objHappy_Bullet_01);
                a2.sprite_index=sprHappy_MayuCherry;
                a2.image_xscale=random_range(0.6,0.7);
                a2.image_yscale=a.image_xscale;
                a2.direction=90+random_range(-10,10);
                a2.speed=random_range(1,6);
                a2.gravity=-0.15;
                a2.tag='s5_wall'
            }
            if t mod 5 == 0 {       //5
                xx=random_range(edge_x3,edge_x4);
                var a = instance_create(-400,-304,objHappy_Bullet_trig); 
                a.cen_x=xx;
                a.cen_y=view_yview[0];
                a.dir=270+random_range(-4,4);
                a.subtag=random_range(32,64);
                a.sprite_index=sprHappy_WBCherry;
                a.image_xscale=0;
                a.image_yscale=0;
                a.tag='s5_spawner1'
                
            }
            if t mod 5 == 3 {
                xx=random_range(edge_x3,edge_x4);
                var a = instance_create(-400,-304,objHappy_Bullet_trig); 
                a.cen_x=xx;
                a.cen_y=view_yview[0]+view_hview[0];
                a.dir=90+random_range(-4,4);
                a.subtag=random_range(32,64);
                a.sprite_index=sprHappy_WBCherry;
                a.image_xscale=0;
                a.image_yscale=0;
                a.tag='s5_spawner2'
            }
        }
        with(objBlock) {
            if tag=='s4_wall_one' { if place_meeting(x,y,objPlayer) { objPlayer.x+=12; } }
            if tag=='s4_wall_two' { if place_meeting(x,y,objPlayer) { objPlayer.x-=12; } }
        }
    }
    with(objHappy_Bullet_trig) {
        if tag=='s5_spawner1' or tag=='s5_spawner2' or tag=='s5_spawner3' or tag=='s5_spawner4' or tag=='s5_spawner5' {
        
        //Line spawning code
        //tag - degree that will be used
        //spawner1 and spawner2 - 90 and 270;
        
        //those below are disabled, cuz unplayable + lowers fps
        
        //spawner3 and spawner4 - 0 and 180;
        //spawner5 - point_direction(x,y,400,304);
        //spawners 3-5 are disabled, cuz they were just a hot garbage
        
        
        
            if t&lt;5 {
                len=EaseOutSine(t,0,subtag,5);
            }
            if t==6 {
                if tag=='s5_spawner1' or tag=='s5_spawner2' {
                    if tag=='s5_spawner1' { distance_to_block=point_distance(x,y,x,312); }
                    if tag=='s5_spawner2' { distance_to_block=point_distance(x,y,x,320+40) }
                    for (var distance=random_range(-16,16); distance&lt;distance_to_block; distance+=16) {
                    //made it so it gets close to drawn lines but doesnt touch them
                    
                        var rotated_distance=distance/dsin(dir);
                        if tag=='s5_spawner1' { flip=1; }
                        else { flip=-1; }
                        var rotated_line = instance_create(x-dcos(dir)*rotated_distance,y+flip*dsin(dir)*rotated_distance,objHappy_Bullet_01);
                        rotated_line.tag='s5_fade_out';
                        rotated_line.image_xscale=random_range(0.5,0.75);
                        rotated_line.image_yscale=rotated_line.image_xscale;
                        rotated_line.image_tag=rotated_line.image_xscale;
                        rotated_line.image_alpha=image_alpha;
                        rotated_line.killer=killer;
                        instance_destroy();
                    }
                }
            }
        }
    }
    with(objHappy_Bullet_01) {
        if tag=='s5_fade_out' {
            if t&lt;50 {
                image_xscale=EaseLinear(t,image_tag,0,50);
                image_yscale=image_xscale;
            }
            if t==50 { instance_destroy(); }
        }
        if tag='s5_quick_fade_out' {
            killer=false;
            image_alpha-=0.1;
            image_xscale-=0.1;
            image_yscale-=0.1;
            if image_xscale&lt;=0 
                instance_destroy();
        }
    }
    
    if t&gt;=4430 and t&lt;=4458 {
        with(objHappy_Bullet_trig) {
            if tag=='s5_sliding_circles' {
                if subtag==0 {
                    len=EaseOutCubic(other.t-4430,128,0,4458-4430);
                    image_xscale=min(len/64,128/150);
                    image_yscale=image_xscale;
                    if len&lt;=0 { instance_destroy(); }
                }
            }
        }
    }
    if t==4458 {
        with(objHappy_Bullet_trig) {
            if tag=='s5_sliding_circles' {
                if subtag==1 {
                    repeat(2) {
                        var a = instance_create(x,y,objHappy_Bullet_01);
                        a.direction=random(360);
                        a.speed=random_range(4,6);
                        a.friction=0.2;
                        a.image_xscale=image_xscale;
                        a.image_yscale=image_yscale;
                        a.tag='s5_sliding_circles_rng'
                        a.image_alpha=image_alpha;
                        a.killer=killer;
                    }
                    instance_destroy();
                }
            }
        }
    }
    if t==4482 {
        with(objHappy_Bullet_trig) {
            if tag=='s5_sliding_circles'  {
                if subtag==2 {
                    if image_alpha&gt;0.5 {
                        repeat(2) {
                            var a = instance_create(x,y,objHappy_Bullet_01);
                            a.direction=point_direction(x,y,cen_x,cen_y)+20;
                            a.speed=9
                            a.friction=0.34;
                            a.image_xscale=image_xscale;
                            a.image_yscale=image_yscale;
                            a.tag='s5_sliding_circles_rng'
                            a.image_alpha=image_alpha;
                            a.killer=killer;
                            var a = instance_create(x,y,objHappy_Bullet_01);
                            a.direction=point_direction(x,y,cen_x,cen_y)-20;
                            a.speed=9
                            a.friction=0.34;
                            a.image_xscale=image_xscale;
                            a.image_yscale=image_yscale;
                            a.tag='s5_sliding_circles_rng'
                            a.image_alpha=image_alpha;
                            a.killer=killer;
                        }
                    }
                    instance_destroy();
                }
            }
        }
    }
    if t==4512-15 {
        with(objHappy_Bullet_trig) {
            if tag=='s5_sliding_circles' {
                if subtag==3 and killer==true {
                    var a = instance_create(x,y,objHappy_Bullet_01);
                    a.direction=point_direction(x,y,400,304)+15;
                    a.speed=10
                    a.friction=8/35
                    a.image_xscale=image_xscale;
                    a.image_yscale=image_yscale;
                    a.tag='s5_sliding_circles_end'
                    a.persist=true;
                    var a2 = instance_create(x,y,objHappy_Bullet_01);
                    a2.direction=point_direction(x,y,400,304)-15;
                    a2.speed=10
                    a2.friction=8/35
                    a2.image_xscale=image_xscale;
                    a2.image_yscale=image_yscale;
                    a2.tag='s5_sliding_circles_end'
                    a2.persist=true;
                    instance_destroy();
                }
                if subtag==3 and killer==false {
                    instance_destroy();
                }
            }
        }
    }
    if t&gt;4458 {
        with(objHappy_Bullet_01) {
            if tag=='s5_sliding_circles_end' {
                image_xscale=point_distance(x,y,400,304)/150;
                image_yscale=image_xscale;
                if t mod 3 == 0 and other.t&lt;4535{
                    var a = instance_create(x,y,objHappy_Bullet_01);
                    a.image_xscale=image_xscale;
                    a.image_yscale=image_yscale;
                    a.direction=random(360);
                    a.speed=0.5;
                    a.tag='s5_sliding_circles_end_spam';
                }
            }
            if tag='s5_sliding_circles_rng' {
                if t==1 { image_tag=image_xscale; }
                if t&gt;1 and t&lt;20 { image_xscale=EaseOutCubic(t,image_tag,1,18); image_yscale=image_xscale; }
                if speed&lt;3 { friction=0; speed=3; }
            }
        }
    }
}


if t==4430 or t==4458 or t==4482 or t==4512-15 {
    var rand_angle=random(360);
    for (var angle=rand_angle;angle&lt;rand_angle+360;angle+=30) {
        var transforming_circle = instance_create(-400,-304,objHappy_Bullet_trig);
        transforming_circle.cen_x=view_xview[0]+(view_wview[0]/2);
        transforming_circle.cen_y=view_yview[0]+(view_hview[0]/2);
        transforming_circle.sprite_index=sprHappy_MayuCherry;
        transforming_circle.image_xscale=0;
        transforming_circle.image_yscale=0;
        
        transforming_circle.killer=false;
        transforming_circle.image_alpha=0.4;
        
        transforming_circle.tag='s5_transforming_circle';
        transforming_circle.subtag=angle;
        transforming_circle.findir=rand_angle;
        transforming_circle.finlen=tc_distance;
    }
    var rand_angle2=random(360);
    for (var angle=rand_angle2;angle&lt;rand_angle2+360;angle+=60) {
        var transforming_circle = instance_create(-400,-304,objHappy_Bullet_trig);
        transforming_circle.cen_x=view_xview[0]+(view_wview[0]/2);
        transforming_circle.cen_y=view_yview[0]+(view_hview[0]/2);
        transforming_circle.sprite_index=sprHappy_MayuCherry;
        transforming_circle.image_xscale=0;
        transforming_circle.image_yscale=0;
        
        transforming_circle.image_alpha=0.4;
        transforming_circle.killer=false;
        
        transforming_circle.tag='s5_transforming_circle';
        transforming_circle.subtag=angle;
        transforming_circle.findir=rand_angle2;
        transforming_circle.finlen=tc_distance+32;
    }
    
    //this was moved to the background cuz by itself its kinda boring
    tc_distance+=64;
}

if t&gt;4430-20 and t&lt;4535 {
    with(objHappy_Bullet_trig) {
        if tag = 's5_transforming_circle' {
            if t==20 {
                //killer=true;
            }
            if t&lt;40 {
                len=EaseOutCubic(t,max(0,finlen-64),finlen,40);
                dir_inc=EaseOutSine(t,6,0.5,40);
                dir=EaseOutCubic(t,findir+dir_inc*t,subtag+dir_inc*t,40);
                image_xscale=EaseOutSine(t,0,1,40);
                image_yscale=EaseOutSine(t,0,1,40);
            }
        }
    }
}

if t==4535 {
    with(objHappy_Bullet_trig) {
        if tag = 's5_transforming_circle' {
            for (angle_shift=-30;angle_shift&lt;30;angle_shift+=15) {
                fork = instance_create(x,y,objHappy_Bullet_01);
                fork.sprite_index=sprite_index;
                fork.direction=dir+angle_shift;
                fork.speed=-random_range(1,2.5);
                fork.accel=random_range(0.1,0.3);
                if angle_shift==-15 or angle_shift==15 { fork.tag='s5_warp'; /*fork.killer=false;*/ }
                else { fork.tag='s5_fork'; fork.subtag=15}//random_range(10,40); }
                instance_destroy();
            }
        }
    }
    with(objHappy_Bullet_01) {
        if tag=='s5_sliding_circles_end' or tag=='s5_sliding_circles_end_spam' or tag='s5_sliding_circles_rng' {
            direction=point_direction(objPlayer.x,objPlayer.y,x,y);
            friction=0;
            speed=random_range(1,4);
            accel=0.1;
        }
    }
}

if t==4572 {
    with(objHappy_Bullet_01) {
        if tag=='s5_warp' {
            accel=0;
            speed+=4;
            friction=speed/(4725-4572);
        }
    }
}
if t&gt;4572 and t&lt;4720 {
    if t==4573 {
        rng = rng_controller_create(8);
    }
    if t&lt;4668 {
    
        //global.s5_side=choose(-1,1)        //1 - left; -1 - right 
        if (global.s5_side==-1) {
            _x1=view_xview[0]+view_wview[0]+32;
            _dir1=180+random_range(-5,5);
            _x2=view_xview[0]-32
            _dir2=random_range(-5,5);
        }
        if (global.s5_side==1) {
            _x2=view_xview[0]+view_wview[0]+64;
            _dir2=180+random_range(-5,5);
            _x1=view_xview[0]-32
            _dir1=random_range(-5,5);
        }
        
        if t mod 2 == 0 {
            var horizontal_rain1 = instance_create(_x1,random_range_controlled(view_yview[0],view_yview[0]+304,rng),objHappy_Bullet_01);
            horizontal_rain1.direction=_dir1
            horizontal_rain1.speed=random_range(2,10);
            horizontal_rain1.image_xscale=0.65;
            horizontal_rain1.image_yscale=0.65;
            horizontal_rain1.persist=true;
            horizontal_rain1.tag='s5_horizontal_rain';
        }
        if t mod 2 == 0 {
            
            var horizontal_rain1 = instance_create(_x1,view_yview[0]+random(view_hview[0]),objHappy_Bullet_01);
            horizontal_rain1.direction=_dir1
            horizontal_rain1.speed=random_range(2,13);
            horizontal_rain1.image_xscale=0.65;
            horizontal_rain1.image_yscale=0.65;
            horizontal_rain1.persist=true;
            horizontal_rain1.killer=false;
            horizontal_rain1.image_alpha=0.1;
            horizontal_rain1.tag='s5_horizontal_rain';
            repeat(2) {
                /*
                var horizontal_rain1 = instance_create(_x1,view_yview[0]+random(point_distance(view_xview[0],view_yview[0],view_xview[0],312+412)),objHappy_Bullet_01);
                horizontal_rain1.direction=_dir1
                horizontal_rain1.speed=random_range(2,13);
                horizontal_rain1.image_xscale=0.65;
                horizontal_rain1.image_yscale=0.65;
                horizontal_rain1.persist=true;
                horizontal_rain1.tag='s5_horizontal_rain';
                */
                
                var horizontal_rain2 = instance_create(_x2,view_yview[0]+16+view_hview[0]-random(point_distance(view_xview[0],view_yview[0]+view_hview[0],view_xview[0],360)),objHappy_Bullet_01);
                horizontal_rain2.direction=_dir2
                horizontal_rain2.speed=random_range(2,13)
                horizontal_rain2.image_xscale=0.65;
                horizontal_rain2.image_yscale=0.65;
                horizontal_rain2.persist=true;
                horizontal_rain2.tag='s5_horizontal_rain';
            }
        }
    }
    if t==4668 {
        with(objHappy_Bullet_01) {
            if tag=='s5_horizontal_rain' {
                persist=false;
                friction=(speed-random(3))/52;
            }
        }
    }
}

if t==4720 {
    with(objHappy_Bullet_01) {
        if tag=='s5_warp' {
            friction=0;
        }
        if tag=='s5_horizontal_rain' {
            a = instance_create(x,y,objHappy_Bullet_01);
            a.image_xscale=image_xscale;
            a.image_yscale=image_yscale;
            a.direction=random(360);
            a.accel=random_range(0.05,0.005);
            a.image_alpha=image_alpha;
            a.killer=killer;
            a.tag='s5_accel'
            instance_destroy();
        }
    }
}

if t&gt;4535 and t&lt;4720 {
    with(objHappy_Bullet_01) {
        if tag=='s5_warp' {
            if x&lt;view_xview[0] { x=view_xview[0]+view_wview[0]; image_alpha=0.2; killer=false; }
            if x&gt;view_xview[0]+view_wview[0] { x=view_xview[0]; image_alpha=0.2; killer=false; }
            if y&lt;view_yview[0] { y=view_yview[0]+view_hview[0]; image_alpha=0.2; killer=false; }
            if y&gt;view_yview[0]+view_hview[0] { y=view_yview[0]; image_alpha=0.2; killer=false; }
        }
    }
}
if t&gt;4720 and t&lt;4820 {
    with(objHappy_Bullet_01) {
        if tag=='s5_accel' {
            if speed&gt;2.25 {
                accel=0;
                speed=2.25;
            }
        }
    }
}
if t==4820 {
    with(objHappy_Darkness) {
        if tag!='practice blocker'
            instance_destroy();
    }
    s5_to_s6 = instance_create(0,0,objHappy_Darkness);
    s5_to_s6.image_alpha=0;
    s5_to_s6.image_blend=c_black;
    s5_to_s6.tag='s5_to_s6';
    shader_transition = instance_create(0,0,objPShaderEffect)
    shader_transition.shader = shEasyShaderExample;
    shader_transition.intensity = 0;
    
    for (var distance=6;distance&lt;50;distance+=4) {
        spawn_circle(400,304,distance*45/40,6,distance,objHappy_Bullet_01,'s5_penta3');
        spawn_circle(400,304,-15-distance*45/40,6,distance,objHappy_Bullet_01,'s5_penta3');
    }
    
    spawn_circle(400,304,0,100,365,objHappy_Bullet_01,'s5_penta2');
    with(objHappy_Bullet_01) {
        if tag=='s5_penta' {
            image_xscale=0.75+random_range(-0.05,0.05);
            image_yscale=image_xscale;
        }
    }
    spawn_shape(400,304,0,4,60,300,objHappy_Bullet_01,'s5_penta4');
    spawn_shape(400,304,45,4,60,300,objHappy_Bullet_01,'s5_penta4');
    with(objHappy_Bullet_01) {
        if tag=='s5_penta' {
            image_xscale=0.65+random_range(-0.05,0.05);
            image_yscale=image_xscale;
        }
    }
    spawn_shape(400,304,0,4,60,200,objHappy_Bullet_01,'s5_penta1');
    spawn_shape(400,304,45,4,60,200,objHappy_Bullet_01,'s5_penta1');
    
    spawn_circle(400,304,0,100,210,objHappy_Bullet_01,'s5_penta2');
    
    spawn_circle(400,304,0,50,60,objHappy_Bullet_01,'s5_penta3');
    
    spawn_shape(400,304,90,3,50,135,objHappy_Bullet_01,'s5_penta4');
    spawn_shape(400,304,150,3,50,135,objHappy_Bullet_01,'s5_penta4');
    with(objHappy_Bullet_01) {
        if tag=='s5_penta1' or tag=='s5_penta2' or tag=='s5_penta3' or tag=='s5_penta4' {
            if subtag==0 { subtag=1; }
            image_alpha=0;
            if image_xscale==1 {
                image_xscale=0.5+random_range(-0.05,0.05);
                image_yscale=image_xscale;
            }
            killer=false;
        }
    }
}
if t==4821 and ((!global.practiceOn)or(global.practiceOn and pb_max&gt;5)) {
    with(objHappy_Bullet_01) {
        if tag=='s5_penta1' or tag=='s5_penta2' or tag=='s5_penta3' or tag=='s5_penta4' {
            var penta = instance_create(x,y,objHappy_Bullet_trig_deco);
            penta.cen_x=400;
            penta.cen_y=304;
            penta.dir=direction;
            penta.dir_inc=subtag;
            penta.finlen=point_distance(400,304,x,y);
            if tag=='s5_penta1' { penta.subtag=-4; }
            if tag=='s5_penta2' { penta.subtag=2;}
            if tag=='s5_penta3' { penta.subtag=1; }
            if tag=='s5_penta4' { penta.subtag=-2; }
            penta.sprite_index=sprHappy_WBCherry;
            penta.image_xscale=0.5+random_range(-0.05,0.05);
            penta.image_yscale=penta.image_xscale;
            penta.image_alpha=0;
            penta.depth=-10000;
            penta.killer=false;
            penta.tag='s5_penta';
            instance_destroy();
        }
    }
}
if t==4870 {
    with(objPlayer) { frozen=true; }
}
if t&gt;4819 and t&lt;4933 {
    if t&gt;4870 { if instance_exists(objPShaderEffect) { objPShaderEffect.intensity+=(0.015)/63; } }
    with(objHappy_Darkness) {
        if tag=='s5_to_s6' {
            if image_alpha&lt;1 { image_alpha+=0.05; }
        }
    }
    with(objHappy_Bullet_trig_deco) {
        if tag=='s5_penta' {
            len=EaseOutQuint(t,finlen*8,finlen*1.25,113);
            dir_inc=EaseOutQuint(t,subtag,subtag/8,113);
            if t&lt;50 { image_alpha+=0.015; }
            if t&gt;50 {
                if t mod 2 == 0 { finlen+=random_range(-1,1); }
                image_blend=merge_color(c_white,c_maroon,(t-50)/(63*5));
                image_alpha-=0.0125; if image_alpha&lt;=0 { instance_destroy(); }
            }
        }
    }
    with(objAvoidanceBullet) { killer=false; }
}

if t==4940 {
    instance_destroy(objPShaderEffect);
}
if t==4933 {
    with(objHappy_Bullet_trig_deco) {
        if tag=='s5_penta' {
            var a = instance_create(x,y,objHappy_Bullet_01);
            a.direction=dir;
            a.speed=random_range(1,3);
            a.image_xscale=image_xscale;
            a.image_yscale=image_yscale;
            a.depth=depth;
            a.persist=true;
            a.killer=false;
            a.tag='s6_penta'
            instance_destroy();
        }
    }
}
if t=5043 {
    with(objHappy_Bullet_01) {
        if tag=='s6_penta' { persist=false; }
    }
}
//                  2nd part: Decoration

if t==4133 {
    repeat(10) {
        a = instance_create(view_xview[0]+random(view_wview[0]),view_yview[0]+random(view_hview[0]),objHappy_ErrorRectangle);
        a.depth=-100;
        a.width=random_range(8,192);
        a.height=200-a.width;
        a.alpha=0;
    }
}
if t&gt;4133 and t&lt;4940 {
    if t mod 10 == 2 {
        with(objHappy_ErrorRectangle) {
            x=view_xview[0]+random(view_wview[0]);
            y=view_yview[0]+random(view_hview[0]);
            width=random_range(8,192);
            height=200-width;
        }
    }
    if t&lt;4153 {
        with(objHappy_ErrorRectangle) {
            alpha+=0.004
        }
    }
}
if t&gt;4130 and t&lt;4940 and t mod 4 == 0 {
    y1=random_range(2,6);
    y2=random_range(2,6);
    y3=random_range(2,6);
    y4=random_range(2,6);
}
















}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Segment 5 backup 1, current useless
/*
    if t&lt;4233 {
        if s5_side==-1 {
            edge_x1=EaseOutSine(t-4130,view_xview[0]+64,view_xview[0]+view_wview[0]/2+32,4233-4130-1);
            edge_x2=EaseOutSine(t-4130,view_xview[0]-128,view_xview[0],4233-4130-1);//view_xview[0]
        }
        if s5_side==1 {
            edge_x1=EaseOutSine(t-4130,view_xview[0]+view_wview[0]-64,view_xview[0]+view_wview[0]/2,4233-4130-1);
            edge_x2=EaseOutSine(t-4130,view_xview[0]+view_wview[0]+128,view_xview[0]+view_wview[0],4233-4130-1);//view_xview[0]+view_wview[0]
        }
    }
    if t&gt;=4233 and t&lt;4313 {
        if s5_side==-1 {
            edge_x1=EaseOutExpo(t-4233,view_xview[0]+view_wview[0]/2+32,view_xview[0]+64,4313-4233);
            edge_x2=EaseOutExpo(t-4233,view_xview[0],view_xview[0]-128+32,4313-4233);//view_xview[0]
            
            edge_x3=EaseOutSine(t-4233,view_xview[0]+view_wview[0],view_xview[0]+view_wview[0]/2,4313-4233);
            edge_x4=EaseOutSine(t-4233,view_xview[0]+view_wview[0]+128,view_xview[0]+view_wview[0],4313-4233);//view_xview[0]+view_wview[0]
        }
        if s5_side==1 {
            edge_x1=EaseOutExpo(t-4233,view_xview[0]+view_wview[0]/2,view_xview[0]+view_wview[0]-64,4313-4233);
            edge_x2=EaseOutExpo(t-4233,view_xview[0]+view_wview[0],view_xview[0]+view_wview[0]+128,4233-4130-1);
            
            edge_x3=EaseOutSine(t-4233,view_xview[0],view_xview[0]+view_wview[0]/2,4313-4233);
            edge_x4=EaseOutSine(t-4233,view_xview[0]-128,view_xview[0],4233-4130-1);
        }
    }
    if t&gt;=4313 and t&lt;4430 {
        if s5_side==-1 {
            edge_x1=view_xview[0]+64-EaseOutCubic(t-4313,0,32,4430-4313)
            edge_x2=view_xview[0]-128+32-EaseOutCubic(t-4313,0,32,4430-4313)
            
            edge_x3=EaseOutCubic(t-4313,view_xview[0]+view_wview[0]/2,view_xview[0]+view_wview[0]-32,4430-4313);
            edge_x4=EaseOutCubic(t-4313,view_xview[0]+view_wview[0],view_xview[0]+view_wview[0]+160,4430-4313);
        }
        if s5_side==1 {
            edge_x1=view_xview[0]+view_wview[0]-64+EaseOutCubic(t-4313,0,32,4430-4313)
            edge_x2=view_xview[0]+view_wview[0]+128+EaseOutCubic(t-4313,0,32,4430-4313)
            
            edge_x3=EaseOutCubic(t-4313,view_xview[0]+view_wview[0]/2,view_xview[0]+32,4430-4313);
            edge_x4=EaseOutCubic(t-4313,view_xview[0],view_xview[0]-160,4430-4313);
        }
    }
    if t&lt;4430 {
        if t mod 3 == 0 {//repeat(2) {
            xx=random_range(edge_x1,edge_x2)
            var a = instance_create(xx,view_yview[0]-6,objHappy_Bullet_01);
            a.sprite_index=sprHappy_MayuCherry;
            a.image_xscale=random_range(0.4,0.7);
            a.image_yscale=a.image_xscale;
            a.direction=270+random_range(-10,10);
            a.speed=random_range(1,6);
            a.gravity=0.15;
            a.tag='s5_wall'
            xx=random_range(edge_x1,edge_x2)
            var a2 = instance_create(xx,view_yview[0]+view_hview[0]+6,objHappy_Bullet_01);
            a2.sprite_index=sprHappy_MayuCherry;
            a2.image_xscale=random_range(0.4,0.7);
            a2.image_yscale=a.image_xscale;
            a2.direction=90+random_range(-10,10);
            a2.speed=random_range(1,6);
            a2.gravity=-0.15;
            a2.tag='s5_wall'
        }
        if t mod 5 == 0 {
            xx=random_range(edge_x1,edge_x2);
            var a = instance_create(-400,-304,objHappy_Bullet_trig); 
            a.cen_x=xx;
            a.cen_y=view_yview[0];
            a.dir=270+random_range(-7,7);
            a.subtag=random_range(32,64);
            a.sprite_index=sprHappy_WBCherry;
            a.image_xscale=0;
            a.image_yscale=0;
            a.tag='s5_spawner1'
            
        }
        if t mod 5 == 3 {
            xx=random_range(edge_x1,edge_x2);
            var a = instance_create(-400,-304,objHappy_Bullet_trig); 
            a.cen_x=xx;
            a.cen_y=view_yview[0]+view_hview[0];
            a.dir=90+random_range(-7,7);
            a.subtag=random_range(32,64);
            a.sprite_index=sprHappy_WBCherry;
            a.image_xscale=0;
            a.image_yscale=0;
            a.tag='s5_spawner2'
        }
        if t&gt;4233 {
            if t mod 3 == 0 {//repeat(2) {
                xx=random_range(edge_x3,edge_x4)
                var a = instance_create(xx,view_yview[0]-6,objHappy_Bullet_01);
                a.sprite_index=sprHappy_MayuCherry;
                a.image_xscale=random_range(0.6,0.7);
                a.image_yscale=a.image_xscale;
                a.direction=270+random_range(-10,10);
                a.speed=random_range(1,6);
                a.gravity=0.15;
                a.tag='s5_wall'
                xx=random_range(edge_x3,edge_x4)
                var a2 = instance_create(xx,view_yview[0]+view_hview[0]+6,objHappy_Bullet_01);
                a2.sprite_index=sprHappy_MayuCherry;
                a2.image_xscale=random_range(0.6,0.7);
                a2.image_yscale=a.image_xscale;
                a2.direction=90+random_range(-10,10);
                a2.speed=random_range(1,6);
                a2.gravity=-0.15;
                a2.tag='s5_wall'
            }
            if t mod 5 == 0 {
                xx=random_range(edge_x3,edge_x4);
                var a = instance_create(-400,-304,objHappy_Bullet_trig); 
                a.cen_x=xx;
                a.cen_y=view_yview[0];
                a.dir=270+random_range(-7,7);
                a.subtag=random_range(32,64);
                a.sprite_index=sprHappy_WBCherry;
                a.image_xscale=0;
                a.image_yscale=0;
                a.tag='s5_spawner1'
                
            }
            if t mod 5 == 3 {
                xx=random_range(edge_x3,edge_x4);
                var a = instance_create(-400,-304,objHappy_Bullet_trig); 
                a.cen_x=xx;
                a.cen_y=view_yview[0]+view_hview[0];
                a.dir=90+random_range(-7,7);
                a.subtag=random_range(32,64);
                a.sprite_index=sprHappy_WBCherry;
                a.image_xscale=0;
                a.image_yscale=0;
                a.tag='s5_spawner2'
            }
        }
    }
    with(objHappy_Bullet_trig) {
        if tag=='s5_spawner1' or tag=='s5_spawner2' or tag=='s5_spawner3' or tag=='s5_spawner4' or tag=='s5_spawner5' {
        
        
        //spawner1 and spawner2 - 90 and 270;
        //spawner3 and spawner4 - 0 and 180;
        //spawner5 - point_direction(x,y,400,304);
        
        
        
            if t&lt;5 {
                len=EaseOutSine(t,0,subtag,5);
            }
            if t==6 {
                if tag=='s5_spawner1' or tag=='s5_spawner2' {
                    if tag=='s5_spawner1' { distance_to_block=point_distance(x,y,x,312); }
                    if tag=='s5_spawner2' { distance_to_block=point_distance(x,y,x,320+40) }
                    for (var distance=random_range(-16,16); distance&lt;distance_to_block; distance+=16) {
                    //made it so it gets close to drawn lines but doesnt touch them
                    
                        var rotated_distance=distance/dsin(dir);
                        if tag=='s5_spawner1' { flip=1; }
                        else { flip=-1; }
                        var rotated_line = instance_create(x-dcos(dir)*rotated_distance,y+flip*dsin(dir)*rotated_distance,objHappy_Bullet_01);
                        rotated_line.tag='s5_fade_out';
                        rotated_line.image_xscale=random_range(0.5,0.75);
                        rotated_line.image_yscale=rotated_line.image_xscale;
                        rotated_line.image_tag=rotated_line.image_xscale;
                        rotated_line.image_alpha=image_alpha;
                        rotated_line.killer=killer;
                        instance_destroy();
                    }
                }
            }
        }
    }
    with(objHappy_Bullet_01) {
        if tag=='s5_fade_out' {
            if t&lt;50 {
                image_xscale=EaseLinear(t,image_tag,0,50);
                image_yscale=image_xscale;
            }
            if t==50 { instance_destroy(); }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Segment №6: 1:41 - 1:58 (frames: 4940 - 5835)

if instance_exists(objPlayer) {

if t==4933 {
    platform_speed_middle = 1.4//irandom_range(1.5,2);
    for (var y_delay=0; y_delay&lt;624;y_delay+=104) {
    
        if (y_delay div 104) mod 2 == 0 { var line_cherry_case = 0 }
        if (y_delay div 104) mod 2 == 1 { var line_cherry_case = irandom_range(5,10) }
            
        obj = instance_create(400 - 16, y_delay, objHappy_Platform);
        obj.speed = platform_speed_middle
        obj.direction = 90;
        obj.free_variable[0]=line_cherry_case;
        obj.replace_cherry=false;
        
        with(objPlayer) { frozen=false; instance_destroy(); }
        var player = instance_create(400,304+160,objPlayer);
        player.frozen=true;
                
    }
    
    for (var x_delay=96; x_delay&lt;400; x_delay+=96) {
        platform_speed = irandom_range(1.5,2) + (x_delay div 64)/4;
        for (x_mirror=-1; x_mirror&lt;=1; x_mirror+=2) {
            y_delay2=random_range(-96,96)
            platform_rng_savespot=irandom(624/104)
            for (var y_delay=0; y_delay&lt;624;y_delay+=104) {
                platform_rng_savespot_grid=choose(2,3)
                if (y_delay div 104) mod platform_rng_savespot_grid == 0 { var line_cherry_case = 0 }
                if (y_delay div 104) mod platform_rng_savespot_grid != 0 { var line_cherry_case = irandom_range(5,10) }
                if (y_delay div 104) == platform_rng_savespot { var line_cherry_case = 0 }
                obj = instance_create(400 + x_delay * x_mirror - 16,y_delay + y_delay2 ,objHappy_Platform);
                obj.speed = platform_speed
                obj.direction = 90;
                obj.free_variable[0]=line_cherry_case;
            }
        }
    }

    var border1 = instance_create(-300,-300,objHappy_Bullet_trig_deco);
    border1.cen_x=0;
    border1.cen_y=0;
    border1.sprite_index=sprHappy_Border;
    //border1.image_blend=c_black;
    border1.tag='S6_border';
    border1.depth=-1000001;
    border1.t=180+60//random(360);
    var border2 = instance_create(-300,-300,objHappy_Bullet_trig_deco);
    border2.cen_x=800;
    border2.cen_y=608;
    border2.sprite_index=sprHappy_Border;
    border2.image_angle=180;
    //border2.image_blend=c_black;
    border2.tag='S6_border';
    border2.depth=-1000001;
    border2.t=60//random(360);
    
//              side borders

    /*for (var y_border = 0; y_border&lt;=608; y_border+=54) {
        var cherry_border1 = instance_create(-300,-300,objHappy_Bullet_trig);
        cherry_border1.sprite_index=sprHappy_BloodSpike;
        cherry_border1.image_xscale=random_range(1.5,3);
        cherry_border1.image_yscale= cherry_border1.image_xscale;
        cherry_border1.followDirection=false;
        cherry_border1.image_angle=random_range(-15,15);
        //cherry_border1.image_blend=merge_color(c_white,c_red,0.5);
        cherry_border1.cen_x=112+irandom(2.4*cherry_border1.image_xscale);
        cherry_border1.cen_y=y_border;
        cherry_border1.t=180+60;
        cherry_border1.tag='S6_cherry_border';
        cherry_border1.Type="Penalty";
        var cherry_border2 = instance_create(-300,-300,objHappy_Bullet_trig);
        cherry_border2.sprite_index=sprHappy_BloodSpike;
        cherry_border2.image_xscale=random_range(1.5,3);
        cherry_border2.image_yscale= cherry_border2.image_xscale;
        cherry_border2.followDirection=false;
        cherry_border2.image_angle=180+random_range(-15,15);
        //cherry_border2.image_blend=merge_color(c_white,c_red,0.5);
        cherry_border2.cen_x=800-112-irandom(2.4*cherry_border2.image_xscale);
        cherry_border2.cen_y=y_border;
        cherry_border2.t=60;
        cherry_border2.tag='S6_cherry_border';
        cherry_border2.Type="Penalty";
    }*/
    
//              spikes coming from the borders
    instance_destroy(objHappy_Spotlight);
    instance_destroy(objHappy_ErrorRectangle);
    with(objAvoidanceBullet) {
        if tag!='s6_penta' { instance_destroy(); }
    }
    var spotlight = instance_create(90,(90/1.3),objHappy_Spotlight);
    spotlight.image_xscale=(800-(90*2))/800;
    spotlight.image_yscale=(608-((90/1.3)*2))/608;
//              spotlight
    //with(objBlock) {
    //    if tag=='s4_platform' { instance_destroy(); }
    //}
    instance_destroy(objBlock);
    with(objHappy_Darkness) {
        depth=-1002;
        image_alpha=1.1;
    }
    var darkness_transition = instance_create(0,0,objHappy_Darkness);
    darkness_transition.image_blend=c_black;
    darkness_transition.depth=-1002;
//              "darkness" object for transition, will be removed most likely
    draw_line_flag=false;
}
if t==4950 {
    with(objPlayer) { frozen=false; }
}
if t&gt;4933 and t&lt;5043 {
    with(objHappy_Darkness) {
        image_alpha-=1/50;
        if image_alpha&lt;=0 { instance_destroy(); }
    }
}
if t&gt;4940 and t&lt;5040 {
    view_xview[0]=EaseOutQuad(t-4940,256,96,100);
    view_yview[0]=EaseOutQuad(t-4940,(256/1.3)-96,(96/1.3),100);
    view_hview[0]=EaseOutQuad(t-4940,608-((256/1.3)*2)+32,608-((96/1.3)*2),100);
    view_wview[0]=EaseOutQuad(t-4940,800-(256*2),800-(96*2),100);
//              zoom out
}

if t&gt;4940 and t&lt;5730 {
    /*with(objPlayer) {
        if x&lt;view_xview[0] or x&gt;view_xview+view_wview[0] or y&lt;view_yview[0]
        or y&gt;view_yview[0]+view_hview[0] {
            x=view_xview[0]+view_wview[0]/2;
            y=view_yview[0]+view_hview[0]/2;
            vspeed=0;
        }
    }*/
}

if t &gt;= 4940 and t &lt;= 5810 {
    if t&lt;5620 and t mod 80 == 20 {
        var circle_amount=choose(1,2,3);
        var distance = random_range(200,300);
        var distance_degrease = 100//random_range(64,128);
        var xx = irandom(800);
        var yy = 608+distance+96;
        var xx2 = irandom(800);
        var fall_speed=irandom_range(5,9);
        for (var circle_number = 0; circle_number &lt; circle_amount; circle_number++) {
            var random_angle = random(360);
            var angle_shift = 30 + 30*circle_number;
            var trig_curve =0.5*choose(-1,1);
            for (var angle = random_angle; angle &lt; random_angle+360; angle += angle_shift) {
                var circle = instance_create(-1000,-1000,objHappy_Bullet_trig_deco);
                circle.cen_x = xx;
                circle.cen_y = yy;
                circle.dir = angle;
                circle.len = distance - (distance_degrease * circle_number);
                circle.dir_inc = trig_curve;
                circle.sprite_index = sprHappy_WBCherry;
                circle.image_xscale = random_range(2.5,4);
                circle.image_yscale = circle.image_xscale;
                circle.image_alpha=0.15;
                circle.Type = "Hold";
                circle.tag = 'S6_falling_circle';
                circle.persist=true;
                circle.subtag = -fall_speed;      //how fast will it fall
            }
            if t&lt;5340 and circle_number==0 {
                var trig_curve2 =0.5*choose(-1,1);
                for (var angle = random_angle; angle &lt; random_angle+360; angle += 60) {
                    var circle = instance_create(-1000,-1000,objHappy_Bullet_trig);
                    circle.cen_x = xx2;
                    circle.cen_y = yy;
                    circle.dir = angle;
                    circle.len = 333//distance - (distance_degrease * circle_number);
                    circle.dir_inc = trig_curve2;
                    circle.sprite_index = sprHappy_WBCherry;
                    circle.image_xscale = 2.75//random_range(2.5,4);
                    circle.image_yscale = circle.image_xscale;
                    //circle.Type = "Hold";
                    circle.tag = 'S6_falling_circle';
                    circle.persist=true;
                    circle.subtag = -3.5//fall_speed;      //how fast will it fall
                }
            }
        }
    }
    
//                  code above spawns circles with different length and amount of
//                  objects in it, which always goes up
//                  'S6_falling_circle' is a filler, because i couldnt make this
//                  entire part go down (thanks to weird collision with platforms :/ )
    
    if t&gt;5340 and t&lt;5620 {
        if t mod 6 = 0 {
            var reversed_rain = instance_create(view_xview[0]+random(view_wview[0]),608+10,objHappy_Bullet_01);
            reversed_rain.direction=90+random_range(-15,15)
            reversed_rain.speed=random_range(3,7);
            reversed_rain.sprite_index=sprHappy_MayuCherry;
            reversed_rain.image_xscale=random_range(1,2);
            reversed_rain.image_yscale=reversed_rain.image_xscale;
            reversed_rain.aimlock=false;
            reversed_rain.tag='S6_reversed_rain';
            reversed_rain.persist=true;
        }
        with(objHappy_Bullet_trig) {
            if tag=='S6_falling_circle' {
                killer=false;
                if image_alpha&gt;0.15 { image_alpha-=0.05; }
                //subtag-=0.05;
            }
        }
    }
    
//                  reversed rain, same situation
    
    if t==5620 { 
        with(objPlatform) { replace=false; } 
        shader_transition = instance_create(0,0,objPShaderEffect);
        shader_transition.shader=shEasyShaderExample;
        shader_transition.intensity=0;
        red_bg = instance_create(0,0,objHappy_Darkness);
        red_bg.image_blend=c_maroon;
        red_bg.image_alpha=0;
        red_bg.depth=-2;
        red_bg.tag='s6_red_bg';
    }
    
//                  turns off platform ability to being replaced
    
    if t&gt;5620 and t&lt;5730 { 
        if t mod 6 == 1 {
            hand = instance_create(400+random_range(32,250)*choose(-1,1),-48,objHappy_Hand);
            hand.direction=270;
            hand.image_angle=270;
            hand.image_xscale=random_range(1,2.25);
            hand.image_yscale=hand.image_xscale;
            hand.image_blend=c_maroon;
            hand.image_alpha=0;
            hand.speed=random_range(6,7);
            hand.friction=0.1;
            hand.tag='s6_hand1';
        }
        if t mod 6 == 4 {
            hand2 = instance_create(400+random_range(32,250)*choose(-1,1),608+48,objHappy_Hand);
            hand2.direction=90;
            hand2.image_angle=90;
            hand2.image_xscale=random_range(1,2.25);
            hand2.image_yscale=hand2.image_xscale;
            hand2.image_blend=c_maroon;
            hand2.image_alpha=0;
            hand2.speed=random_range(6,7);
            hand2.friction=0.1;
            hand2.tag='s6_hand2';
        }
        
        with(objHappy_Hand) {
            if tag=='s6_hand1' or tag=='s6_hand2' {
                rr=random_range(-1,1);
                direction=point_direction(x+rr,y+rr,x+rr,304);
                image_angle=direction;
                x+=rr;
                xstart+=rr;
                y+=rr;
                ystart+=rr;
                if image_alpha&lt;1 { image_alpha+=0.025; }
            }   
        }
        with(objHappy_Platform) {
            speed+=0.05;
        }
        with(objHappy_Bullet_01) {
            if tag=='S6_follow_platform' {
                speed+=0.05;
            }
        }
        with(objAvoidanceBullet) {
            killer=false;
        }
        with(objHappy_Darkness) {
            if tag=='s6_red_bg' {
                image_alpha+=0.3/110;
            }
        }
        with(objPShaderEffect) {
            intensity+=0.05/110;
        }
    }
    
//                  platform speed up, bullets stop killing you
    
    if t==5730 {
        instance_destroy(objHappy_Hand);
        with(objHappy_Darkness) {
            if tag=='s6_red_bg' { instance_destroy(); }
        }
        spawn_shape(400,304,30,3,24,600-16,objHappy_Bullet_01,'S6_penta');
        spawn_shape(400,304,210,3,24,600-16,objHappy_Bullet_01,'S6_penta');
        with(objHappy_Bullet_01) {
            if tag=='S6_penta' {
                killer=false;
                image_alpha=0;
                persist=true;
                destroyOutside=false;
                depth=-100;
            }
        }
        //instance_destroy(objPShaderEffect);
        
        instance_destroy(objHappy_Glitch);
    }
    
//                   spawns pentagram
    
    if t==5731 {
        with(objHappy_Bullet_01) {
            if tag=='S6_penta' {
                var penta = instance_create(x,y,objHappy_Bullet_trig_deco);
                penta.cen_x=400;
                penta.cen_y=312;
                penta.dir=direction;
                penta.dir_inc=3;
                penta.len=point_distance(400,304,x,y);
                penta.finlen=penta.len;
                penta.sprite_index=sprite_index;
                penta.depth=depth;
                penta.tag='S6_penta'
                instance_destroy();
            }
        }
        darkness_fade_out = instance_create(0,0,objHappy_Darkness);
        darkness_fade_out.image_blend=c_black;
        //darkness_fade_out.image_alpha=0.75;
        darkness_fade_out.tag='s6_darkness_fade_out';
        with(objPlayer) { frozen=true; }//visible=false; }
    }
    if t&gt;5731 and t&lt;5810 {
        with(objHappy_Bullet_trig_deco) {
            if tag=='S6_penta' {
                len=EaseOutQuint(t,finlen,finlen/4,79);
                dir_inc=EaseOutSine(t,2,0.2,79);
            }
        }
        objPlayer.x=EaseOutSine(t-5731,objPlayer.x,400,79);
        objPlayer.y=EaseOutSine(t-5731,objPlayer.y,304,79);
        view_xview[0]=EaseOutQuad(t-5731,96,192,100);
        view_yview[0]=EaseOutQuad(t-5731,(96/1.3),(192/1.3),100);
        view_hview[0]=EaseOutQuad(t-5731,608-((96/1.3)*2),608-((192/1.3)*2),100);
        view_wview[0]=EaseOutQuad(t-5731,800-(96*2),800-(192*2),100);
        with(objHappy_Darkness) {
            if tag=='s6_darkness_fade_out' {
                image_alpha-=1/75;
                if image_alpha&lt;=0 { instance_destroy(); }
            }
        }
        if t&lt;5766 { objPShaderEffect.intensity=EaseInSine(t-5731,0.05,0,35); }
    }
//                  current transition
    
    if t&lt;5730 and t mod 3 = 0 {
        var bottom_cherry = instance_create(irandom_range(120,800-120),608-64,objHappy_Bullet_01);
        //bottom_cherry.sprite_index=sprHappy_MayuCherry;
        bottom_cherry.image_xscale=random_range(1.5,3);
        bottom_cherry.image_yscale= bottom_cherry.image_xscale;
        bottom_cherry.followDirection=false;
        bottom_cherry.aimlock=false;
        //just for sure
        bottom_cherry.image_angle=random(360);
        bottom_cherry.image_blend=c_red//merge_color(c_white,c_red,0.5);
        bottom_cherry.direction=90+random_range(-15,15);
        bottom_cherry.speed=3;
        bottom_cherry.gravity=0.1;
        bottom_cherry.Type="Penalty"
        bottom_cherry.tag='S6_bottom_cherry';
        var bottom_cherry2 = instance_create(irandom_range(120,800-120),64,objHappy_Bullet_01);
        //bottom_cherry.sprite_index=sprHappy_MayuCherry;
        bottom_cherry2.image_xscale=random_range(1.5,3);
        bottom_cherry2.image_yscale= bottom_cherry2.image_xscale;
        bottom_cherry2.followDirection=false;
        bottom_cherry2.aimlock=false;
        bottom_cherry2.image_angle=random(360);
        bottom_cherry2.image_blend=c_red//merge_color(c_white,c_red,0.5);
        bottom_cherry2.direction=270+random_range(-15,15);
        bottom_cherry2.speed=3;
        bottom_cherry2.gravity=-0.1;
        bottom_cherry2.Type="Penalty"
        bottom_cherry2.tag='S6_bottom_cherry';
    }
    
    with(objHappy_Bullet_01) {
        if tag=='S6_follow_platform' {
            if y&lt;=304 { persist=false; }
        }
        if tag=='S6_reversed_rain' {
            if y&lt;500 { persist=false; }
        }
    }
    
    with(objHappy_Bullet_trig_deco) {
        if tag == 'S6_falling_circle' {
            cen_y += subtag;
            if (y&lt;0 &amp;&amp; cen_y&lt;0) { persist=false; destroyOutside=true }
        }
        if tag == 'S6_border' {
            cen_x+=dsin(t*2)/3;
        }
    }
        
    with(objHappy_Bullet_trig) {
        if tag == 'S6_falling_circle' {
            cen_y += subtag;
            if (y&lt;0-sprite_get_height(sprHappy_WBCherry)*image_yscale-2 &amp;&amp; cen_y&lt;0) { persist=false; destroyOutside=true }
            //once it disappears from view, its gone
        }
        if tag == 'S6_cherry_border' {
            cen_x+=dsin(t*2)/3;
        }
    }
    
//                  falling circles stuff
    
    view_angle[0]=dsin(t)/4;
    
}

//                  stuff for the transition

if t&gt;5810 and t&lt;5835 {
    if t&lt;5840 {
        with(objHappy_Bullet_trig_deco) {
            if tag=='S6_penta' {
                len=EaseOutExpo(t-79,finlen/4,0,30);
                image_xscale=EaseOutExpo(t-79,1,1.75,30);
                image_yscale=EaseOutExpo(t-79,1,1.75,30);
            }
        }
    }
    objPlayer.x=400;
    objPlayer.y=304;
    objPlayer.vspeed=0;
}
if t==5835 {
    instance_destroy(objPShaderEffect);
    with(objHappy_Bullet_trig_deco) {
        if tag=='S6_penta' or tag=='S6_penta_circle' {
            repeat(2) {
                s6_to_s7 = instance_create(x,y,objHappy_Bullet_01);
                s6_to_s7.image_xscale=random_range(1,2.25);
                s6_to_s7.image_yscale=s6_to_s7.image_xscale;
                s6_to_s7.direction=random(360);
                s6_to_s7.depth=depth;
                s6_to_s7.speed=random_range(3,8);
                s6_to_s7.curve=random_range(-2,2);
                s6_to_s7.curve_real=s6_to_s7.curve;
                s6_to_s7.accel=random_range(0.05,0.2);
                s6_to_s7.trail=true;
                s6_to_s7.killer=false;
            }
            instance_destroy();
        }
    }
    with(objPlayer) { visible=true; frozen=false; }
    with(objHappy_Bullet_trig_deco) {
        if tag=='S6_border' { instance_destroy(); }
    }
    view_angle[0]=0;
    instance_destroy(objHappy_Glitch);
    instance_destroy(objHappy_Spotlight);
    flash = instance_create(0,0,objHappy_Darkness);
    flash.image_alpha=0.4;
    flash.tag='s6_flash';
    for (var xx=0; xx&lt;800; xx+=32) {
        block1 = instance_create(xx,0,objBlock);
        block2 = instance_create(xx,576,objBlock);
    }
    for (var yy=32;yy&lt;576;yy+=32) {
        block1 = instance_create(0,yy,objBlock);
        block2 = instance_create(768,yy,objBlock);
    }
    
    ugly2 = instance_create(0,0,objHappy_Darkness);
    ugly2.sprite_index=sprHappy_Ugly2;
    ugly2.image_alpha=0.4;
    ugly2.depth=254;
    ugly2.tag='s6_ugly2';
    ugly2_blink = instance_create(0,0,objHappy_Darkness);
    ugly2_blink.image_blend=c_black;
    ugly2_blink.depth=250;
    ugly2_blink.tag='s6_ugly2_blink';
    
    blink_spotlight = instance_create(0,0,objHappy_Spotlight);
    blink_spotlight.tag='s6_blink_spotlight';
    blink_spotlight.depth=-11000
    
    tail_1 = instance_create(320,256,objHappy_Tail1);
    tail_1.t=random(360);
    tail_2 = instance_create(-48,114,objHappy_Tail2);
    tail_2.t=random(360);
    tail_3 = instance_create(256,0,objHappy_Tail3);
    tail_3.t=random(360);
    tail_4 = instance_create(0,-32,objHappy_Tail4);
    tail_4.t=random(360);
    tail_5 = instance_create(0,192,objHappy_Tail5);
    tail_5.t=random(360);
    tail_6 = instance_create(-64,368,objHappy_Tail6);
    tail_6.t=random(360);
    with(objHappy_TailParent) { image_alpha=0; }
    
    for (var xx=0; xx&lt;800; xx+=32) {
        var tile;
        tile = tile_layer_find(1000000,xx,0)
        var tile1;
        tile1 = tile_layer_find(1000000,xx,576)
        if tile_get_alpha(tile) &gt; 0 {
            tile_set_alpha(tile,0)
            tile_set_alpha(tile1,0)
        }
    }
    for (var yy=0; yy&lt;608; yy+=32) {
        var tile2;
        tile2 = tile_layer_find(1000000,0,yy)
        var tile3;
        tile3 = tile_layer_find(1000000,768,yy)
        if tile_get_alpha(tile2) &gt; 0 {
            tile_set_alpha(tile2,0)
            tile_set_alpha(tile3,0)
        }
    }
    instance_destroy(objBlock);
    
    gravity_switcher_1 = instance_create(0,0,objGravityDown);
    gravity_switcher_1.sprite_index=sprGravitySwitcherLine;
    gravity_switcher_1.image_xscale=25-7;
    gravity_switcher_15 = instance_create(0,608-32,objGravityUp);
    gravity_switcher_15.sprite_index=sprGravitySwitcherLine;
    gravity_switcher_15.image_xscale=25-7;
    for(var _x=0;_x&lt;10;_x+=1) {
        gs2 = instance_create((18+_x)*32,0,objGravityDown);
        gs2.sprite_index=sprGravitySwitcherLine;
        gs2.tag='s7_gravity_switcher_1'
        gs3 = instance_create((18+_x)*32,608-32,objGravityUp);
        gs3.sprite_index=sprGravitySwitcherLine;
        gs3.tag='s7_gravity_switcher_2'
        
    }
    
    for (var yy=0; yy&lt;608; yy+=32) {
        instance_create(-32,yy,objBlock);
        instance_create(800,yy,objBlock);
    }
    for (var xx=0; xx&lt;800; xx+=32) {
        instance_create(xx,-32,objBlock);
        instance_create(xx,608,objBlock);
    }
    miku = instance_create(448,48,objHappy_Miku);
    miku.image_alpha=0;
    miku.alpha_range=-0.25
    miku.tag='Miku';        //its says a lot about an object
}
if t&gt;5835 and t&lt;5885 {
    view_xview[0]=EaseOutExpo(t-5835,192,0,50);
    view_yview[0]=view_xview[0]/1.3;
    view_wview[0]=800-view_xview[0]*2;
    view_hview[0]=608-view_yview[0]*2;
    with(objHappy_Darkness) {
        if tag=='s6_flash' {
            image_alpha-=0.4/40;
            if image_alpha&lt;=0 { instance_destroy(); }
        }
        /*if tag=='s6_red_bg' {
            image_alpha-=1/40;
            if image_alpha&lt;=0 { instance_destroy(); }
        }*/
    }
}

if t&gt;5835 and t&lt;5905 {
    with(objHappy_TailParent) {
        image_alpha+=1/70;
    }
    with(objHappy_Darkness) {
        if tag=='s6_ugly2' {
            image_alpha+=0.6/79;
        }
    }
    objHappy_Miku.alpha_range=EaseInSine(t-5835,-0.25,0.5,70);
}
if t&gt;5835 {
    with(objHappy_Darkness) {
        if tag=='s6_ugly2_blink' {
            image_alpha=random_range(0.4,0.6);
        }
    }
    with(objHappy_Spotlight) {
        if tag=='s6_blink_spotlight' {
            image_alpha=random_range(0.5,0.7);
        }
    }
}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Segment №7: 1:41 - 2:23 (frames: 5835 - 8200) - change ending
if instance_exists(objPlayer) {
if t==5835 {
    shake = instance_create(0,0,objPShaderEffect);
    shake.shader=shEasyShaderExample;
    shake.intensity=0.1;
    vx=random_range(-3,3);
    vy=random_range(-3,3);
    repeat(100) {
        var a = instance_create(random(960),random(608),objHappy_Bullet_01);
        //a.depth=objHappy_Miku.depth+1;
        //a.sprite_index=sprHappy_MayuCherry;
        a.aimlock=true;
        a.image_xscale=max(0.1,2*(dsin(90)+0.25));
        a.image_yscale=0.1;
        a.persist=true;
        a.direction=point_direction(1600,304,objPlayer.x,objPlayer.y)+random_range(-5,5);
        a.speed=max(0.5,12*(dsin(90)+0.25));
        a.tag='s7_wind_indicator'
        a.image_alpha=0.075;
        a.killer=false;
    }
}
if t&gt;5835 and t&lt;=6930 {
    
    repeat(1) {
        var a = instance_create(800,random(608),objHappy_Bullet_01);
        //a.depth=objHappy_Miku.depth+1;
        //a.sprite_index=sprHappy_MayuCherry;
        a.aimlock=true;
        a.image_xscale=max(0.1,2*(dsin(90)+0.25));
        a.image_yscale=0.1
        a.direction=point_direction(2400,304,objPlayer.x,objPlayer.y)+random_range(-3,5);
        a.speed=max(0.5,12*(dsin(90)+0.25));
        a.tag='s7_wind_indicator'
        a.image_alpha=0.075;
        a.killer=false;
    }
    
    with(objHappy_Bullet_01) {
        if tag=='s7_wind_indicator' {
            if t&gt;=50 {
                persist=false;
            }
        }
    }
    
    //objPlayer.x-=max(0,(distance-544)/64);
}
if t&gt;5835 and t&lt;6480 {
    if t&gt;5835 and t&lt;5885 {
        with(objPShaderEffect) {
            intensity-=0.005;
            if intensity&lt;=0 { instance_destroy(); }
        }
    }
    if t&lt;6420 and t mod 15 == 1 {
        with(objHappy_Miku) {
            var circle_spawner = instance_create(x+90,y+316,objHappy_Bullet_01);
            circle_spawner.sprite_index=choose(sprHappy_MayuCherry,sprHappy_WBCherry);
            circle_spawner.image_alpha=alpha_range+0.25;
            circle_spawner.image_xscale=2;
            circle_spawner.image_yscale=2;
            circle_spawner.direction=point_direction(x+90,y+316,objPlayer.x,objPlayer.y);
            circle_spawner.speed=5;
            circle_spawner.tag='s7_circle_spawner2';
            circle_spawner.subtag=30;
        }
    }
    if t&lt;6400 and t mod 50 == 11 {
        with(objHappy_Miku) {
            var circle_spawner = instance_create(x+224,y+316,objHappy_Bullet_01);
            circle_spawner.sprite_index=choose(sprHappy_MayuCherry,sprHappy_WBCherry);
            circle_spawner.image_alpha=alpha_range+0.25;
            circle_spawner.image_xscale=2;
            circle_spawner.image_yscale=2;
            circle_spawner.direction=point_direction(x+224,y+316,objPlayer.x,objPlayer.y);
            circle_spawner.speed=5;
            circle_spawner.tag='s7_circle_spawner';
            circle_spawner.subtag=30;
        }
    }
    if t==5960 {
        var circle_spawner = instance_create(500,0,objHappy_Bullet_01);
        circle_spawner.sprite_index=choose(sprHappy_MayuCherry,sprHappy_WBCherry);
        circle_spawner.image_alpha=0.25;
        circle_spawner.image_xscale=2;
        circle_spawner.image_yscale=2;
        circle_spawner.image_alpha=0.4;
        circle_spawner.killer=false;
        circle_spawner.direction=point_direction(500,0,400,154);
        circle_spawner.speed=4;
        circle_spawner.tag='s7_circle_spawner';
        circle_spawner.subtag=25;
        var circle_spawner = instance_create(500,608,objHappy_Bullet_01);
        circle_spawner.sprite_index=choose(sprHappy_MayuCherry,sprHappy_WBCherry);
        circle_spawner.image_alpha=0.25;
        circle_spawner.image_xscale=2;
        circle_spawner.image_yscale=2;
        circle_spawner.image_alpha=0.4;
        circle_spawner.killer=false;
        circle_spawner.direction=point_direction(500,608,400,454);
        circle_spawner.speed=4;
        circle_spawner.tag='s7_circle_spawner';
        circle_spawner.subtag=25;
    }
    with(objHappy_Bullet_01) {
        if tag=='s7_circle_spawner' or tag=='s7_circle_spawner2' {
            if !instance_exists(objPlayer) {
                speed=0;
            }
            subtag--;
            if image_alpha&lt;1 and killer=true { image_alpha+=0.05; }
            if killer=false { 
                if image_alpha&lt;0.2 { image_alpha+=0.05; }
                else { image_alpha=0.2; } 
            }
            if subtag==0 {
                var rand_angle=180//random(360);
                //if tag=='s7_circle_spawner2' { increaser=30; }
                //if tag=='s7_circle_spawner' { increaser=36; }
                increaser=30;
                for (var angle=rand_angle;angle&lt;rand_angle+360;angle+=increaser) {
                    var circle = instance_create(x,y,objHappy_Bullet_01);
                    circle.direction=angle;
                    circle.speed=4+random_range(-0.2,0.2);
                    circle.accel=0.1;
                    circle.trail=true;
                    circle.killer=killer;
                    circle.sprite_index=sprite_index;
                    circle.image_alpha=image_alpha;
                    circle.tag='s7_circle'
                }
                speed=0;
                killer=false;
                tag='s7_fade_out';
            }
        }
        if tag=='s7_fade_out' {
            image_alpha-=0.1;
            if image_alpha&lt;=0 { instance_destroy(); }
        }
        if tag=='s7_circle' {
            if t mod 6 != 0 { trail = false; }
            else { trail=true; }
        }
    }
    if t&gt;6130 and t&lt;6210 {
        with(objHappy_Bullet_01) {
            if tag=='s7_circle_spawner' or tag=='s7_circle_spawner2' {
                killer=false;
                if image_alpha&gt;0.2 { image_alpha-=0.1; }
            }
        }
    }
    if t==6130 {
        repeat(75) {
            burst = instance_create(objHappy_Miku.x+191,objHappy_Miku.y+115,objHappy_Bullet_01);
            burst.sprite_index=sprHappy_MayuCherry;
            burst.image_xscale=1.3;
            burst.image_yscale=1.3;
            burst.direction=random(360);
            burst.speed=random_range(3,9);
            burst.friction=0.05;
            burst.tag='s7_burst';
        }
        repeat(120) {
            burst_deco = instance_create(objHappy_Miku.x+191,objHappy_Miku.y+115,objHappy_Bullet_01);
            burst_deco.sprite_index=sprHappy_MayuCherry;
            burst_deco.image_xscale=3;
            burst_deco.image_yscale=3;
            burst_deco.image_alpha=0.2;
            burst_deco.direction=random(360);
            burst_deco.speed=random_range(5,18);
            burst_deco.tag='s7_burst_deco';
            burst_deco.killer=false;
        }
    }
    if t==6160 {
        repeat(75) {
            burst = instance_create(objHappy_Miku.x+90,objHappy_Miku.y+316,objHappy_Bullet_01);
            burst.sprite_index=sprHappy_MayuCherry;
            burst.image_xscale=1.3;
            burst.image_yscale=1.3;
            burst.direction=random(360);
            burst.speed=random_range(3,9);
            burst.friction=0.05;
            burst.tag='s7_burst';
        }
        repeat(120) {
            burst_deco = instance_create(objHappy_Miku.x+90,objHappy_Miku.y+316,objHappy_Bullet_01);
            burst_deco.sprite_index=sprHappy_MayuCherry;
            burst_deco.image_xscale=3;
            burst_deco.image_yscale=3;
            burst_deco.image_alpha=0.2;
            burst_deco.direction=random(360);
            burst_deco.speed=random_range(5,18);
            burst_deco.tag='s7_burst_deco';
            burst_deco.killer=false;
        }
    }
    if t==6185 {
        repeat(75) {
            burst = instance_create(objHappy_Miku.x+224,objHappy_Miku.y+316,objHappy_Bullet_01);
            burst.sprite_index=sprHappy_MayuCherry;
            burst.image_xscale=1.3;
            burst.image_yscale=1.3;
            burst.direction=random(360);
            burst.speed=random_range(3,9);
            burst.friction=0.05;
            burst.tag='s7_burst';
        }
        repeat(120) {
            burst_deco = instance_create(objHappy_Miku.x+224,objHappy_Miku.y+316,objHappy_Bullet_01);
            burst_deco.sprite_index=sprHappy_MayuCherry;
            burst_deco.image_xscale=3;
            burst_deco.image_yscale=3;
            burst_deco.image_alpha=0.2;
            burst_deco.direction=random(360);
            burst_deco.speed=random_range(5,18);
            burst_deco.tag='s7_burst_deco';
            burst_deco.killer=false;
        }
    }
    if t&gt;6130 and t&lt;6200 {
        with(objHappy_Bullet_01) {
            if tag=='s7_burst' {
                if image_xscale&gt;1 { image_xscale-=0.05; }
                image_yscale=image_xscale
            }
        }
    }
    if t==6210 {
        with(objHappy_Bullet_01) {
            if tag=='s7_burst' or tag=='s7_burst_deco' {
                friction=0;
                speed=random_range(1,2);
                direction=point_direction(objPlayer.x,objPlayer.y,x,y);
                gravity_direction=180+random_range(-20,20)
                gravity=random_range(0.1,0.3);
                killer=false;   
                tag='s7_burst_deco';
            }
        }
        shake = instance_create(0,0,objPShaderEffect);
        shake.shader=shEasyShaderExample;
        shake.intensity=0.05;
        vx=random_range(-3,3);
        vy=random_range(-3,3);
    }
    if t&gt;6210 and t&lt;6260 {
        with(objPShaderEffect) {
            intensity-=0.005;
            if intensity&lt;=0 { instance_destroy(); }
        }
        view_xview[0]=EaseOutSine(t-6210,vx+dsin(t)*2,0+dsin(t)*2,50);
        view_yview[0]=EaseOutSine(t-6210,vy+dsin(t)*2,0+dsin(t)*2,50);
        with(objHappy_Bullet_01) {
            if tag=='s7_burst_deco' {
                image_alpha-=0.75/50;
                if image_alpha&lt;0.5 { killer=false; }
            }
        }
    }
    if t==6440 {
        if instance_exists(objHappy_Miku) {
            _x=objHappy_Miku.x+191;
            _y=objHappy_Miku.y+115
        }
        else {
            _x=448+191;
            _y=48+115;
        }
        repeat(120) {
            burst_deco = instance_create(_x,_y,objHappy_Bullet_01);
            burst_deco.sprite_index=sprHappy_MayuCherry;
            burst_deco.image_xscale=3;
            burst_deco.image_yscale=3;
            burst_deco.image_alpha=0.2;
            burst_deco.direction=random(360);
            burst_deco.speed=random_range(5,18);
            burst_deco.tag='s7_burst_deco';
            burst_deco.killer=false;
        }
        
        
        s7_pdist=point_distance(_x,_y,0,608);
        s7_angle=point_direction(_x,_y,objPlayer.x,objPlayer.y)//random(360);
        s7_rd = random(64)
    }
    if t&gt;=6440 and t&lt;=6448 {
        //for (var distance=64; distance&lt;_pdist+128; distance+=128) {
        
        if instance_exists(objHappy_Miku) {
            _x=objHappy_Miku.x+191;
            _y=objHappy_Miku.y+115
        }
        else {
            _x=448+191;
            _y=48+115;
        }
        //
        if (192*(t-6440)&lt;=960) {       //hopefully, fps shouldnt die
            space_betw_squares=192;
            distance=64+space_betw_squares*(t-6440);       //max is 778
            
            spawn_shape(_x,_y,s7_angle + 45 * sign((distance-64) mod (space_betw_squares*2)),4,2*(12 + 4*((distance-64)div 256)), distance - 0/*s7_rd*(sign((distance-64)mod space_betw_squares*2))*/,objHappy_Bullet_01,'s7_v_squares_deco');
            if (distance&lt;(s7_pdist+128)/3)
                appear=1;
            else if (distance&gt;=(s7_pdist+128)/3) and (distance&lt;(s7_pdist+128)*2/3)
                appear=2;
            else if (distance&gt;=(s7_pdist+128)*2/3)
                appear=3;
                
            bitch=random_range(0.5,1)*sign((distance-64)mod (space_betw_squares*2))//choose(-1,1)
            
            with(objHappy_Bullet_01) {
                if tag=='s7_v_squares_deco' {
                    var a = instance_create(x,y,objHappy_Bullet_trig);
                    a.sprite_index=sprHappy_MayuCherry;
                    a.image_xscale=1
                    a.image_yscale=a.image_xscale;
                    a.image_alpha=0
                    a.cen_x=xstart;
                    a.cen_y=ystart;
                    a.dir=direction;
                    a.len=speed;
                    a.killer=false
                    a.free_variable[0]=direction;                   //currently unused
                    a.free_variable[1]=speed;           //length
                    a.free_variable[2]=0                            //currently unused
                    a.free_variable[3]=other.bitch;     //dir_inc
                    a.free_variable[4]=1                //no idea if its still being used (1 - change alpha,0 - stop)
                    a.free_variable[5]=other.appear;    //appearance order
                    a.tag=tag;
                    instance_destroy()
                }
            }
        }
    }
}

if t&gt;=6440 and t&lt;=6635 {
    if t&gt;6460 and t&lt;=6540 and t mod 10 == 1 {
        var rand_angle=random(360);
        if instance_exists(objHappy_Miku) {
            _x=objHappy_Miku.x+191;
            _y=objHappy_Miku.y+115
        }
        else {
            _x=448+191;
            _y=48+115;
        }
        for (var angle=rand_angle;angle&lt;rand_angle+360;angle+=30) {
            var circle = instance_create(_x,_y,objHappy_Bullet_01);
            circle.direction=angle;
            circle.speed=8;
            circle.accel=0.1;
            circle.trail=true;
            circle.tag='s7_end_circle';
        }
    }
    with(objHappy_Bullet_01) {
        if tag=='s7_end_circle' {
            if t mod 5 != 0 
                trail=false;
            else
                trail=true;
        }
    }
    with(objHappy_Bullet_trig) {
        if tag=='s7_v_squares' or tag=='s7_v_squares_deco' {
            if other.t-6440&lt;=85 {
                dir_inc=EaseOutSine(other.t-6440,free_variable[3],free_variable[3]/8,85);
                //dir=EaseLinear(t,free_variable[2]+t*dir_inc,free_variable[0]+t*dir_inc,70);
                //len=EaseInOutSine(other.t-6440,free_variable[1]/8,free_variable[1]+8*dsin(t*2),85);
                image_xscale=min(max(1,len/352),2.54)
                image_yscale=image_xscale;
            }
            if other.t&lt;=6560 {
                len=EaseOutCubic(other.t-6440,free_variable[1]/8,free_variable[1]+8*dsin(t*2),120);
                image_alpha=EaseOutCubic(other.t-6440,0,0.35,120);
                killer=false;
            }
            
        }
        
    }
}
if t==6560 {
    with(objHappy_Bullet_01) {
        if tag=='s7_end_circle' {
            friction=0;
            accel=0.25;
        }
    }
    var rand_angle=random(360);
    var inc=random_range(-4,4);
    for (var angle=rand_angle;angle&lt;rand_angle+360;angle+=12) {
        var transformed_circle = instance_create(-3000,-3000,objHappy_Bullet_trig);
        transformed_circle.cen_x=objHappy_Miku.x+191;
        transformed_circle.cen_y=objHappy_Miku.y+115
        transformed_circle.dir=angle;
        transformed_circle.finlen=128;
        transformed_circle.sprite_index=sprHappy_WBCherry;
        transformed_circle.image_xscale=0;
        transformed_circle.image_yscale=0;
        transformed_circle.tag='s7_transformed_circle';
        transformed_circle.subtag=inc;
    }
}
if t==6585 {
    var rand_angle=random(360);
    var inc=random_range(-4,4);
    for (var angle=rand_angle;angle&lt;rand_angle+360;angle+=12) {
        var transformed_circle = instance_create(-3000,-3000,objHappy_Bullet_trig);
        transformed_circle.cen_x=objHappy_Miku.x+191;
        transformed_circle.cen_y=objHappy_Miku.y+115
        transformed_circle.dir=angle;
        transformed_circle.finlen=128+192;
        transformed_circle.sprite_index=sprHappy_WBCherry;
        transformed_circle.image_xscale=0;
        transformed_circle.image_yscale=0;
        transformed_circle.tag='s7_transformed_circle';
        transformed_circle.subtag=inc;
    }
}
if t==6605 {
    var rand_angle=random(360);
    var inc=random_range(-4,4);
    for (var angle=rand_angle;angle&lt;rand_angle+360;angle+=12) {
        var transformed_circle = instance_create(-3000,-3000,objHappy_Bullet_trig);
        transformed_circle.cen_x=objHappy_Miku.x+191;
        transformed_circle.cen_y=objHappy_Miku.y+115
        transformed_circle.dir=angle;
        transformed_circle.finlen=128+192*2;
        transformed_circle.sprite_index=sprHappy_WBCherry;
        transformed_circle.image_xscale=0;
        transformed_circle.image_yscale=0;
        transformed_circle.tag='s7_transformed_circle';
        transformed_circle.subtag=inc
    }
    darkness_transition=instance_create(-400,-304,objHappy_Darkness);
    darkness_transition.image_xscale=2;
    darkness_transition.image_yscale=darkness_transition.image_xscale;
    darkness_transition.image_alpha=0;
    darkness_transition.image_blend=c_black;
    darkness_transition.tag='s7_to_end'
    shader_transition = instance_create(0,0,objPShaderEffect);
    shader_transition.shader=shEasyShaderExample;
    shader_transition.intensity=0.1;
}

if t&gt;=6560 and t&lt;=6635 {
    with(objHappy_Bullet_trig) {
        if tag=='s7_transformed_circle' {
            if t&lt;25 {
                len=EaseOutSine(t,0,finlen,25);
                image_xscale=EaseOutSine(t,0,1,25);
                image_yscale=image_xscale;
                dir_inc=EaseOutSine(t,subtag,subtag/4,25);
            }
        }
        if tag=='s7_v_squares' or tag=='s7_v_squares_deco' {
            if other.t==6560 or other.t==6585 or other.t==6605 {
                free_variable[5]--;
                if free_variable[5]&lt;=0 {
                    Type="Low_damage"
                    tag='s7_v_squares_fade_in'
                    image_alpha=lerp(image_alpha,1,1/25);
                    if image_alpha&gt;=1 
                        killer=true;
                }
            }
        }
        if tag=='s7_v_squares_fade_in' {
            Type="Low_damage"
            tag='s7_v_squares_fade_in'
            image_alpha+=0.1
            if image_alpha&gt;=1 {
                killer=true;
                tag='s7_v_squares'
            }
        }
    }
    repeat(2) {
        burst = instance_create(objHappy_Miku.x+191,objHappy_Miku.y+115,objHappy_Bullet_01);
        burst.sprite_index=sprHappy_MayuCherry;
        burst.image_xscale=1.3;
        burst.image_yscale=1.3;
        burst.direction=random(360);
        burst.speed=(t-6560)/3
        burst.friction=burst.speed/100;
        burst.tag='s7_burst';
    }
    if t&gt;6605 {
        with(objHappy_Darkness) {
            if tag=='s7_to_end' {
                image_alpha+=0.65/29;
            }
        }
        with(objPShaderEffect) {
            intensity+=0.05/30;
        }
    }
}
if t==6635 {
    with(objAvoidanceBullet) {
        if tag!='Miku' {
            if tag=='s7_rain_indicator' instance_destroy();
            speed=random_range(4,12);
            friction=0;
            accel=0.2;
            image_alpha=0.5;
            killer=false;
        }
    }
    with(objHappy_Bullet_trig) {
        if tag=='s7_transformed_circle' or tag=='s7_v_squares' {
            var a = instance_create(x,y,objHappy_Bullet_01);
            a.direction=dir;
            a.speed=random_range(4,8);
            a.accel=0.2;
            a.image_xscale=image_xscale;
            a.image_yscale=image_yscale;
            a.image_alpha=0.5;
            a.sprite_index=sprite_index;
            a.killer=false;
            instance_destroy();
        }
    }
    instance_destroy(objPShaderEffect);
}
if t&gt;6635 and t&lt;6665 {
    with(objPShaderEffect) {
        intensity-=0.005;
        if intensity&lt;=0 { instance_destroy(); }
    }
    with(objHappy_Darkness) {
            if tag=='s7_to_end' {
                image_alpha-=0.65/28;
            if image_alpha&lt;=0 { instance_destroy(); }
        }
    }
}
if t&gt;=6635 and t&lt;=8200 {
    if t&lt;6980 {
        s7_spiral_angle+=((t-6635-32)div 3)*0.4
        angle=s7_spiral_angle+15;
        for(var _angle=angle;_angle&lt;angle+360;_angle+=30) {
            if instance_exists(objHappy_Miku) {
                //objHappy_Miku.x+191,objHappy_Miku.y+115
                _x=objHappy_Miku.x+191;
                _y=objHappy_Miku.y+115
            }
            else {
                _x=448+191;
                _y=48+115;
            }
            if t&lt;6930 and abs(t) mod 3 == 0 and (_angle-angle)mod 60 == 0 {
                var spiral = instance_create(_x,_y,objHappy_Bullet_01);
                //spiral.direction=_angle;
                spiral.gravity_direction=_angle;
                spiral.gravity=0.1;
                spiral.image_xscale=0;
                spiral.image_yscale=spiral.image_xscale;
                spiral.killer=false;
                spiral.tag='s7_outro_spiral_deco'
                //spiral.sprite_index=choose(sprHappy_WBCherry,sprHappy_MayuCherry);
            }
            if ((t&lt;6930 and abs(t) mod 6 == 0)or(t&gt;=6930 and abs(t) mod 3 == 0)) and (_angle-angle)mod 60 == 0 {
                var spiral = instance_create(_x,_y,objHappy_Bullet_01);
                //spiral.direction=_angle;
                spiral.gravity_direction=_angle;
                spiral.gravity=0.1;
                spiral.image_xscale=0;
                spiral.image_yscale=spiral.image_xscale;
                if t&gt;=6930 {
                    spiral.image_alpha=0.125;
                    spiral.gravity=0.2;
                    spiral.killer=false;
                }
                spiral.tag='s7_outro_spiral'
            }
        }
    }
    //6930,6940?,6956,6970,6983
    
    if t==6930 {
        with(objHappy_Bullet_01) {
            if tag=='s7_outro_spiral' or tag=='s7_outro_spiral_deco' {
                repeat(1) {
                    var a = instance_create(x,y,objHappy_Bullet_01);
                    a.killer=killer;
                    a.xstart=xstart;
                    a.ystart=ystart;
                    a.image_alpha=image_alpha;
                    a.image_xscale=image_xscale;
                    a.image_yscale=image_yscale;
                    a.speed=speed;
                    a.direction=direction;
                    a.gravity_direction=gravity_direction//point_direction(objPlayer.x,objPlayer.y,x,y)+random_range(-20,20);
                    a.gravity=0.2;
                    a.tag='s7_outro_spiral_fade_in';
                    instance_destroy();
                }
            }
            if tag=='s7_wind_indicator' instance_destroy();
        }
        angle=random(360);
        sh = instance_create(0,0,objPShaderEffect);
        sh.intensity=0;
        sh.shader=shEasyShaderExample;
        if instance_exists(objHappy_Miku) {
            _x=objHappy_Miku.x+191;
            _y=objHappy_Miku.y+115
        }
        else {
            _x=448+191;
            _y=48+115;
        }
        distance=320
        
        for (var _angle=angle;_angle&lt;angle+360;_angle+=60) {
            
            //WE ARE PUSHING THIS ROCK VERY FAR :speaking_head: :fire:
            
            for (var _distance=0;_distance&lt;distance;_distance+=32) {
                for (var curve=-1.5;curve&lt;=1.5;curve+=3) {
                    var a = instance_create(_x,_y,objHappy_Bullet_trig);
                    a.cen_x=_x;
                    a.cen_y=_y;
                    a.dir=_angle;
                    a.sprite_index=sprHappy_MayuCherry;
                    a.image_xscale=0;
                    a.image_yscale=0;
                    a.free_variable[0]=curve;
                    a.free_variable[1]=_distance
                    a.free_variable[2]=sign(_distance mod 64)
                    a.tag='s7_curving_circle_spawner';
                }
            }
        }
    }
    
    if t&gt;=6930 and t&lt;=6983 {
        if t&lt;=6955 {
            with(objPShaderEffect) {
                intensity=dsin(max(0,(other.t-6930)*180/20))/25;
                if other.t==6955 
                    instance_destroy();
            }
        }
        with(objHappy_Bullet_trig) {
            if tag=='s7_curving_circle_spawner' {
                if t&lt;=50 {
                    len=EaseOutSine(t,0,free_variable[1],50);
                    dir_inc=EaseOutSine(t,free_variable[0],free_variable[0]/2,50);
                    image_xscale=max(1,len/128);
                    image_yscale=image_xscale;
                }
            }
            if tag=='s7_curving_circle' {
                if t&lt;=25 {
                    len=EaseOutQuart(t,free_variable[0],0,25);
                    image_xscale=max(1,len/128);
                    image_yscale=image_xscale;
                }
                if len&lt;=0
                    instance_destroy();
            }
        }
    }
    
    if t==6983 {
        with(objHappy_Bullet_trig) {
            if tag=='s7_curving_circle_spawner' {
                //instance_destroy();
            //if tag=='s7_curving_circle' {
                var a = instance_create(x,y,objHappy_Bullet_01);
                a.sprite_index=sprite_index;
                a.image_xscale=image_xscale;
                a.image_yscale=image_yscale;
                a.direction=dir+random_range(10,30)*choose(-1,1)
                a.free_variable[1]=random_range(6,12);
                a.accel=random_range(0.05,0.15)
                a.friction=a.speed/30;
                a.tag='s7_curving_circle'
                a.free_variable[0]=free_variable[2]
                a.free_variable[1]=image_xscale;
                instance_destroy();
            }
        }
        
        sh = instance_create(0,0,objPShaderEffect);
        sh.intensity=0;
        sh.shader=shEasyShaderExample;
    }
    if t&gt;=6983 and t&lt;=6983+15 {
        with(objPShaderEffect) {
            intensity=dsin(max(0,(other.t-6983)*180/15))/25;
            if other.t==6983+15 
                instance_destroy();
        }
        with(objHappy_Bullet_01) {
            if tag=='s7_curving_circle' {
                if free_variable[0]!=1 {
                    killer=false;
                    image_alpha=lerp(image_alpha,0.05,0.15);
                }
                else {
                    image_xscale=EaseOutSine(t,free_variable[1],max(1,free_variable[1]*0.75),15);
                    image_yscale=image_xscale;
                }
            }
        }
    
    }
    if t==6983+10 {
        with(objHappy_Bullet_01) {
            if tag=='s7_curving_circle' {
                trail=false;
                friction=0;
            }
        }
    }
    
    if t&gt;=7030 and t&lt;=7330 {
        s7_spiral_angle+=((t-6635-32)div 3)*0.4
        angle=s7_spiral_angle+15;
        if instance_exists(objHappy_Miku) {
            //objHappy_Miku.x+191,objHappy_Miku.y+115
            _x=objHappy_Miku.x+191;
            _y=objHappy_Miku.y+115
        }
        else {
            _x=448+191;
            _y=48+115;
        }
        for(var _angle=angle;_angle&lt;angle+360;_angle+=30) {
            if abs(t) mod 3 == 0 and (_angle-angle)mod 60 == 0 {
                var spiral = instance_create(_x,_y,objHappy_Bullet_01);
                //spiral.direction=_angle;
                spiral.gravity_direction=_angle;
                spiral.gravity=0.1;
                spiral.image_xscale=0;
                spiral.image_yscale=spiral.image_xscale;
                spiral.killer=false;
                spiral.tag='s7_outro_spiral_deco2'
                //spiral.sprite_index=choose(sprHappy_WBCherry,sprHappy_MayuCherry);
            }
            if abs(t) mod 15 == 0 and (_angle-angle)mod 60 == 0 {
                var spiral = instance_create(_x,_y,objHappy_Bullet_01);
                //spiral.direction=_angle;
                spiral.gravity_direction=_angle;
                spiral.gravity=0.1;
                spiral.image_xscale=0;
                spiral.image_yscale=spiral.image_xscale;
                spiral.tag='s7_outro_spiral2'
            }
        }
        
        if t mod 17 == 0 {
            var a = instance_create(random_range(_x-191,800),-4,objHappy_Bullet_01);
            a.sprite_index=sprLeeheMoment
            a.persist=true;
            a.image_speed=0;
            a.image_index=14;
            a.image_xscale=random_range(0.45,0.85);
            a.image_yscale=a.image_xscale;
            a.direction=200+random_range(-15,15);
            a.gravity_direction=180;
            a.gravity=0.1;
            a.speed=random_range(4,8);
            a.tag='s7_leehe_curving';
            a.free_variable[0]=random_range(1,2)*choose(-1,1)
            
            var a2 = instance_create(804,irandom(608),objHappy_Bullet_01);
            a2.sprite_index=sprLeeheMoment
            a2.persist=true;
            a2.image_speed=0;
            a2.image_index=14;
            a2.image_xscale=random_range(0.5,0.85);
            a2.image_yscale=a2.image_xscale;
            a2.direction=200+random_range(-15,15);
            a2.gravity_direction=180;
            a2.gravity=0.1;
            a2.speed=random_range(4,8);
            a2.tag='s7_leehe_curving';
            a2.free_variable[0]=random_range(1,2)*choose(-1,1)
        }
        
        _choose=choose(1,2,3)
        switch(_choose) {
            case 1:
                if instance_exists(objHappy_Miku) {
                    _x=objHappy_Miku.x+191;
                    _y=objHappy_Miku.y+115
                }
                else {
                    _x=448+191;
                    _y=48+115;
                }
                distance=320
                break;
            case 2:
                if instance_exists(objHappy_Miku) {
                    _x=objHappy_Miku.x+90;
                    _y=objHappy_Miku.y+316
                }
                else {
                    _x=448+90
                    _y=48+316
                }
                distance=320-64
                break;
            case 3:
                if instance_exists(objHappy_Miku) {
                    _x=objHappy_Miku.x+224;
                    _y=objHappy_Miku.y+316;
                }
                else {
                    _x=448+224
                    _y=48+316
                }
                distance=320
                break;
        }
        if t mod 25 == 0 {
            repeat(10) {
                var a = instance_create(_x,_y,objHappy_Bullet_01);
                a.direction=random(360);
                a.speed=random_range(2,8);
                a.image_alpha=1//0.5;
                a.image_xscale=random_range(0.5,1);
                a.image_yscale=a.image_xscale;
                a.sprite_index=choose(sprHappy_MayuCherry,sprHappy_WBCherry);
                a.tag='s7_burst2'
            }
        }
    }
    
    if t==7330 {
        sh = instance_create(0,0,objPShaderEffect);
        sh.intensity=0;
        sh.shader=shEasyShaderExample;
        sur = instance_create(0,0,objHappy_PersistSF);
        ugly = instance_create(-400,-304,objHappy_Spotlight)
        ugly.sprite_index=sprHappy_CharismaBreaker;
        ugly.image_speed=0;
        ugly.image_index=choose(0,1,2,3);
        ugly.image_xscale=2;
        ugly.image_yscale=2;
        ugly.image_alpha=0;
        ugly.tag='s7_ugly';
        ugly.free_variable[0]=1;
        ugly.depth=-100;
    }
    
    if t&gt;=7330 and t&lt;=7430 {
        with(objHappy_Darkness) {
            if tag=='s7_ugly' {
                free_variable[0]++;
                if free_variable[0]==25 {
                    image_blend=merge_colour(c_white,choose(c_red,c_green,c_blue),0.8);
                    free_variable[0]=-8;
                }
                if free_variable[0]==0 {
                    image_blend=c_white;
                    image_index+=irandom_range(1,3)
                }
                image_alpha+=1/25
            }   
        }
        with(objPShaderEffect) {
            intensity=EaseLinear(other.t-7330,0,0.05,100);
        }
        with(objAvoidanceBullet) {
            killer=false;
        }
        if instance_exists(objHappy_Miku) {
            //objHappy_Miku.x+191,objHappy_Miku.y+115
            _x=objHappy_Miku.x+191;
            _y=objHappy_Miku.y+115
        }
        else {
            _x=448+191;
            _y=48+115;
        }
        _angle=random(360);
        if t mod 4 == 0 {
            for(var angle=_angle;angle&lt;_angle+360;angle+=60) {
                var a = instance_create(_x,_y,objHappy_SFArea);
                a.image_blend=c_black;
                a.direction=angle//random(360)
                a.speed=EaseLinear(t-7330,4,24,100);
                a.friction=0.1;
                a.image_angle=point_direction(_x+dcos(a.direction)*32,_y+dsin(a.direction)*32,_x,_y)+30           //random(360);
                a.image_xscale=1+(t-7330)*10/100;
                a.image_yscale=a.image_xscale;
                a.depth=-999;
            }
        }
        //repeat(2) {
            var a = instance_create(_x,_y,objHappy_Bullet_01);
            a.image_blend=c_black;
            a.direction=random(360)
            a.speed=EaseLinear(t-7330,4,20,100);
            a.friction=0.1;
            a.tag='s7_outro_bullshit'
            a.depth=-800
        //}
        with(objHappy_SFArea) {
            image_blend=merge_colour(c_black,choose(c_red,c_maroon),0)//EaseLinear(other.t-7330,0,0.8,100));
        }
    }
    
    with(objHappy_Bullet_01) {
        if tag=='s7_leehe_curving' {
            image_angle+=free_variable[0]
            if t == 10 {
                gravity=0;
                persist=false;
            }
        }
        if tag=='s7_outro_bullshit' {
            image_xscale=min(2.5,point_distance(xstart,ystart,x,y)/192)
            image_yscale=image_xscale;
            direction+=dsin(t*8)*3;
            if speed&lt;2 {
                friction=0;
                speed=2;
            }
            if t mod 10 == 0 {
                var a = instance_create(x,y,objHappy_Bullet_01);
                a.tag='s7_outro_bullshit_trail'
                a.image_xscale=image_xscale;
                a.image_yscale=image_yscale;
                
            }
        }
        if tag=='s7_outro_bullshit_trail' {
            image_xscale-=0.075;
            image_yscale=image_xscale;
            if image_xscale&lt;=0 instance_destroy();
        }
        if tag=='s7_outro_spiral' {
            image_xscale=point_distance(xstart,ystart,x,y)/254
            image_yscale=image_xscale;
            if t mod 5 == 0 
                trail=true;
            else trail=false;
        }
        if tag=='s7_outro_spiral2' {
            image_xscale=point_distance(xstart,ystart,x,y)/320
            image_yscale=image_xscale;
            if t mod 5 == 0 
                trail=true;
            else trail=false;
        }
        if tag=='s7_outro_spiral_deco' {
            image_xscale=point_distance(xstart,ystart,x,y)/128
            image_yscale=image_xscale;
            if point_distance(xstart,ystart,x,y)&gt;64 image_alpha-=0.025;
            if image_alpha&lt;=0 instance_destroy();
        }
        if tag=='s7_outro_spiral_deco2' {
            image_xscale=point_distance(xstart,ystart,x,y)/192
            image_yscale=image_xscale;
            if point_distance(xstart,ystart,x,y)&gt;32 image_alpha-=0.025;
            if image_alpha&lt;=0 instance_destroy();
        }
        if tag=='s7_outro_spiral_fade_in' {
            image_xscale=point_distance(xstart,ystart,x,y)/254
            image_yscale=image_xscale;
            killer=false;
            if image_alpha&gt;0.05 image_alpha-=1/25;
            if image_alpha&lt;=0 instance_destroy();
        }
        if tag=='s7_end_burst' {
            if t==15 {
                friction=0;
            }
        }
        if tag=='s7_end_burst_deco' {
            image_alpha-=0.025;
            if image_alpha&lt;=0 instance_destroy();
        }
    }
    if t==7431 {
        instance_destroy(objPShaderEffect)
        instance_destroy(objHappy_SFArea);
        instance_destroy(objHappy_PersistSF);
        instance_destroy(objAvoidanceBullet);
        instance_destroy(objHappy_Miku)
        instance_destroy(objHappy_Darkness);
        instance_destroy(objHappy_TailParent);
        instance_destroy(objGravityUp);
        instance_destroy(objGravityDown);
        instance_destroy(objHappy_Spotlight);
        objPlayer.visible=false;
        objPlayer.frozen=true;
        global.grav=1;
        var flash = instance_create(0,0,objHappyBulletTrail);
        flash.sprite_index=sprHappy_Darkness;
        flash.image_alpha=0.65;
        flash.image_alpha_degreaser=0.025
        flash.depth=-30000;
        border1 = instance_create(0,96,objHappy_Darkness);
        border1.image_yscale=-1//96/608;
        border1.depth=-200
        border1.image_blend=c_black;
        border1.tag='s7_border'
        border2 = instance_create(0,608-96,objHappy_Darkness);
        border2.image_yscale=1//96/608;
        border2.depth=-200;
        border2.image_blend=c_black;
        border2.tag='s7_border'
        ugly = instance_create(0,0,objHappy_Darkness)
        ugly.sprite_index=sprHappy_Ugly
        ugly.tag='s7_ugly1'
        ugly.depth=100;
        spotlight = instance_create(0,0,objHappy_Spotlight);
        spotlight.depth=-100;
        
        shader_greyscale = shader_push(shGreyscale,0);
        instance_change_variable(shader_greyscale,"intensity",1,50,tween_linear);
        
        
        var deco_miku = instance_create(208,32,objHappy_Bullet_trig);
        deco_miku.cen_x=232;
        deco_miku.cen_y=48;
        deco_miku.sprite_index=sprHappy_Miku;
        deco_miku.image_xscale=0.925;
        deco_miku.image_yscale=deco_miku.image_xscale;
        deco_miku.image_alpha=0.3;
        deco_miku.killer=false;
        deco_miku.tag='s7_very_end_miku'
        deco_miku.depth=50;
    
        for (var distance=80;distance&lt;80+164*4;distance+=164) {
            if (distance!=80) { /*var rand_angle=random(360);*/ angle_inc = 30; inc=random_range(-1,1)/5; }
            else { /*var rand_angle=0;*/ angle_inc = 30; inc=random_range(-1,1)/7.5; }
            rand_angle=random(360)//point_direction(410,152,objPlayer.x,objPlayer.y)+angle_inc/2;
            for (var angle=rand_angle;angle&lt;rand_angle+360;angle+=angle_inc) {
                var a = instance_create(-3000,-3000,objHappy_Bullet_trig);
                a.cen_x=400        //400
                a.cen_y=304        //304
                a.dir=angle;
                a.dir_inc=inc;
                a.finlen=distance;
                //a.depth=-100;
                a.sprite_index=sprHappy_MayuCherry;
                a.image_xscale=max(0.35,distance/190);
                a.image_yscale=a.image_xscale;
                a.image_alpha=1;
                a.image_angle=angle-90;
                a.tag='s7_sciurus_circles';
                a.killer=false;
            }
            for(var angle=rand_angle;angle&lt;rand_angle+360;angle+=60) {
                for (var sub_distance=0;sub_distance&lt;48;sub_distance+=4) {
                
                        var a2 = instance_create(-3000,-3000,objHappy_Bullet_trig);
                        a2.cen_x=400        //400
                        a2.cen_y=304        //304
                        a2.dir=angle//+sub_distance/4;
                        a2.dir_inc=inc;
                        a2.finlen=distance+82+sub_distance;//sub_distance+17;
                        //a2.depth=-100;
                        a2.sprite_index=sprHappy_WBCherry;
                        a2.image_xscale=max(0.2,distance/300);
                        a2.image_yscale=a2.image_xscale;
                        a2.image_alpha=1;
                        a2.image_angle=angle-90;
                        a2.Type="Low_damage"
                        a2.tag='s7_sciurus_wb_circles';
                        a2.killer=false;
                }
            }
        }
        
        view_xview[0]=0;
        view_yview[0]=0;
    }
    if t&gt;=7430 and t&lt;=7530 {
        with(objHappy_Bullet_trig) {
            if tag=='s7_very_end_miku' {
                image_alpha=0.6+random_range(-0.15,0.1)
            }
            if tag='s7_sciurus_circles' or tag='s7_sciurus_wb_circles' {
                image_angle=dir-90;
                if tag=='s7_sciurus_circles' { 
                    image_xscale=max(0.4,len/190); 
                }
                if tag=='s7_sciurus_wb_circles' { 
                    image_xscale=max(0.4,len/300); 
                    if t mod 2 == 0 {
                        /*var a = instance_create(x,y,objHappy_Bullet_01);
                        a.direction=dir+dsin(t*(270/50))*8;
                        a.speed=2;
                        a.image_xscale=image_xscale
                        a.image_yscale=a.image_xscale;
                        a.image_alpha=image_alpha;
                        a.image_angle=image_angle;
                        a.killer=killer;
                        //if len&lt;128 { a.killer=false; }
                        a.Type="Low_damage"
                        a.tag='s7_sciurus_wb_circles_tail';*/
                    }
                }
                image_yscale=image_xscale;
                /*if len &lt;= 48 { 
                    image_alpha=len/48;
                    killer=false;
                }*/
                len=EaseOutExpo(other.t-7430+50,finlen*1.5,finlen,100);
                if len &lt; 0 {
                    instance_destroy();
                }
            }
        }
        with(objHappy_Bullet_01) {
            if tag=='s7_sciurus_wb_circles_tail' {
                subtag++;
                //if subtag==15 { killer=false; }
                image_xscale-=0.01;
                image_yscale=image_xscale;
                if subtag==15 { instance_destroy(); }
            }
        }
    }
    if t==7470 {
        with(objHappy_Darkness) {
            if tag=='s7_ugly1' {
                x=400;
                y=304;
                sprite_index=sprHappy_Glitch
                image_speed=4/50;
                tag='s7_ugly2'
                var a = instance_create(0,0,objHappy_Darkness);
                a.image_blend=c_black;
                a.image_alpha=0.75;
                a.depth=depth-4;
                a.tag='s7_ugly3'
                repeat(10) {
                    a = instance_create(view_xview[0]+random(view_wview[0]),view_yview[0]+random(view_hview[0]),objHappy_ErrorRectangle);
                    a.depth=depth-2;
                    a.width=random_range(8,192);
                    a.height=200-a.width;
                    a.alpha=0.5;
                }
            }
        }
        
        instance_destroy(objHappy_Bullet_trig);
        instance_destroy(objHappy_Bullet_01);
        
        var flash = instance_create(0,0,objHappyBulletTrail);
        flash.sprite_index=sprHappy_Darkness;
        flash.image_alpha=0.65;
        flash.image_alpha_degreaser=0.025
        flash.depth=-30000;
        
        scrMakeStar(
        400 + dcos(30)*(196+192), 304 + dsin(30)*(196+128), 
        objHappy_Bullet_01,288,random(360),25,'s7_star1');
        scrMakeStar(
        400 + dcos(30+180)*(196+192), 304 + dsin(30+180)*(196+128), 
        objHappy_Bullet_01,288,random(360),25,'s7_star2');
        with(objHappy_Bullet_01) {
            if tag=='s7_star1' or tag=='s7_star2' {
                var a = instance_create(0,0,objHappy_Bullet_trig);
                a.cen_x=xstart;
                a.cen_y=ystart;
                a.dir=direction;
                a.len=speed;
                a.image_xscale=0.8;
                a.image_yscale=a.image_xscale;
                a.dir_inc=0.05;
                a.tag=tag;
                a.killer=false;
                if tag=='s7_star1'
                    a.subtag=0
                else
                    a.subtag=1;
                instance_destroy();
            }
        }
        repeat(60) {
            var horizontal_rain1 = instance_create(random(800),random_range(view_yview[0],view_yview[0]+304),objHappy_Bullet_01);
            horizontal_rain1.direction=random_range(-5,5)
            horizontal_rain1.speed=random_range(2,10);
            horizontal_rain1.image_xscale=0.65;
            horizontal_rain1.image_yscale=0.65;
            horizontal_rain1.image_alpha=0.25
            horizontal_rain1.persist=true;
            horizontal_rain1.killer=false;
            horizontal_rain1.tag='s5_horizontal_rain';
            var horizontal_rain2 = instance_create(random(800),random_range(view_yview[0]+304,view_yview[0]+608),objHappy_Bullet_01);
            horizontal_rain2.direction=180+random_range(-5,5)
            horizontal_rain2.speed=random_range(2,10);
            horizontal_rain2.image_xscale=0.65;
            horizontal_rain2.image_yscale=0.65;
            horizontal_rain2.image_alpha=0.25
            horizontal_rain2.persist=true;
            horizontal_rain2.killer=false;
            horizontal_rain2.tag='s5_horizontal_rain';
        }
    }
    if t&gt;=7470 and t&lt;=7470+60 {
        with(objHappy_Bullet_trig) {
            if tag=='s7_star' {
                if (subtag==0) {
                    cen_y=EaseOutSine(t,304-224,304-128,60)
                }
                if (subtag==1) {
                    cen_y=EaseOutSine(t,304+224,304+128,60)
                }
            }
        }
        if t&lt;7410 {
            var horizontal_rain1 = instance_create(-3,random_range(view_yview[0],view_yview[0]+304),objHappy_Bullet_01);
            horizontal_rain1.direction=random_range(-5,5)
            horizontal_rain1.speed=random_range(2,10);
            horizontal_rain1.image_xscale=0.65;
            horizontal_rain1.image_yscale=0.65;
            horizontal_rain1.image_alpha=0.25
            horizontal_rain1.persist=true;
            horizontal_rain1.killer=false;
            horizontal_rain1.tag='s5_horizontal_rain';
            var horizontal_rain2 = instance_create(803,random_range(view_yview[0]+304,view_yview[0]+608),objHappy_Bullet_01);
            horizontal_rain2.direction=180+random_range(-5,5)
            horizontal_rain2.speed=random_range(2,10);
            horizontal_rain2.image_xscale=0.65;
            horizontal_rain2.image_yscale=0.65;
            horizontal_rain2.image_alpha=0.25
            horizontal_rain2.persist=true;
            horizontal_rain2.killer=false;
            horizontal_rain2.tag='s5_horizontal_rain';
        }
        if t mod 8 == 0 {
            with(objHappy_ErrorRectangle) {
                x=view_xview[0]+random(view_wview[0]);
                y=view_yview[0]+random(view_hview[0]);
                width=random_range(8,192);
                height=200-width;
            }
        }
    }
    if t==7510 {
        instance_destroy(objHappy_Bullet_01);
        instance_destroy(objHappy_Bullet_trig);
        instance_destroy(objHappy_ErrorRectangle);
        instance_destroy(objHappy_Glitch);
        with(objHappy_Darkness) {
            if tag=='s7_ugly2' {
                instance_destroy();
            }
        }
        var flash = instance_create(0,0,objHappyBulletTrail);
        flash.sprite_index=sprHappy_Darkness;
        flash.image_alpha=0.45;
        if t==7530
            flash.image_alpha_degreaser=0.025
        if t!=7530 
            flash.image_alpha_degreaser=0.005
        flash.depth=-30000;
    }
    /*if t==7510 or t==7515 or t==7520 or t==7525 {
        repeat(4) {
            spawn_circle(400+random_range(-300,300),304+random_range(-192,192),random(360),20,random_range(96,256),objHappy_Bullet_01,'odoryance_memes')
            scrMakeStar(400+random_range(-300,300),304+random_range(-192,192),objHappy_Bullet_01,random_range(96,256),random(360),20,'odoryance_memes')
            with(objHappy_Bullet_01) {
                if tag=='odoryance_memes' {
                    killer=false;
                    image_alpha=0.1;
                    alarm[1]=4;
                }
            }
        }
    }
    if t==7510+1 or t==7515+1 or t==7520+1 or t==7525+1 {
        with(objHappy_Bullet_01) {
            if tag=='odoryance_memes' {
                speed=0
            }
        }
    }*/
    if t==7510 {
        //for (var distance=0; distance&lt; 2 * 288 * dsin(144/2); distance+=32) {
        
        rand_angle=random(360);
        _di=2
        for (var angle=rand_angle;angle&lt;rand_angle+360;angle+=72) {
            distance=256;
            for (var _d=0; _d &lt; 2 * distance * dsin(144/2); _d+=16) {
                var a = instance_create(0,0,objHappy_Bullet_trig_ext);
                a.cen_cen_x=400;
                a.cen_cen_y=304;
                a.cen_dir=angle;
                a.cen_len=distance;
                a.cen_x=a.cen_cen_x+lengthdir_x(a.cen_len,a.cen_dir);
                a.cen_y=a.cen_cen_y+lengthdir_y(a.cen_len,a.cen_dir);
                a.dir=point_direction(a.cen_x,a.cen_y,a.cen_cen_x,a.cen_cen_y)+18;
                a.killer=false;
                a.sprite_index=sprHappy_WBCherry;
                a.image_xscale=0.8;
                a.image_yscale=0.8;
                a.image_alpha=0.1
                a.t=-((angle-rand_angle)div 72)*5
                a.tag='outro star'
                a.free_variable[0]=_d;
                a.free_variable[1]=_di;
                a.free_variable[2]=distance;
            }
        }
        //show_message("I didnt care enough to finish this thing");
        //restart_game();
    }
    if t&gt;=7510 and t&lt;=7510+100 {
        with(objHappy_Bullet_trig_ext) {
            if tag=='outro star' {
                image_alpha=EaseInSine(min(max(0,t),50),0,1,50);
                cen_len=EaseOutSine(min(max(0,t),50),32,free_variable[2],50);
                len=EaseOutSine(min(max(0,t),50),0,free_variable[0],50);
                //cen_dir_inc=EaseOutSine(min(max(0,t),50),free_variable[1],0,50);
                //dir_inc=-cen_dir_inc;
            }
        }
    }
}

if t&gt;5835 and t&lt;7430 {
    view_xview[0]+=dsin(t)/32;
    view_yview[0]+=dsin(t)/32;
}

if t==8200 {
    with(objPlayer) {
        frozen=true;
    }
    global.scoreVisible=false;
    view_xview[0]=0;
    view_yview[0]=0;
    instance_destroy(objAvoidanceBullet);
    instance_destroy(objHappy_Miku);
    instance_destroy(objPShaderEffect);
    instance_destroy(objPlayer);
    if (global.practiceOn==0) { 
        show_message("I ran out of ideas at the end");
        show_message("Lack of sleep at 2am was stronger than me");
    }
    if (global.practiceOn==1 and global.debugAvoidanceStartTime!=0) {
        instance_create(0,0,objPracticeEnd);
    }
    if (global.practiceOn==1 and global.debugAvoidanceStartTime==0) {
        //laugh at this user
    }
}
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///freezes
if t==1162 {
    //global.freeze = true;
}
if t==1300 {
    //global.freeze = false;
}
if t==2135 {
    global.freeze = true;
}
if t==2285 {
    global.freeze = false;
}
if t==2435 {
    global.freeze = true;
}
if t==2535 {
    global.freeze = false;
}
if t==3230 {
    global.freeze = true;
}
if t==3460 {
    global.freeze = false;
}
if t==4110 {
    global.freeze = true;
}
if t==4185 {
    global.freeze = false;
}
if t==4830 {
    global.freeze = true;
}
if t==5050 {
    global.freeze = false;
}
if t==5660 {
    global.freeze = true;
}
if t==5880 {
    global.freeze =false;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Practice blocker
if (t==2385 and global.practiceOn and pb_max==2) 
    or (t==3230 and global.practiceOn and pb_max==3)
    or (t==3980  and global.practiceOn and pb_max==4)
    or (t==4720 and global.practiceOn and pb_max==5)
    or (t==5835 and global.practiceOn and pb_max==6) {
    with(objWorld)
        event_user(0);
    
    a = instance_create(0,0,objHappy_Darkness);
    a.image_blend=c_black;
    a.image_alpha=0;
    a.depth=-20000
    a.tag='practice blocker'
    instance_change_variable(a,"image_alpha",1,150);
    
}
if (t==2385+150 and global.practiceOn and pb_max==2) 
    or (t==3230+150 and global.practiceOn and pb_max==3)
    or (t==3980+150  and global.practiceOn and pb_max==4)
    or (t==4720+150 and global.practiceOn and pb_max==5)
    or (t==5835+150 and global.practiceOn and pb_max==6) {
    instance_destroy(objPlayer);
    music_stop();
    instance_create(0,0,objPracticeEnd);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Clean up


ds_list_destroy(attackNames);
ds_list_destroy(attackTimings);
ds_list_destroy(debugKeys);
ds_list_destroy(debugKeyTimings);
ds_list_destroy(debugKeyStartX);
ds_list_destroy(debugKeyStartY);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Call the cleanup event
event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debug timeline
if(global.debugMode){
    draw_set_alpha(1);
    draw_set_colour(c_white);
    draw_rectangle_colour(32,32,room_width-32,48,c_black,c_black,c_black,c_black,0);
    var barPosition=lerp(32,room_width-32,(t-startTiming)/(endTiming-startTiming));
    draw_rectangle_colour(barPosition-0.5,32+8-16,barPosition+0.5,32+8+16,c_white,c_white,c_white,c_white,0);
    for(var i=0;i&lt;numTimings;++i){ //Display attack timings
        var markPosition=lerp(32,room_width-32,(attackTimings[|i]-startTiming)/(endTiming-startTiming));
        draw_set_alpha(0.7);
        draw_rectangle_colour(markPosition-1.0,32+8-16,markPosition+1.0,32+8+16,c_white,c_white,c_white,c_white,0);
        draw_set_alpha(1);
    }
    draw_set_font(fDefault12);
    draw_set_colour(c_white);
    draw_text(room_width-64,64,string(t));
    draw_text(room_width-64,96,pb_max);
    //draw_text(room_width-144,96,"PB time: " + string(global.avoidance_pb));
    //draw_text(room_width-64,96,instance_count);
    var spacing=32;
    for(var i=0;i&lt;global.numDebugSnaps;++i){
        if(highlight==i) draw_set_colour(c_yellow);
        draw_text(room_width-64,64+spacing*(i+1),global.debugSnaps[i]);
        draw_set_colour(c_white);
        var markPosition=lerp(32,room_width-32,(global.debugSnaps[i]-startTiming)/(endTiming-startTiming));
        draw_set_alpha(0.7);
        draw_rectangle_colour(markPosition-0.8,32+8-12,markPosition+0.8,32+8+12,c_white,c_white,c_white,c_white,0);
        draw_set_alpha(1);
    }
    highlight=-1;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// do nothing
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draws lines instead of the ground

if (draw_line_flag) {
    draw_set_alpha(line_alpha);
    draw_set_color(line_color);
    
    //x-coordinates:0,160,320,480,640,800
    //literally add 160
    
    draw_line_width(0,336,160,336+y1,2);
    draw_line_width(160,336+y1,320,336+y2,2);
    draw_line_width(320,336+y2,480,336+y3,2);
    draw_line_width(480,336+y3,640,336+y4,2);
    draw_line_width(640,336+y4,800,336,2);
    draw_line_width(0,336,160,336-y1,2);
    draw_line_width(160,336-y1,320,336-y2,2);
    draw_line_width(320,336-y2,480,336-y3,2);
    draw_line_width(480,336-y3,640,336-y4,2);
    draw_line_width(640,336-y4,800,336,2);
    /*for (line_shift=0; line_shift&lt;=16; line_shift+=8) {
        draw_line_width(0,328+line_shift,160,y1+line_shift,2);
        draw_line_width(160,y1+line_shift,320,y2+line_shift,2);
        draw_line_width(320,y2+line_shift,480,y3+line_shift,2);
        draw_line_width(480,y3+line_shift,640,y4+line_shift,2);
        draw_line_width(640,y4+line_shift,800,328+line_shift,2);
    }*/
}

draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draws lyrics

if (lyrics_flag) {
    draw_set_font(lyrics_font);
    draw_set_alpha(lyrics_alpha);
    draw_set_align(lyrics_halign,lyrics_valign);
    draw_set_color(lyrics_color);
    for ( letter = 1; letter &lt;= string_length(lyrics_string); letter++;) {
        draw_text_transformed(lyrics_x + lyrics_x_shift + (letter)*38+2, lyrics_y + lyrics_y_shift, string_copy(lyrics_string,letter,1), 1, 1, -90)
    }
    
    //draws lyrics
    
    if t mod 25 == 1 {
        lyrics_x_shift = random_range(-lyrics_shift_range,lyrics_shift_range);
        lyrics_y_shift = random_range(-lyrics_shift_range,lyrics_shift_range);
    }
    //moves string into random direction to make it look more... alive?
}

draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
