<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hitScore=global.hitScore;
maxCombo=global.maxCombo;



t=0
overlayalpha=1
int0=irandom_range(0,999)


onealpha=1
twoalpha=1
threealpha=1
timeralpha=1;

onebool=false
twobool=false
threebool=false

final = audio_play_sound(musFinal,0,false); //BGM: RefRain ~prism memories~ OST - 

surf=-1;
//show_debug_message(global.hitScore);


scanlineT=0;

application_surface_draw_enable(false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(surface_exists(surf)){
    surface_free(surf)
}
if(audio_is_playing(final))
    audio_stop_sound(final);

application_surface_draw_enable(true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(t&lt;390){
t+=1
}

if(overlayalpha&gt;=0){
overlayalpha-=1/100
}

if(onebool &amp;&amp; onealpha&gt;=0){
onealpha-=1/50
}

if(twobool &amp;&amp; twoalpha&gt;=0){
twoalpha-=1/50
}

if(threebool &amp;&amp; threealpha&gt;=0){
threealpha-=1/50
}


if(t==388){
    instance_create(0,0,objBestCombo)
}

int0=irandom_range(0,999)


scanlineT++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(surface_exists(surf)){
    surface_free(surf)
}
if(audio_is_playing(final))
    audio_stop_sound(final);
    
application_surface_draw_enable(true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(objPlayer))
scrSaveGame(true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(surface_exists(surf)){
    surface_free(surf)
}
if(audio_is_playing(final))
    audio_stop_sound(final);
    
application_surface_draw_enable(true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw scanlines

draw_set_alpha(0.2);
draw_sprite_tiled(sprCRTScanline,0,0,scanlineT);
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fScore);


//draw_sprite(sprHitCountFrame,0,400,211);

draw_sprite(sprHitCountFrameNew,0,400,211); //NEW: score counter sprite


//NEW: Draw number frames
var factor = sprite_get_width(sprHitCountFrameNew)/7;
for(var i=-2;i&lt;3;i++){
     draw_sprite(sprHitCountFrameNewCell,0,400+factor*i,211);
}


draw_set_align(0,0);

draw_text_color(400,71,"YOUR SCORE:",c_white,c_white,$a2a2a2,$a2a2a2,timeralpha)


draw_set_halign(fa_left);

if(!surface_exists(surf)){
    surf=surface_create(1024,1024);
}

surface_set_target(surf)
draw_clear_alpha(0,0);

//NEW: Draw the numbers in a loop
for(var i=-2;i&lt;3;i++){
    var ctt = (i+2)*66+100;
    if(t&lt;ctt){
        draw_sprite(sprNumber_new,floor(int0/100),400+factor*i,211)
    }else{
        //show_debug_message(t);
        onebool=true;                                                                  
        draw_sprite(sprNumber_new,floor(hitScore/power(10,4-(i+2))),400+factor*i,211);
        draw_sprite_ext(sprNumberBright_new,floor(hitScore/power(10,4-(i+2))),400+factor*i,211,1,1,0,c_white,onealpha);
    }
}   


/*
if(t&lt;166){                                                                        
    draw_sprite(sprNumber,floor(int0/100),269,211)
}
else {
    show_debug_message(t);
    onebool=true                                                                       
    draw_sprite(sprNumber,floor(hitScore/100),269,211)    
    draw_sprite_ext(sprNumberBright,floor(hitScore/100),269,211,1,1,0,c_white,onealpha)

}

if(t&lt;241){
    draw_sprite(sprNumber,floor((int0%100)/10),400,211)
}
else {
    twobool=true;                                                                               
    draw_sprite(sprNumber,floor((hitScore%100)/10),400,211)   
    draw_sprite_ext(sprNumberBright,floor((hitScore%100)/10),400,211,1,1,0,c_white,twoalpha)

}

if(t&lt;316){
    draw_sprite(sprNumber,floor(int0%10),531,211)
}
else {
    threebool=true                                                                       
    draw_sprite(sprNumber,floor(hitScore%10),531,211)    
    draw_sprite_ext(sprNumberBright,floor(hitScore%10),531,211,1,1,0,c_white,threealpha)

}
*/
surface_reset_target();

shader_set(shExponential)
texture_set_interpolation(true)
draw_surface(surf,0,0)
shader_reset()
texture_set_interpolation(false)

if(overlayalpha&gt;=0){                   
    draw_sprite_ext(sprResultsOverlay,0,0,0,room_width,room_height,0,c_white,overlayalpha)
}
draw_set_alpha(1);

draw_set_align(-1,-1);
//draw_sprite_general(sprResultsBorder,0,0,0,25,19,0,0,32,32,0,c_white,$a2a2a2,c_white,$a2a2a2,1)                                                                             
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
