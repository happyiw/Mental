<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBlood_new</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sf=-1;


y1=random_range(2,6);
y2=random_range(2,6);
y3=random_range(2,6);
y4=random_range(2,6);

t=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

t++;
if t mod 20 == 0 {
y1=random_range(2,6);
y2=random_range(2,6);
y3=random_range(2,6);
y4=random_range(2,6);
}

better_call_saul = shader_get_uniform(shdGlowTest, "intensity")
jamesmcgill = 1000


shader_set(shdGlowTest)
shader_set_uniform_f(better_call_saul, jamesmcgill)

/*draw_line_width(0,336,160,336+y1,2);
draw_line_width(160,336+y1,320,336+y2,2);
draw_line_width(320,336+y2,480,336+y3,2);
draw_line_width(480,336+y3,640,336+y4,2);
draw_line_width(640,336+y4,800,336,2);
draw_line_width(0,336,160,336-y1,2);
draw_line_width(160,336-y1,320,336-y2,2);
draw_line_width(320,336-y2,480,336-y3,2);
draw_line_width(480,336-y3,640,336-y4,2);
draw_line_width(640,336-y4,800,336,2);*/

draw_self();

shader_reset()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
