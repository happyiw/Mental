<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_sound(sndAmbience);
audio_play_sound(sndAmbience,0,true);

global.hitless=false;
global.can_restart=false;

t=0
line_t=0;

for(var i=0; i&lt;9; i++) {
    bruv[i]=random_range(1,3);
}

sh = instance_create(0,0,objPShaderRectangle);
sh.shader=shGlitch;
sh.intensity=1;

fate=false;

accept=0;
accept_alpha1=0.7;
accept_alpha2=0;
accept_alpha3=0;

accept_color3=c_white;

let=0;
let_x1=0;
let_y1=0;
let_x2=800;
let_y2=608;
let_alpha=0;
let_flag=1;


col=1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Particles
// -------- Particle System --------
// Run this code at the beginning of your game
global.fatebarpsys = part_system_create();
part_system_depth(global.fatebarpsys, -1000);


// -------- Particle Type --------
// Run this code at the beginning of your game
fate_alpha=0
global.fatebarptyp = part_type_create();
part_type_shape(global.fatebarpsys, pt_shape_pixel);
part_type_color3(global.fatebarpsys, 15525100, 15260123, 15000812);
part_type_alpha2(global.fatebarpsys, fate_alpha, 0);
part_type_life(global.fatebarpsys, 10, 30);
part_type_size(global.fatebarpsys, 2, 3.5, -0.001, 0);
part_type_speed(global.fatebarpsys, 0.36, 0.61, -0.004, 0);
part_type_direction(global.fatebarpsys, 34.41, 256.53, -0.78, 0);
part_type_orientation(global.fatebarpsys, 348.75, 457.24, 1.07, 0, false);
part_type_gravity(global.fatebarpsys, 0, 270);
part_type_blend(global.fatebarpsys, true);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>line_t++

var A = (input_check(KEY.LEFT) || (global.directionalTapFix &amp;&amp; input_check_pressed(KEY.LEFT))) 
//|| (input_check(KEY.A) || (global.directionalTapFix &amp;&amp; input_check_pressed(KEY.A)));
var D = (input_check(KEY.RIGHT) || (global.directionalTapFix &amp;&amp; input_check_pressed(KEY.RIGHT)))
//|| (input_check(KEY.D) || (global.directionalTapFix &amp;&amp; input_check_pressed(KEY.D)));

if (!fate) {
    t++
}
if t==100 {
    fate=true;
}
if t&gt;=100 {
    if (fate) {
        
        if A {
            accept+=1/100;
            let=max(0,let-(1/100));
        }
        else if D {
            accept=max(0,accept-(1/100));
            let+=1/100;
        }
        else {
            accept=max(0,accept-(1/300));
            let=max(0,let-(1/300));
        }
        if (accept&gt;=1 or let&gt;=1) {
            if (let&gt;=1) {
                audio_stop_sound(sndAmbience);
                audio_play_sound(sndTVTurnOff,0,false);
                accept=0
            }
            else {
                
                part_type_alpha2(global.fatebarpsys, 1, 0);
                audio_stop_sound(sndAmbience);
                audio_play_sound(sndStolenFromRequiem,0,false);
                let=0;
            }
            fate=false;
        }
    }
    else {
        if let&gt;=1 {
            if t&lt;=105 {
                let_alpha=EaseLinear(t-100,0,1,5)
            }
            if t&gt;=105 and t&lt;=130 {
                let_x1=EaseOutQuart(t-105,-800,400,25);
                let_y1=EaseOutQuint(t-105,-608,304,25);
                let_x2=EaseOutQuart(t-105,1600,400,25);
                let_y2=EaseOutQuint(t-105,1216,304,25);
            }
            if t&gt;=127 and t&lt;=132 {
                let_alpha=EaseOutSine(t-127,1,0,5);
            }
            if t==250 {
                part_type_alpha1(global.fatebarptyp,0);
                instance_destroy(objPShaderRectangle);
                var a = instance_create(400,304,objRNGTextTemplate);
                a.shitty_variable=0;
                a.text[0] = "You have chosen your fate, kid."
                a.text[1] = "I shall not stop you since that point."
                a.text[2] = "You did a good job."
                instance_destroy();
            }
        }
        else {
            if t&lt;=300 {
                accept_alpha1=EaseOutQuart(t-100,0.7,0,300);
                repeat(20){
                    partX = random(800);
                    partY = random(608);
                    part_particles_create(global.fatebarpsys, partX , partY, global.fatebarptyp, 1);
                }
                repeat(3) {
                    var a = instance_create(random(800),random(608),objHappy_Bullet_01);
                    a.sprite_index=sprHappy_MayuCherry;
                    a.image_alpha=0;
                    a.image_angle=random(360);
                    a.direction=random(360);
                    a.speed=random_range(1,3);
                    a.persist=true;
                    a.killer=false;
                    a.free_variable[0]=random_range(1,4);
                    a.free_variable[1]=random_range(50,150);
                    a.tag='choice was done';
                }
            }
            if t&gt;=100 and t&lt;=280 {
                accept_alpha2=EaseInOutQuart(t-100,0,1,180)
                if t&gt;=230
                    accept_alpha3=EaseInOutQuart(t-230,0,1,50);
            }
            if t&gt;=280 and t&lt;=330 {
                mc=EaseLinear(t-280,0,1,50);
                accept_alpha3=1;
                accept_color3=merge_colour(c_white,c_black,mc);
            }
            if t&gt;=100 and t&lt;330 {           //Sisyphus Syndrome
                view_xview[0]=random_range(-2,2);
                view_yview[0]=random_range(-2,2);
                with(objHappy_Bullet_01) {
                    if tag=='choice was done' {
                        step1=floor(free_variable[1]/3);
                        step2=floor(free_variable[1]*2/3);
                        if t&lt;=3 {
                            image_xscale=EaseLinear(t,1,free_variable[0],3);
                            image_yscale=image_xscale;
                        }
                        if t&lt;=step1 {
                            image_alpha=EaseLinear(t,0,0.125,step1);
                        }
                        if t&gt;=step2 {
                            image_xscale=EaseLinear(t-step2,1,free_variable[0],free_variable[1]-step2);
                            image_yscale=image_xscale;
                            image_alpha=EaseLinear(t-step2,0,0.2,free_variable[1]-step2);
                        }
                        if t&gt;=free_variable[1]
                            instance_destroy();
                    }
                }
            }
            if t==380 {
                view_xview[0]=0;
                view_yview[0]=0;
                part_type_alpha1(global.fatebarptyp,0);
                instance_destroy(objHappy_Bullet_01);
                instance_destroy(objPShaderRectangle);
                instance_destroy();
                var a = instance_create(400,304,objRNGTextTemplate);
                a.shitty_variable=2;
                a.text[0] = "You have chosen your fate, kid."
                a.text[1] = "You decided not to give up on your road."  
                a.text[2] = "In that case, I wish you the best of luck."
            }
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Particles

fate_alpha=(max(accept,let))*1.2
part_type_alpha2(global.fatebarpsys, fate_alpha, 0);

if t==100
    repeat(20){
        partX = random(800);
        partY = random(608);
        part_particles_create(global.fatebarpsys, partX , partY, global.fatebarptyp, 1);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_sound(sndAmbience)
audio_stop_sound(sndNoise)
audio_stop_sound(sndStolenFromRequiem)
part_particles_clear(global.fatebarpsys);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_sound(sndAmbience)
audio_stop_sound(sndNoise)
audio_stop_sound(sndStolenFromRequiem)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_sprite_ext(sprHappy_Vortex,0,400,304,2,2,t/2,c_white,EaseOutSine(min(t,150),0,0.0225,150));

draw_sprite_ext(sprHappy_Spotlight,0,0,0,1,1,0,c_white,0.25);


draw_set_text(fa_center,fa_middle,c_white,fBaskerville_30)
/*draw_set_alpha(EaseLinear(t,0,0.065*(t&lt;=100),100));
repeat(3) {
    draw_text_transformed(400+random_range(-6,6),304-160+random_range(-6,6),"Hold Button",1.,1,0);
    draw_text_transformed(400+random_range(-6,6),304+160+random_range(-6,6),"Hold Button",1.,1,0);
}
draw_set_alpha(EaseLinear(t,0,0.45*(t&lt;=100),120));
draw_text_transformed(400,304-160,"Hold Button",1.,1,0);
draw_text_transformed(400,304+160,"Hold Button",1.,1,0);*/
draw_set_alpha(EaseLinear(t,0,0.7*(t&lt;=100),120));
draw_text_transformed(230,304+dsin(t)*4,"[ &lt; ] Keep fighting",1.,1,0);
draw_text_transformed(570,304+dsin(t)*4,"[ &gt; ] Let it go",1,1,0);

draw_set_text(fa_center,fa_middle,c_white,fBaskerville_30)

/*

BULLSHIT SECTION STARTS HERE
TAKE AWAY KIDS AND PEOPLE WITH WEAK MENTAL HEALTH

*/

a=30
for(var xx=-a*string_length("Enough.")/2;xx&lt;=800+a*string_length("Enough.")/2+a*string_length("Enough.")*0.75;xx+=a*string_length("Enough.")*0.75) {
    for (var yy=8;yy&lt;=608+a*string_length("Enough.")/2;yy+=a*string_length("Enough.")*0.2) {
        
        for (var i=0; i&lt;=3; i++) {
            drain_bead=(xx-(-a*string_length("Enough.")/2)) div (a*string_length("Enough.")*0.75)
            
            _y=((yy-i*4+line_t/bruv[drain_bead]) mod (608+a*string_length("Enough.")/2))-(a*string_length("Enough.")/2)
            
            _x=xx-_y/(a*string_length("Enough.")*0.2)+random_range(-2,2)*sign(i);
        
            draw_set_alpha(EaseLinear(min(t,150),0,(0.06-i*0.015)*(t&lt;=100),150));
            draw_text_transformed(_x,_y,"Choose.",1,1,-2);
        }
    }
}

draw_sprite_ext(sprHappy_Spotlight,0,0,0,1,1,0,c_white,0.75);

c=c_black
draw_set_alpha(1);
draw_rectangle_colour(0,0,800,56,c,c,c,c,false);
draw_rectangle_colour(0,608,800,608-56,c,c,c,c,false);

draw_rectangle_colour(0,0,-800,608,c,c,c,c,false)
draw_rectangle_colour(800,0,800+800,608,c,c,c,c,false)

draw_set_alpha(1);
//draw_text(400,200,"t: " + string(t) + " fate: "+  string(fate) + "#accept: " + string(accept) + " let: " + string(let));

draw_set_alpha(1)
if (fate) {
    draw_sprite_ext(sprReverseSpotlight,0,0,0,1,1,0,c_white,max(0,(max(accept*0.65,0))-0.4));
    draw_sprite_ext(sprHappy_Darkness,0,0,0,1,1,0,c_black,max(0,(max(0,let))-random(0.1)));
}
else {
    if let&gt;=1 {
        //you give up
        draw_set_alpha(1)
        draw_rectangle_colour(-800,-608,1600,1216,c_black,c_black,c_black,c_black,false);
        draw_set_alpha(let_alpha)
        draw_rectangle_colour(let_x1,let_y1,let_x2,let_y2,c_white,c_white,c_white,c_white,false);
        draw_set_alpha(let_alpha/10)
        draw_sprite_tiled(sprCRTScanline,0,0,line_t*0.75);
    }
    if let&lt;1 and t&gt;=100 {
        //shit happens
        draw_set_alpha(1)       //i love spamming this line
        
        shakePower=8;
        repeat(4) {
            draw_surface_ext(application_surface, random_range(-shakePower,shakePower), random_range(-shakePower,shakePower), 1, 1, 0, c_white, 0.2);
        }
        
        draw_sprite_ext(sprReverseSpotlight,0,0,0,1,1,0,c_white,accept_alpha1);
        draw_sprite_ext(sprReverseSpotlight,0,400,-304,-2,2,0,c_white,accept_alpha2);
        draw_sprite_ext(sprReverseSpotlight,0,400,-304,2,2,0,c_white,accept_alpha2);
        draw_sprite_ext(sprHappy_Darkness,0,0,0,1,1,0,accept_color3,min(1,accept_alpha3));
        
        draw_rectangle_colour(0,0,-800,608,c,c,c,c,false)
        draw_rectangle_colour(800,0,800+800,608,c,c,c,c,false)
    }
}

draw_set_alpha(1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
